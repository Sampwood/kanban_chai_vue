{"version":3,"sources":["webpack:///static/js/0.d60c8ab86caf9f8a6a39.js","webpack:///./~/@sentry/core/dist/integrations/sdkinformation.js","webpack:///./~/@sentry/minimal/dist/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/@sentry/hub/dist/hub.js","webpack:///./~/@sentry/core/dist/integrations/extraerrordata.js","webpack:///./~/@sentry/core/dist/promisebuffer.js","webpack:///./~/@sentry/core/dist/integration.js","webpack:///./~/@sentry/core/dist/transports/noop.js","webpack:///./~/@sentry/core/dist/dsn.js","webpack:///./~/@sentry/core/dist/basebackend.js","webpack:///./~/@sentry/core/dist/index.js","webpack:///./~/@sentry/core/dist/integrations/pluggable/debug.js","webpack:///./~/@sentry/utils/object.js","webpack:///./~/tslib/tslib.es6.js","webpack:///./~/@sentry/utils/logger.js","webpack:///./~/@sentry/core/dist/integrations/inboundfilters.js","webpack:///./~/@sentry/core/dist/integrations/index.js","webpack:///./~/@sentry/core/dist/sdk.js","webpack:///./~/@sentry/core/dist/baseclient.js","webpack:///./~/@sentry/utils/misc.js","webpack:///./~/@sentry/utils/path.js","webpack:///./~/@sentry/core/dist/integrations/functiontostring.js","webpack:///./~/@sentry/core/dist/integrations/dedupe.js","webpack:///./~/@sentry/types/dist/index.js","webpack:///./~/@sentry/core/dist/interfaces.js","webpack:///./~/@sentry/core/dist/integrations/pluggable/rewriteframes.js","webpack:///./~/@sentry/hub/dist/index.js","webpack:///./~/@sentry/core/dist/error.js","webpack:///./~/@sentry/browser/dist/index.js","webpack:///./~/@sentry/utils/is.js","webpack:///./~/@sentry/utils/async.js","webpack:///./~/@sentry/core/dist/api.js","webpack:///./~/@sentry/hub/dist/scope.js","webpack:///./~/@sentry/utils/string.js"],"names":["webpackJsonp","2e32","module","exports","__webpack_require__","Object","defineProperty","value","logger_1","SDKInformation","this","name","prototype","setupOnce","logger","warn","33Io","callOnHub","method","args","_i","arguments","length","hub","hub_1","getCurrentHub","apply","tslib_1","__spread","Error","captureException","exception","syntheticException","originalException","captureMessage","message","level","captureEvent","event","addBreadcrumb","breadcrumb","configureScope","callback","withScope","_callOnClient","3IRH","webpackPolyfill","deprecate","paths","children","enumerable","get","l","i","A6ZE","getMainCarrier","carrier","misc_1","getGlobalObject","__SENTRY__","undefined","makeMain","registry","oldHub","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","isOlderThan","API_VERSION","Hub","domain","dynamicRequire","activeDomain","active","registryHubTopStack","getStackTop","client","scope_1","Scope","clone","scope","_Oo","version","stack","push","invokeClient","_a","top","invokeClientAsync","catch","err","error","bindClient","addScopeListener","s","getBackend","storeScope","pushScope","getStack","parentScope","getClient","popScope","pop","getScope","hint","eventId","_lastEventId","uuid4","__assign","event_id","lastEventId","run","getIntegration","integration","_oO","id","call","BvW5","is_1","ExtraErrorData","_this","addGlobalEventProcessor","__awaiter","self","__generator","enhanceEventWithErrorData","isError","errorData","extractErrorData","extra","e_1","_b","nativeKeys_1","name_1","constructor","errorKeys","getOwnPropertyNames","filter","key","indexOf","extraErrorInfo","errorKeys_1","__values","errorKeys_1_1","next","done","e_1_1","return","oO","E+6+","error_1","PromiseBuffer","limit","buffer","isReady","add","task","then","remove","Promise","reject","SentryError","removedTask","splice","drain","timeout","resolve","capturedSetTimeout","setTimeout","all","clearTimeout","Eu5d","getIntegrationsToSetup","options","e_2","defaultIntegrations","userIntegrations","integrations","Array","isArray","userIntegrationsNames","map","pickedIntegrationsNames","defaultIntegrations_1","defaultIntegrations_1_1","defaultIntegration","getIntegrationName","userIntegrations_1","userIntegrations_1_1","userIntegration","e_2_1","setupIntegration","installedIntegrations","install","log","setupIntegrations","forEach","LOEF","types_1","NoopTransport","sendEvent","_","reason","status","Status","Skipped","close","MzuG","object_1","DSN_REGEX","Dsn","from","fromString","fromComponents","validate","toString","withPassword","host","path","pass","port","projectId","protocol","user","str","match","exec","__read","slice","_c","lastPath","split","join","assign","components","component","isNaN","parseInt","NJTI","noop_1","BaseBackend","dsn","transport","setupTransport","eventFromException","_exception","_hint","eventFromMessage","_message","_level","serialize","storeBreadcrumb","getTransport","PEIW","minimal_1","api_1","API","baseclient_1","BaseClient","basebackend_1","dsn_1","promisebuffer_1","interfaces_1","LogLevel","sdk_1","initAndBind","Integrations","QbGa","Debug","debugger","stringify","console","JSON","T/9k","global","object","serializer","normalize","deserialize","parse","fill","source","replacement","__sentry__","original","wrapped","__sentry_original__","__sentry_wrapped__","urlEncode","keys","encodeURIComponent","utf8Length","encodeURI","jsonSize","serializeValue","type","string_1","truncate","normalizeValue","serializeObject","depth","isPlainObject","serialized_1","val_1","v","limitObjectDepthToSize","maxSize","MAX_SERIALIZE_EXCEPTION_DEPTH","MAX_SERIALIZE_EXCEPTION_SIZE","serialized","serializeKeysToEventMessage","maxLength","MAX_SERIALIZE_KEYS_LENGTH","includedKeys","target","TypeError","to","nextKey","hasOwnProperty","objectifyError","_events","window","document","Date","isUndefined","cycleserializer","_key","thisPos","Infinity","safeNormalize","input","TToO","__webpack_exports__","__extends","d","b","__","extendStatics","create","__rest","e","t","p","getOwnPropertySymbols","__decorate","decorators","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","fulfilled","step","rejected","result","body","verb","n","op","f","y","label","ops","trys","g","sent","throw","Symbol","iterator","__exportStar","m","o","ar","concat","__await","__asyncGenerator","a","q","resume","settle","fulfill","shift","asyncIterator","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","k","default","__importDefault","setPrototypeOf","__proto__","VAgH","Logger","enabled","disable","enable","consoleSandbox","W+kn","DEFAULT_IGNORE_ERRORS","InboundFilters","clientOptions","getOptions","mergeOptions","shouldDropEvent","isSentryError","getEventDescription","isIgnoredError","isBlacklistedUrl","getEventFilterUrl","isWhitelistedUrl","ignoreInternal","values","ignoreErrors","getPossibleEventMessages","some","pattern","isMatchingPattern","blacklistUrls","url","whitelistUrls","isRegExp","test","includes","stacktrace","frames","filename","W18E","dedupe_1","Dedupe","functiontostring_1","FunctionToString","sdkinformation_1","inboundfilters_1","extraerrordata_1","debug_1","rewriteframes_1","RewriteFrames","b0X5","clientClass","debug","cSX3","async_1","integration_1","backendClass","backend","isEnabled","installed","isPrimitive","processEvent","finalEvent","beforeBreadcrumb","maxBreadcrumbs","timestamp","getTime","mergedBreadcrumb","finalBreadcrumb","Math","min","getDsn","prepareEvent","environment","release","dist","prepared","request","applyToEvent","send","beforeSend","sampleRate","isInternalException","exception_1","response","random","data","forget","Invalid","RateLimit","Failed","reduce","prev","current","getIntegrations","dDlv","process","require","isNodeEnv","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","replace","htmlTreeAsString","elem","nextStr","currentElem","out","height","len","sepLength","htmlElementAsString","parentNode","reverse","className","classes","attr","tagName","toLowerCase","isString","attrWhitelist","getAttribute","parseUrl","query","fragment","relative","levels","originalConsole","wrappedLevels","dOdG","normalizeArray","parts","allowAboveRoot","up","last","unshift","splitPath","splitPathRe","resolvedPath","resolvedAbsolute","charAt","trim","start","end","substr","fromParts","toParts","samePartsLength","outputParts","isPathAbsolute","isAbsolute","trailingSlash","normalizedPath","dirname","root","dir","basename","ext","ficd","originalFunctionToString","Function","context","fvxt","currentEvent","previousEvent","isSameMessageEvent","isSameExceptionEvent","currentMessage","previousMessage","isSameFingerprint","isSameStacktrace","getFramesFromEvent","currentFrames","previousFrames","frameA","frameB","lineno","colno","function","getExceptionFromEvent","previousException","currentException","currentFingerprint","fingerprint","previousFingerprint","hct9","Severity","Info","Warning","Fatal","Critical","Log","fromHttpCode","code","Success","Unknown","hoAL","nnpQ","path_1","iteratee","frame","base","startsWith","_d","_e","q5hm","r5K/","_super","_newTarget","rnrV","unwrapExports","x","createCommonjsModule","fn","safeAdd","lsw","bitRotateLeft","cnt","md5cmn","md5ff","md5gg","md5hh","md5ii","binlMD5","olda","oldb","oldc","oldd","binl2rstr","output","length32","String","fromCharCode","rstr2binl","length8","charCodeAt","rstrMD5","rstrHMACMD5","hash","bkey","ipad","opad","rstr2hex","hexTab","str2rstrUTF8","unescape","rawMD5","hexMD5","rawHMACMD5","hexHMACMD5","md5","string","_has","getLocationHref","location","href","getLocationOrigin","origin","hostname","exceptionFromStacktrace","prepareFramesForEvent","eventFromPlainObject","exceptionKeys","sort","__serialized__","object_7","object_8","computeStackTrace","frames_1","eventFromStacktrace","localStack","firstFrameFunction","func","lastFrameFunction","string_4","column","in_app","line","STACKTRACE_LIMIT","addExceptionTypeValue","shouldIgnoreOnError","ignoreOnError","ignoreNextOnError","wrap","before","is_6","sentryWrapped","wrappedArguments","arg","handleEvent","ex","core","addEventProcessor","processedEvent","mechanism","object_6","property","breadcrumbEventHandler","eventName","keypressTimeout","lastCapturedEvent","misc_5","category","keypressEventHandler","isContentEditable","debounceDuration","getFunctionName","addSentryBreadcrumb","serializedData","event_1","object_2","Breadcrumbs","dist_1","misc_8","logger_2","init","BrowserClient","showReportDialog","forceLoad","onLoad","commonjsGlobal","dist_2","is","wat","isErrorEvent","isDOMError","isDOMException","isFunction","is_2","is_3","is_4","is_5","is_7","is_10","misc","misc_3","misc_7","supports","supportsErrorEvent","ErrorEvent","supportsDOMError","DOMError","supportsDOMException","DOMException","supportsFetch","Headers","Request","Response","supportsNativeFetch","fetch","supportsBeacon","navigator","supportsReportingObserver","supportsReferrerPolicy","referrerPolicy","supportsHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supports_4","supports_5","supports_6","supports_7","supports_8","supports_9","max","snipLine","newLine","ll","safeJoin","delimiter","search","string_3","object_4","window$1","TraceKit","report","collectWindowErrors","remoteFetching","linesOfContext","extendToAsynchronousCallbacks","_slice","UNKNOWN_FUNCTION","ERROR_TYPES_RE","subscribe","handler","handlers","unsubscribe","uninstallGlobalHandler","uninstallGlobalUnhandledRejectionHandler","notifyHandlers","isWindowError","inner","traceKitWindowOnError","lineNo","columnNo","errorObj","lastExceptionStack","augmentStackTraceWithInitialElement","processLastException","msg","groups","guessFunctionName","gatherContext","mode","_oldOnerrorHandler","traceKitWindowOnUnhandledRejection","detail","installGlobalHandler","_onErrorHandlerInstalled","onerror","installGlobalUnhandledRejectionHandler","_onUnhandledRejectionHandlerInstalled","_oldOnunhandledrejectionHandler","onunhandledrejection","_lastExceptionStack","_lastException","lastException","incomplete","loadSource","XMLHttpRequest","ActiveXObject","open","responseText","getSource","sourceCache","reFunctionArgNames","reGuessFunction","linesBefore","floor","linesAfter","escapeRegExp","text","escapeCodeAsRegExpForMatchingInsideHTML","findSourceInUrls","re","urls","j","substring","index","lastIndexOf","findSourceInLine","RegExp","findSourceByFunctionBody","scripts","getElementsByTagName","codeRE","eventRE","script","src","computeStackTraceFromStackProp","isEval","submatch","element","gecko","winjs","geckoEval","chromeEval","lines","reference","isNative","columnNumber","xhr","sourceMaps","sourceMapAddress","computeStackTraceFromStacktraceProp","opera10Regex","opera11Regex","exc","computeStackTraceFromOperaMultiLineMessage","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","item","relativeLine","pos","innerText","midline","stackInfo","initial","partial","computeStackTraceByWalkingCallerChain","functionName","funcs","recursion","curr","caller","description","sourceURL","fileName","lineNumber","computeStackTraceOfCaller","ofCaller","_helper","fnName","originalFn","originalCallback","BaseTransport","getStoreEndpointWithUrlEncodedAuth","global$1","FetchTransport","defaultOptions","XHRTransport","onreadystatechange","readyState","global$2","BeaconTransport","sendBeacon","index$1","freeze","BrowserBackend","stackTraceLimit","transportOptions","handled","attachStacktrace","SDK_NAME","platform","sdk","packages","createElement","async","getReportDialogEndpoint","head","appendChild","lastHref","ReportTypes","GlobalHandlers","eventFromGlobalHandler","TryCatch","wrapTimeFunction","wrapRAF","wrapEventTarget","proto","bind","clickHandler","keypressHandler","eventType","global$3","beacon","dom","sentry","instrumentBeacon","beaconReplacementFunction","originalBeaconFunction","filterUrl","getStoreEndpoint","breadcrumbData","instrumentConsole","originalConsoleLevel","instrumentDOM","addEventListener","instrumentFetch","originalFetch","fetchInput","fetchData","status_code","instrumentHistory","historyReplacementFunction","originalHistoryFunction","captureUrlChange","parsedLoc","parsedTo","parsedFrom","oldOnPopState","onpopstate","currentHref","instrumentXHR","wrapProp","prop","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","linkedErrors","walkErrorTree","global$4","UserAgent","headers","userAgent","Ember","oldOnError","addIntegrationToSdkInfo","testing","RSVP","on","setExtra","Vue","formatComponentName","vm","$root","_isVue","$options","_componentTag","__file","config","errorHandler","info","componentName","propsData","lifecycleHook","ReportingObserver","types","Crash","Deprecation","Intervention","buffered","observe","reports","reports_1","reports_1_1","details","plainBody","crashId","BrowserIntegrations","INTEGRATIONS","Transports","SDK_VERSION","sVPH","ucAQ","promise","filterAsync","array","predicate","verdicts","yCKG","dsnObject","getBaseUrl","getStoreEndpointPath","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","Content-Type","X-Sentry-Auth","dialogOptions","endpoint","encodedOptions","email","yZla","getGlobalEventProcessors","globalEventProcessors","notifyingListeners","scopeListeners","eventProcessors","breadcrumbs","tags","notifyScopeListeners","notifyEventProcessors","processor","setUser","setTag","setFingerprint","setLevel","newScope","clear","applyFingerprint","hasNoBreadcrumbs","zGPE"],"mappings":"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","file":"static/js/0.d60c8ab86caf9f8a6a39.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"2e32\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = __webpack_require__(\"VAgH\");\n/**\n * @deprecated\n * This file can be safely removed in the next major bump\n */\n/** Adds SDK info to an event. */\nvar SDKInformation = /** @class */ (function () {\n    function SDKInformation() {\n        /**\n         * @inheritDoc\n         */\n        this.name = 'SDKInformation';\n    }\n    /**\n     * @inheritDoc\n     */\n    SDKInformation.prototype.setupOnce = function () {\n        logger_1.logger.warn(\"SDKInformation Integration is deprecated and can be safely removed. It's functionality has been merged into the SDK's core.\");\n    };\n    return SDKInformation;\n}());\nexports.SDKInformation = SDKInformation;\n//# sourceMappingURL=sdkinformation.js.map\n\n/***/ }),\n\n/***/ \"33Io\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar hub_1 = __webpack_require__(\"q5hm\");\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = hub_1.getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nfunction captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\nexports.captureException = captureException;\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\nexports.captureMessage = captureMessage;\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\nexports.captureEvent = captureEvent;\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\nexports.addBreadcrumb = addBreadcrumb;\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\nexports.configureScope = configureScope;\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n    callOnHub('withScope', callback);\n}\nexports.withScope = withScope;\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nfunction _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['invokeClient', method], args));\n}\nexports._callOnClient = _callOnClient;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"3IRH\":\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"A6ZE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(module) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar logger_1 = __webpack_require__(\"VAgH\");\nvar misc_1 = __webpack_require__(\"dDlv\");\nvar scope_1 = __webpack_require__(\"yZla\");\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n */\nexports.API_VERSION = 3;\n/**\n * Internal class used to make sure we always have the latest internal functions\n * working in case we have a version conflict.\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, version) {\n        if (scope === void 0) { scope = new scope_1.Scope(); }\n        if (version === void 0) { version = exports.API_VERSION; }\n        this.version = version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this.stack = [];\n        this.stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client/client.\n     * @param args Arguments to pass to the client/frontend.\n     */\n    Hub.prototype.invokeClient = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * Internal helper function to call an async method on the top client if it\n     * exists.\n     *\n     * @param method The method to call on the client/client.\n     * @param args Arguments to pass to the client/frontend.\n     */\n    Hub.prototype.invokeClientAsync = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope])).catch(function (err) {\n                logger_1.logger.error(err);\n            });\n        }\n    };\n    /**\n     * Checks if this hub's version is older than the given version.\n     *\n     * @param version A version number to compare to.\n     * @return True if the given version is newer; otherwise false.\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this.version < version;\n    };\n    /**\n     * This binds the given client to the current scope.\n     * @param client An SDK client (client) instance.\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (top && top.scope && client) {\n            top.scope.addScopeListener(function (s) {\n                if (client.getBackend) {\n                    try {\n                        client.getBackend().storeScope(s);\n                    }\n                    catch (_a) {\n                        // Do nothing\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * Create a new scope to store context information.\n     *\n     * The scope will be layered on top of the current one. It is isolated, i.e. all\n     * breadcrumbs and context information added to this scope will be removed once\n     * the scope ends. Be sure to always remove this scope with {@link this.popScope}\n     * when the operation finishes or throws.\n     *\n     * @returns Scope, the new cloned scope\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = scope_1.Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * Removes a previously pushed scope from the stack.\n     *\n     * This restores the state before the scope was pushed. All breadcrumbs and\n     * context information added since the last call to {@link this.pushScope} are\n     * discarded.\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * Creates a new scope with and executes the given operation within.\n     * The scope is automatically removed once the operation\n     * finishes or throws.\n     *\n     * This is essentially a convenience function for:\n     *\n     *     pushScope();\n     *     callback();\n     *     popScope();\n     *\n     * @param callback that will be enclosed into push/popScope.\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /** Returns the client of the top stack. */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this.stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this.stack[this.stack.length - 1];\n    };\n    /**\n     * Captures an exception event and sends it to Sentry.\n     *\n     * @param exception An exception-like object.\n     * @param hint May contain additional information about the original exception.\n     * @returns The generated eventId.\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = misc_1.uuid4());\n        this.invokeClientAsync('captureException', exception, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * Captures a message event and sends it to Sentry.\n     *\n     * @param message The message to send to Sentry.\n     * @param level Define the level of the message.\n     * @param hint May contain additional information about the original exception.\n     * @returns The generated eventId.\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = misc_1.uuid4());\n        this.invokeClientAsync('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * Captures a manually created event and sends it to Sentry.\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional information about the original exception.\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = misc_1.uuid4());\n        this.invokeClientAsync('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * This is the getter for lastEventId.\n     *\n     * @returns The last event id of a captured event.\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * Records a new breadcrumb which will be attached to future events.\n     *\n     * Breadcrumbs will be added to subsequent events to provide more context on\n     * user's actions prior to an error or crash.\n     *\n     * @param breadcrumb The breadcrumb to record.\n     * @param hint May contain additional information about the original breadcrumb.\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        this.invokeClient('addBreadcrumb', breadcrumb, tslib_1.__assign({}, hint));\n    };\n    /**\n     * Callback to set context information onto the scope.\n     *\n     * @param callback Callback function that receives Scope.\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            // TODO: freeze flag\n            callback(top.scope);\n        }\n    };\n    /**\n     * For the duraction of the callback, this hub will be set as the global current Hub.\n     * This function is useful if you want to run your own client and hook into an already initialized one\n     * e.g.: Reporting issues to your own sentry when running in your component while still using the users configuration.\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /** Returns the integration if installed on the current client. */\n    Hub.prototype.getIntegration = function (integration) {\n        try {\n            return this.getClient().getIntegration(integration);\n        }\n        catch (_oO) {\n            logger_1.logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    return Hub;\n}());\nexports.Hub = Hub;\n/** Returns the global shim registry. */\nfunction getMainCarrier() {\n    var carrier = misc_1.getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\nexports.getMainCarrier = getMainCarrier;\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\nexports.makeMain = makeMain;\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(exports.API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = misc_1.dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(exports.API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, scope_1.Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\nexports.getCurrentHub = getCurrentHub;\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.hasHubOnCarrier = hasHubOnCarrier;\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n */\nfunction getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    else {\n        carrier.__SENTRY__ = {};\n        carrier.__SENTRY__.hub = new Hub();\n        return carrier.__SENTRY__.hub;\n    }\n}\nexports.getHubFromCarrier = getHubFromCarrier;\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nfunction setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\nexports.setHubOnCarrier = setHubOnCarrier;\n//# sourceMappingURL=hub.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"3IRH\")(module)))\n\n/***/ }),\n\n/***/ \"BvW5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar hub_1 = __webpack_require__(\"q5hm\");\nvar is_1 = __webpack_require__(\"sVPH\");\nvar logger_1 = __webpack_require__(\"VAgH\");\n/** Patch toString calls to return proper name for wrapped functions */\nvar ExtraErrorData = /** @class */ (function () {\n    function ExtraErrorData() {\n        /**\n         * @inheritDoc\n         */\n        this.name = ExtraErrorData.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    ExtraErrorData.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event, hint) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(ExtraErrorData);\n                if (!self) {\n                    return [2 /*return*/, event];\n                }\n                return [2 /*return*/, self.enhanceEventWithErrorData(event, hint)];\n            });\n        }); });\n    };\n    /**\n     * Attaches extracted information from the Error object to extra field in the SentryEvent\n     */\n    ExtraErrorData.prototype.enhanceEventWithErrorData = function (event, hint) {\n        if (!hint || !hint.originalException || !is_1.isError(hint.originalException)) {\n            return event;\n        }\n        var errorData = this.extractErrorData(hint.originalException);\n        if (errorData) {\n            return tslib_1.__assign({}, event, { extra: tslib_1.__assign({}, event.extra, errorData) });\n        }\n        return event;\n    };\n    /**\n     * Extract extra information from the Error object\n     */\n    ExtraErrorData.prototype.extractErrorData = function (error) {\n        var e_1, _a, _b;\n        // We are trying to enhance already existing event, so no harm done if it won't succeed\n        try {\n            var nativeKeys_1 = ['name', 'message', 'stack', 'line', 'column', 'fileName', 'lineNumber', 'columnNumber'];\n            var name_1 = error.name || error.constructor.name;\n            var errorKeys = Object.getOwnPropertyNames(error).filter(function (key) { return nativeKeys_1.indexOf(key) === -1; });\n            if (errorKeys.length) {\n                var extraErrorInfo = {};\n                try {\n                    for (var errorKeys_1 = tslib_1.__values(errorKeys), errorKeys_1_1 = errorKeys_1.next(); !errorKeys_1_1.done; errorKeys_1_1 = errorKeys_1.next()) {\n                        var key = errorKeys_1_1.value;\n                        var value = error[key];\n                        if (is_1.isError(value)) {\n                            value = value.name || value.constructor.name;\n                        }\n                        extraErrorInfo[key] = value;\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (errorKeys_1_1 && !errorKeys_1_1.done && (_a = errorKeys_1.return)) _a.call(errorKeys_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return _b = {},\n                    _b[name_1] = extraErrorInfo,\n                    _b;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger_1.logger.error('Unable to extract extra data from the Error object:', oO);\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtraErrorData.id = 'ExtraErrorData';\n    return ExtraErrorData;\n}());\nexports.ExtraErrorData = ExtraErrorData;\n//# sourceMappingURL=extraerrordata.js.map\n\n/***/ }),\n\n/***/ \"E+6+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar error_1 = __webpack_require__(\"r5K/\");\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(limit) {\n        this.limit = limit;\n        /** Internal set of queued Promises */\n        this.buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this.limit === undefined || this.length() < this.limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                if (!this.isReady()) {\n                    return [2 /*return*/, Promise.reject(new error_1.SentryError('Not adding Promise due to buffer limit reached.'))];\n                }\n                if (this.buffer.indexOf(task) === -1) {\n                    this.buffer.push(task);\n                }\n                task\n                    .then(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\n                    return [2 /*return*/, this.remove(task)];\n                }); }); })\n                    .catch(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    return tslib_1.__generator(this, function (_a) {\n                        return [2 /*return*/, this.remove(task).catch(function () {\n                                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                                // because it's a new Promise chain.\n                            })];\n                    });\n                }); });\n                return [2 /*return*/, task];\n            });\n        });\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var removedTask;\n            return tslib_1.__generator(this, function (_a) {\n                removedTask = this.buffer.splice(this.buffer.indexOf(task), 1)[0];\n                return [2 /*return*/, removedTask];\n            });\n        });\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this.buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) {\n                        var capturedSetTimeout = setTimeout(function () {\n                            if (timeout && timeout > 0) {\n                                resolve(false);\n                            }\n                        }, timeout);\n                        Promise.all(_this.buffer)\n                            .then(function () {\n                            clearTimeout(capturedSetTimeout);\n                            resolve(true);\n                        })\n                            .catch(function () {\n                            resolve(true);\n                        });\n                    })];\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexports.PromiseBuffer = PromiseBuffer;\n//# sourceMappingURL=promisebuffer.js.map\n\n/***/ }),\n\n/***/ \"Eu5d\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar logger_1 = __webpack_require__(\"VAgH\");\nexports.installedIntegrations = [];\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n    var e_1, _a, e_2, _b;\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames = [];\n        try {\n            // Leave only unique default integrations, that were not overridden with provided user integrations\n            for (var defaultIntegrations_1 = tslib_1.__values(defaultIntegrations), defaultIntegrations_1_1 = defaultIntegrations_1.next(); !defaultIntegrations_1_1.done; defaultIntegrations_1_1 = defaultIntegrations_1.next()) {\n                var defaultIntegration = defaultIntegrations_1_1.value;\n                if (userIntegrationsNames.indexOf(getIntegrationName(defaultIntegration)) === -1 &&\n                    pickedIntegrationsNames.indexOf(getIntegrationName(defaultIntegration)) === -1) {\n                    integrations.push(defaultIntegration);\n                    pickedIntegrationsNames.push(getIntegrationName(defaultIntegration));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (defaultIntegrations_1_1 && !defaultIntegrations_1_1.done && (_a = defaultIntegrations_1.return)) _a.call(defaultIntegrations_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            // Don't add same user integration twice\n            for (var userIntegrations_1 = tslib_1.__values(userIntegrations), userIntegrations_1_1 = userIntegrations_1.next(); !userIntegrations_1_1.done; userIntegrations_1_1 = userIntegrations_1.next()) {\n                var userIntegration = userIntegrations_1_1.value;\n                if (pickedIntegrationsNames.indexOf(getIntegrationName(userIntegration)) === -1) {\n                    integrations.push(userIntegration);\n                    pickedIntegrationsNames.push(getIntegrationName(userIntegration));\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (userIntegrations_1_1 && !userIntegrations_1_1.done && (_b = userIntegrations_1.return)) _b.call(userIntegrations_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\nexports.getIntegrationsToSetup = getIntegrationsToSetup;\n/** Setup given integration */\nfunction setupIntegration(integration, options) {\n    if (exports.installedIntegrations.indexOf(getIntegrationName(integration)) !== -1) {\n        return;\n    }\n    try {\n        integration.setupOnce();\n    }\n    catch (_Oo) {\n        /** @deprecated */\n        // TODO: Remove in v5\n        // tslint:disable:deprecation\n        if (integration.install) {\n            logger_1.logger.warn(\"Integration \" + getIntegrationName(integration) + \": The install method is deprecated. Use \\\"setupOnce\\\".\");\n            integration.install(options);\n        }\n        // tslint:enable:deprecation\n    }\n    exports.installedIntegrations.push(getIntegrationName(integration));\n    logger_1.logger.log(\"Integration installed: \" + getIntegrationName(integration));\n}\nexports.setupIntegration = setupIntegration;\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[getIntegrationName(integration)] = integration;\n        setupIntegration(integration, options);\n    });\n    return integrations;\n}\nexports.setupIntegrations = setupIntegrations;\n/**\n * Returns the integration static id.\n * @param integration Integration to retrieve id\n */\nfunction getIntegrationName(integration) {\n    /**\n     * @depracted\n     */\n    // tslint:disable-next-line:no-unsafe-any\n    return integration.constructor.id || integration.name;\n}\n//# sourceMappingURL=integration.js.map\n\n/***/ }),\n\n/***/ \"LOEF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar types_1 = __webpack_require__(\"hct9\");\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve({\n                        reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n                        status: types_1.Status.Skipped,\n                    })];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(true)];\n            });\n        });\n    };\n    return NoopTransport;\n}());\nexports.NoopTransport = NoopTransport;\n//# sourceMappingURL=noop.js.map\n\n/***/ }),\n\n/***/ \"MzuG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar is_1 = __webpack_require__(\"sVPH\");\nvar object_1 = __webpack_require__(\"T/9k\");\nvar error_1 = __webpack_require__(\"r5K/\");\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this.fromString(from);\n        }\n        else {\n            this.fromComponents(from);\n        }\n        this.validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype.fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new error_1.SentryError('Invalid Dsn');\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        object_1.assign(this, { host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype.fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype.validate = function () {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(['protocol', 'user', 'host', 'projectId']), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var component = _c.value;\n                if (!this[component]) {\n                    throw new error_1.SentryError(\"Invalid Dsn: Missing \" + component);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new error_1.SentryError(\"Invalid Dsn: Unsupported protocol \\\"\" + this.protocol + \"\\\"\");\n        }\n        if (this.port && is_1.isNaN(parseInt(this.port, 10))) {\n            throw new error_1.SentryError(\"Invalid Dsn: Invalid port number \\\"\" + this.port + \"\\\"\");\n        }\n    };\n    return Dsn;\n}());\nexports.Dsn = Dsn;\n//# sourceMappingURL=dsn.js.map\n\n/***/ }),\n\n/***/ \"NJTI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar logger_1 = __webpack_require__(\"VAgH\");\nvar object_1 = __webpack_require__(\"T/9k\");\nvar error_1 = __webpack_require__(\"r5K/\");\nvar noop_1 = __webpack_require__(\"LOEF\");\n/**\n * This is the base implemention of a Backend.\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new browser backend instance. */\n    function BaseBackend(options) {\n        this.options = options;\n        if (!this.options.dsn) {\n            logger_1.logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this.transport = this.setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype.setupTransport = function () {\n        return new noop_1.NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                throw new error_1.SentryError('Backend has to implement `eventFromException` method');\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                throw new error_1.SentryError('Backend has to implement `eventFromMessage` method');\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                // TODO: Remove with v5\n                // tslint:disable-next-line\n                if (this.transport.captureEvent) {\n                    // tslint:disable-next-line\n                    return [2 /*return*/, this.transport.captureEvent(event)];\n                }\n                // --------------------\n                return [2 /*return*/, this.transport.sendEvent(object_1.serialize(event))];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.storeBreadcrumb = function (_) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.storeScope = function (_) {\n        // Noop\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this.transport;\n    };\n    return BaseBackend;\n}());\nexports.BaseBackend = BaseBackend;\n//# sourceMappingURL=basebackend.js.map\n\n/***/ }),\n\n/***/ \"PEIW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar minimal_1 = __webpack_require__(\"33Io\");\nexports.addBreadcrumb = minimal_1.addBreadcrumb;\nexports.captureException = minimal_1.captureException;\nexports.captureEvent = minimal_1.captureEvent;\nexports.captureMessage = minimal_1.captureMessage;\nexports.configureScope = minimal_1.configureScope;\nexports.withScope = minimal_1.withScope;\nvar hub_1 = __webpack_require__(\"q5hm\");\nexports.addGlobalEventProcessor = hub_1.addGlobalEventProcessor;\nexports.getCurrentHub = hub_1.getCurrentHub;\nexports.Hub = hub_1.Hub;\nexports.getHubFromCarrier = hub_1.getHubFromCarrier;\nexports.Scope = hub_1.Scope;\nvar api_1 = __webpack_require__(\"yCKG\");\nexports.API = api_1.API;\nvar baseclient_1 = __webpack_require__(\"cSX3\");\nexports.BaseClient = baseclient_1.BaseClient;\nvar basebackend_1 = __webpack_require__(\"NJTI\");\nexports.BaseBackend = basebackend_1.BaseBackend;\nvar dsn_1 = __webpack_require__(\"MzuG\");\nexports.Dsn = dsn_1.Dsn;\nvar error_1 = __webpack_require__(\"r5K/\");\nexports.SentryError = error_1.SentryError;\nvar promisebuffer_1 = __webpack_require__(\"E+6+\");\nexports.PromiseBuffer = promisebuffer_1.PromiseBuffer;\nvar interfaces_1 = __webpack_require__(\"hoAL\");\nexports.LogLevel = interfaces_1.LogLevel;\nvar sdk_1 = __webpack_require__(\"b0X5\");\nexports.initAndBind = sdk_1.initAndBind;\nvar noop_1 = __webpack_require__(\"LOEF\");\nexports.NoopTransport = noop_1.NoopTransport;\nvar Integrations = __webpack_require__(\"W18E\");\nexports.Integrations = Integrations;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"QbGa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar hub_1 = __webpack_require__(\"q5hm\");\n/** JSDoc */\nvar Debug = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Debug(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Debug.id;\n        this.options = tslib_1.__assign({ debugger: false, stringify: false }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    Debug.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event, hint) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(Debug);\n                if (self) {\n                    // tslint:disable:no-console\n                    // tslint:disable:no-debugger\n                    if (self.options.debugger) {\n                        debugger;\n                    }\n                    if (self.options.stringify) {\n                        console.log(JSON.stringify(event, null, 2));\n                        if (hint) {\n                            console.log(JSON.stringify(hint, null, 2));\n                        }\n                    }\n                    else {\n                        console.log(event);\n                        if (hint) {\n                            console.log(hint);\n                        }\n                    }\n                }\n                return [2 /*return*/, event];\n            });\n        }); });\n    };\n    /**\n     * @inheritDoc\n     */\n    Debug.id = 'Debug';\n    return Debug;\n}());\nexports.Debug = Debug;\n//# sourceMappingURL=debug.js.map\n\n/***/ }),\n\n/***/ \"T/9k\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = __webpack_require__(\"sVPH\");\nvar string_1 = __webpack_require__(\"zGPE\");\n/**\n * Serializes the given object into a string.\n * Like JSON.stringify, but doesn't throw on circular references.\n *\n * @param object A JSON-serializable object.\n * @returns A string containing the serialized object.\n */\nfunction serialize(object) {\n    return JSON.stringify(object, serializer({ normalize: false }));\n}\nexports.serialize = serialize;\n/**\n * Deserializes an object from a string previously serialized with\n * {@link serialize}.\n *\n * @param str A serialized object.\n * @returns The deserialized object.\n */\nfunction deserialize(str) {\n    return JSON.parse(str);\n}\nexports.deserialize = deserialize;\n/**\n * Creates a deep copy of the given object.\n *\n * The object must be serializable, i.e.:\n *  - It must not contain any cycles\n *  - Only primitive types are allowed (object, array, number, string, boolean)\n *  - Its depth should be considerably low for performance reasons\n *\n * @param object A JSON-serializable object.\n * @returns The object clone.\n */\nfunction clone(object) {\n    return deserialize(serialize(object));\n}\nexports.clone = clone;\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nfunction fill(source, name, replacement) {\n    if (!(name in source) || source[name].__sentry__) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    wrapped.__sentry__ = true;\n    wrapped.__sentry_original__ = original;\n    wrapped.__sentry_wrapped__ = wrapped;\n    source[name] = wrapped;\n}\nexports.fill = fill;\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\nexports.urlEncode = urlEncode;\n// Default Node.js REPL depth\nvar MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 100kB, as 200kB is max payload size, so half sounds reasonable\nvar MAX_SERIALIZE_EXCEPTION_SIZE = 100 * 1024;\nvar MAX_SERIALIZE_KEYS_LENGTH = 40;\n/** JSDoc */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** JSDoc */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    if (typeof value === 'string') {\n        return string_1.truncate(value, 40);\n    }\n    else if (type === '[object Object]') {\n        // Node.js REPL notation\n        return '[Object]';\n    }\n    else if (type === '[object Array]') {\n        // Node.js REPL notation\n        return '[Array]';\n    }\n    else {\n        return normalizeValue(value);\n    }\n}\n/** JSDoc */\nfunction serializeObject(value, depth) {\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    if (is_1.isPlainObject(value)) {\n        var serialized_1 = {};\n        var val_1 = value;\n        Object.keys(val_1).forEach(function (key) {\n            serialized_1[key] = serializeObject(val_1[key], depth - 1);\n        });\n        return serialized_1;\n    }\n    else if (Array.isArray(value)) {\n        var val = value;\n        return val.map(function (v) { return serializeObject(v, depth - 1); });\n    }\n    return serializeValue(value);\n}\nexports.serializeObject = serializeObject;\n/** JSDoc */\nfunction limitObjectDepthToSize(object, depth, maxSize) {\n    if (depth === void 0) { depth = MAX_SERIALIZE_EXCEPTION_DEPTH; }\n    if (maxSize === void 0) { maxSize = MAX_SERIALIZE_EXCEPTION_SIZE; }\n    var serialized = serializeObject(object, depth);\n    if (jsonSize(serialize(serialized)) > maxSize) {\n        return limitObjectDepthToSize(object, depth - 1);\n    }\n    return serialized;\n}\nexports.limitObjectDepthToSize = limitObjectDepthToSize;\n/** JSDoc */\nfunction serializeKeysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = MAX_SERIALIZE_KEYS_LENGTH; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return string_1.truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return string_1.truncate(serialized, maxLength);\n    }\n    return '';\n}\nexports.serializeKeysToEventMessage = serializeKeysToEventMessage;\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\n/** JSDoc */\nfunction assign(target) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var to = Object(target);\n    // tslint:disable-next-line\n    for (var i = 0; i < args.length; i++) {\n        var source = args[i];\n        if (source !== null) {\n            for (var nextKey in source) {\n                if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                    to[nextKey] = source[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\nexports.assign = assign;\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    if (value instanceof Date) {\n        return \"[Date] \" + value;\n    }\n    if (value instanceof Error) {\n        return objectifyError(value);\n    }\n    if (is_1.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (is_1.isUndefined(value)) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * serializer()\n *\n * Remove circular references,\n * translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * and takes care of Error objects serialization\n */\nfunction serializer(options) {\n    if (options === void 0) { options = { normalize: true }; }\n    var stack = [];\n    var keys = [];\n    /** recursive */\n    function cycleserializer(_key, value) {\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n        return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join('.') + \"]\";\n    }\n    return function (key, value) {\n        if (stack.length > 0) {\n            var thisPos = stack.indexOf(this);\n            if (thisPos === -1) {\n                stack.push(this);\n                keys.push(key);\n            }\n            else {\n                stack.splice(thisPos + 1);\n                keys.splice(thisPos, Infinity, key);\n            }\n            if (stack.indexOf(value) !== -1) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                value = cycleserializer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n        return options.normalize ? normalizeValue(value, key) : value;\n    };\n}\n/**\n * safeNormalize()\n *\n * Creates a copy of the input by applying serializer function on it and parsing it back to unify the data\n */\nfunction safeNormalize(input) {\n    try {\n        return JSON.parse(JSON.stringify(input, serializer({ normalize: true })));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\nexports.safeNormalize = safeNormalize;\n//# sourceMappingURL=object.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"TToO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n\n/***/ \"VAgH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar misc_1 = __webpack_require__(\"dDlv\");\n// TODO: Implement different loggers for different environments\nvar global = misc_1.getGlobalObject();\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this.enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this.enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this.enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.log(\"Sentry Logger [Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.warn(\"Sentry Logger [Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.error(\"Sentry Logger [Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\nvar logger = new Logger();\nexports.logger = logger;\n//# sourceMappingURL=logger.js.map\n\n/***/ }),\n\n/***/ \"W+kn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar hub_1 = __webpack_require__(\"q5hm\");\nvar is_1 = __webpack_require__(\"sVPH\");\nvar logger_1 = __webpack_require__(\"VAgH\");\nvar misc_1 = __webpack_require__(\"dDlv\");\nvar string_1 = __webpack_require__(\"zGPE\");\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var hub, self, client, clientOptions, options;\n            return tslib_1.__generator(this, function (_a) {\n                hub = hub_1.getCurrentHub();\n                if (!hub) {\n                    return [2 /*return*/, event];\n                }\n                self = hub.getIntegration(InboundFilters);\n                if (self) {\n                    client = hub.getClient();\n                    clientOptions = client ? client.getOptions() : {};\n                    options = self.mergeOptions(clientOptions);\n                    if (self.shouldDropEvent(event, options)) {\n                        return [2 /*return*/, null];\n                    }\n                }\n                return [2 /*return*/, event];\n            });\n        }); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.shouldDropEvent = function (event, options) {\n        if (this.isSentryError(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + misc_1.getEventDescription(event));\n            return true;\n        }\n        if (this.isIgnoredError(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + misc_1.getEventDescription(event));\n            return true;\n        }\n        if (this.isBlacklistedUrl(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + misc_1.getEventDescription(event) + \".\\nUrl: \" + this.getEventFilterUrl(event));\n            return true;\n        }\n        if (!this.isWhitelistedUrl(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + misc_1.getEventDescription(event) + \".\\nUrl: \" + this.getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isIgnoredError = function (event, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this.getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return _this.isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isBlacklistedUrl = function (event, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this.getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return _this.isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isWhitelistedUrl = function (event, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this.getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return _this.isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this.options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this.options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this.options.ignoreInternal !== 'undefined' ? this.options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this.options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isMatchingPattern = function (value, pattern) {\n        if (is_1.isRegExp(pattern)) {\n            return pattern.test(value);\n        }\n        else if (typeof pattern === 'string') {\n            return string_1.includes(value, pattern);\n        }\n        else {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype.getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        else if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger_1.logger.error(\"Cannot extract message for event \" + misc_1.getEventDescription(event));\n                return [];\n            }\n        }\n        else {\n            return [];\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype.getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable-next-line:no-unsafe-any\n                return event.stacktrace.frames[0].filename;\n            }\n            else if (event.exception) {\n                // tslint:disable-next-line:no-unsafe-any\n                return event.exception.values[0].stacktrace.frames[0].filename;\n            }\n            else {\n                return null;\n            }\n        }\n        catch (oO) {\n            logger_1.logger.error(\"Cannot extract url for event \" + misc_1.getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexports.InboundFilters = InboundFilters;\n//# sourceMappingURL=inboundfilters.js.map\n\n/***/ }),\n\n/***/ \"W18E\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dedupe_1 = __webpack_require__(\"fvxt\");\nexports.Dedupe = dedupe_1.Dedupe;\nvar functiontostring_1 = __webpack_require__(\"ficd\");\nexports.FunctionToString = functiontostring_1.FunctionToString;\nvar sdkinformation_1 = __webpack_require__(\"2e32\");\nexports.SDKInformation = sdkinformation_1.SDKInformation;\nvar inboundfilters_1 = __webpack_require__(\"W+kn\");\nexports.InboundFilters = inboundfilters_1.InboundFilters;\nvar extraerrordata_1 = __webpack_require__(\"BvW5\");\nexports.ExtraErrorData = extraerrordata_1.ExtraErrorData;\nvar debug_1 = __webpack_require__(\"QbGa\");\nexports.Debug = debug_1.Debug;\nvar rewriteframes_1 = __webpack_require__(\"nnpQ\");\nexports.RewriteFrames = rewriteframes_1.RewriteFrames;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"b0X5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hub_1 = __webpack_require__(\"q5hm\");\nvar logger_1 = __webpack_require__(\"VAgH\");\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n * @returns The installed and bound client instance.\n */\nfunction initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger_1.logger.enable();\n    }\n    if (hub_1.getCurrentHub().getClient()) {\n        return;\n    }\n    var client = new clientClass(options);\n    hub_1.getCurrentHub().bindClient(client);\n    client.install();\n}\nexports.initAndBind = initAndBind;\n//# sourceMappingURL=sdk.js.map\n\n/***/ }),\n\n/***/ \"cSX3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar types_1 = __webpack_require__(\"hct9\");\nvar async_1 = __webpack_require__(\"ucAQ\");\nvar is_1 = __webpack_require__(\"sVPH\");\nvar logger_1 = __webpack_require__(\"VAgH\");\nvar misc_1 = __webpack_require__(\"dDlv\");\nvar string_1 = __webpack_require__(\"zGPE\");\nvar dsn_1 = __webpack_require__(\"MzuG\");\nvar integration_1 = __webpack_require__(\"Eu5d\");\nvar promisebuffer_1 = __webpack_require__(\"E+6+\");\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * By default, truncates URL values to 250 chars\n */\nvar MAX_URL_LENGTH = 250;\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** A simple buffer holding all requests. */\n        this.buffer = new promisebuffer_1.PromiseBuffer();\n        this.backend = new backendClass(options);\n        this.options = options;\n        if (options.dsn) {\n            this.dsn = new dsn_1.Dsn(options.dsn);\n        }\n        // We have to setup the integrations in the constructor since we do not want\n        // that anyone needs to call client.install();\n        this.integrations = integration_1.setupIntegrations(this.options);\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.install = function () {\n        if (!this.isEnabled()) {\n            return (this.installed = false);\n        }\n        var backend = this.getBackend();\n        if (!this.installed && backend.install) {\n            backend.install();\n        }\n        return (this.installed = true);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.buffer.add((function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var event;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.getBackend().eventFromException(exception, hint)];\n                                case 1:\n                                    event = _a.sent();\n                                    return [2 /*return*/, this.captureEvent(event, hint, scope)];\n                            }\n                        });\n                    }); })())];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.buffer.add((function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var event, _a;\n                        return tslib_1.__generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    if (!is_1.isPrimitive(message)) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, this.getBackend().eventFromMessage(\"\" + message, level, hint)];\n                                case 1:\n                                    _a = _b.sent();\n                                    return [3 /*break*/, 4];\n                                case 2: return [4 /*yield*/, this.getBackend().eventFromException(message, hint)];\n                                case 3:\n                                    _a = _b.sent();\n                                    _b.label = 4;\n                                case 4:\n                                    event = _a;\n                                    return [2 /*return*/, this.captureEvent(event, hint, scope)];\n                            }\n                        });\n                    }); })())];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                // Adding this here is technically not correct since if you call captureMessage/captureException it's already\n                // buffered. But since we not really need the count and we only need to know if the buffer is full or not,\n                // This is fine...\n                return [2 /*return*/, this.buffer.add((function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var _this = this;\n                        return tslib_1.__generator(this, function (_a) {\n                            return [2 /*return*/, this.processEvent(event, function (finalEvent) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\n                                    return [2 /*return*/, this.getBackend().sendEvent(finalEvent)];\n                                }); }); }, hint, scope)];\n                        });\n                    }); })())];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.addBreadcrumb = function (breadcrumb, hint, scope) {\n        var _a = this.getOptions(), beforeBreadcrumb = _a.beforeBreadcrumb, _b = _a.maxBreadcrumbs, maxBreadcrumbs = _b === void 0 ? DEFAULT_BREADCRUMBS : _b;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? misc_1.consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        if (this.getBackend().storeBreadcrumb(finalBreadcrumb) && scope) {\n            scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this.dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this.options;\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype.getBackend = function () {\n        return this.backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype.isEnabled = function () {\n        return this.getOptions().enabled !== false && this.dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype.prepareEvent = function (event, scope, hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, environment, _b, maxBreadcrumbs, release, dist, prepared, exception, request;\n            return tslib_1.__generator(this, function (_c) {\n                _a = this.getOptions(), environment = _a.environment, _b = _a.maxBreadcrumbs, maxBreadcrumbs = _b === void 0 ? DEFAULT_BREADCRUMBS : _b, release = _a.release, dist = _a.dist;\n                prepared = tslib_1.__assign({}, event);\n                if (prepared.environment === undefined && environment !== undefined) {\n                    prepared.environment = environment;\n                }\n                if (prepared.release === undefined && release !== undefined) {\n                    prepared.release = release;\n                }\n                if (prepared.dist === undefined && dist !== undefined) {\n                    prepared.dist = dist;\n                }\n                if (prepared.message) {\n                    prepared.message = string_1.truncate(prepared.message, MAX_URL_LENGTH);\n                }\n                exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n                if (exception && exception.value) {\n                    exception.value = string_1.truncate(exception.value, MAX_URL_LENGTH);\n                }\n                request = prepared.request;\n                if (request && request.url) {\n                    request.url = string_1.truncate(request.url, MAX_URL_LENGTH);\n                }\n                if (prepared.event_id === undefined) {\n                    prepared.event_id = misc_1.uuid4();\n                }\n                // This should be the last thing called, since we want that\n                // {@link Hub.addEventProcessor} gets the finished prepared event.\n                if (scope) {\n                    return [2 /*return*/, scope.applyToEvent(prepared, hint, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS))];\n                }\n                return [2 /*return*/, prepared];\n            });\n        });\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     * The returned event status offers clues to whether the event was sent to\n     * Sentry and accepted there. If the {@link Options.shouldSend} hook returns\n     * `false`, the status will be {@link SendStatus.Skipped}. If the rate limit\n     * was exceeded, the status will be {@link SendStatus.RateLimit}.\n     *\n     * @param event The event to send to Sentry.\n     * @param send A function to actually send the event.\n     * @param scope A scope containing event metadata.\n     * @param hint May contain additional informartion about the original exception.\n     * @returns A Promise that resolves with the event status.\n     */\n    BaseClient.prototype.processEvent = function (event, send, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, beforeSend, sampleRate, prepared, finalEvent, isInternalException, exception_1, response, error_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.isEnabled()) {\n                            return [2 /*return*/, {\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n                        // 1.0 === 100% events are sent\n                        // 0.0 === 0% events are sent\n                        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n                            return [2 /*return*/, {\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        return [4 /*yield*/, this.prepareEvent(event, scope, hint)];\n                    case 1:\n                        prepared = _b.sent();\n                        if (prepared === null) {\n                            return [2 /*return*/, {\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        finalEvent = prepared;\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 5, , 6]);\n                        isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                        if (!(!isInternalException && beforeSend)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, beforeSend(prepared, hint)];\n                    case 3:\n                        finalEvent = _b.sent();\n                        if (typeof finalEvent === 'undefined') {\n                            logger_1.logger.error('`beforeSend` method has to return `null` or a valid event');\n                        }\n                        _b.label = 4;\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        exception_1 = _b.sent();\n                        async_1.forget(this.captureException(exception_1, {\n                            data: {\n                                __sentry__: true,\n                            },\n                            originalException: exception_1,\n                        }));\n                        return [2 /*return*/, {\n                                reason: 'Event processing in beforeSend method threw an exception',\n                                status: types_1.Status.Invalid,\n                            }];\n                    case 6:\n                        if (finalEvent === null) {\n                            return [2 /*return*/, {\n                                    reason: 'Event dropped due to being discarded by beforeSend method',\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 9, , 10]);\n                        return [4 /*yield*/, send(finalEvent)];\n                    case 8:\n                        response = _b.sent();\n                        response.event = finalEvent;\n                        if (response.status === types_1.Status.RateLimit) {\n                            // TODO: Handle rate limits and maintain a queue. For now, we require SDK\n                            // implementors to override this method and handle it themselves.\n                        }\n                        return [2 /*return*/, response];\n                    case 9:\n                        error_1 = _b.sent();\n                        // We have a catch here since the transport can reject the request internally.\n                        // If we do not catch this here, we will run into an endless loop.\n                        logger_1.logger.error(\"\" + error_1);\n                        return [2 /*return*/, {\n                                reason: \"\" + error_1,\n                                status: types_1.Status.Failed,\n                            }];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.getBackend()\n                                .getTransport()\n                                .close(timeout),\n                            this.buffer.drain(timeout),\n                        ])];\n                    case 1: return [2 /*return*/, (_a.sent()).reduce(function (prev, current) { return prev && current; })];\n                }\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this.integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this.integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger_1.logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    return BaseClient;\n}());\nexports.BaseClient = BaseClient;\n//# sourceMappingURL=baseclient.js.map\n\n/***/ }),\n\n/***/ \"dDlv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process, global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = __webpack_require__(\"sVPH\");\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\nexports.dynamicRequire = dynamicRequire;\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nexports.isNodeEnv = isNodeEnv;\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n// tslint:disable:strict-type-predicates\nfunction getGlobalObject() {\n    return isNodeEnv() ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {};\n}\nexports.getGlobalObject = getGlobalObject;\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            var r = (Math.random() * 16) | 0;\n            // tslint:disable-next-line:no-bitwise\n            var v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\nexports.uuid4 = uuid4;\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\nexports.htmlTreeAsString = htmlTreeAsString;\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && is_1.isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\nexports.htmlElementAsString = htmlElementAsString;\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\nexports.parseUrl = parseUrl;\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    else if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        else {\n            return exception.type || exception.value || event.event_id || '<unknown>';\n        }\n    }\n    else {\n        return event.event_id || '<unknown>';\n    }\n}\nexports.getEventDescription = getEventDescription;\n/** JSDoc */\nfunction consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\nexports.consoleSandbox = consoleSandbox;\n//# sourceMappingURL=misc.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"W2nU\"), __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"dOdG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n    // if the path tries to go above the root, `up` ends up > 0\n    var up = 0;\n    for (var i = parts.length - 1; i >= 0; i--) {\n        var last = parts[i];\n        if (last === '.') {\n            parts.splice(i, 1);\n        }\n        else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n        }\n        else if (up) {\n            parts.splice(i, 1);\n            up--;\n        }\n    }\n    // if the path is allowed to go above the root, restore leading ..s\n    if (allowAboveRoot) {\n        for (; up--; up) {\n            parts.unshift('..');\n        }\n    }\n    return parts;\n}\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n    var parts = splitPathRe.exec(filename);\n    return parts ? parts.slice(1) : [];\n}\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        var path = i >= 0 ? args[i] : '/';\n        // Skip empty entries\n        if (!path) {\n            continue;\n        }\n        resolvedPath = path + \"/\" + resolvedPath;\n        resolvedAbsolute = path.charAt(0) === '/';\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n    resolvedPath = normalizeArray(resolvedPath.split('/').filter(function (p) { return !!p; }), !resolvedAbsolute).join('/');\n    return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\nexports.resolve = resolve;\n/** JSDoc */\nfunction trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n        if (arr[start] !== '') {\n            break;\n        }\n    }\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n        if (arr[end] !== '') {\n            break;\n        }\n    }\n    if (start > end) {\n        return [];\n    }\n    return arr.slice(start, end - start + 1);\n}\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n    // tslint:disable:no-parameter-reassignment\n    from = resolve(from).substr(1);\n    to = resolve(to).substr(1);\n    var fromParts = trim(from.split('/'));\n    var toParts = trim(to.split('/'));\n    var length = Math.min(fromParts.length, toParts.length);\n    var samePartsLength = length;\n    for (var i = 0; i < length; i++) {\n        if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n        }\n    }\n    var outputParts = [];\n    for (var i = samePartsLength; i < fromParts.length; i++) {\n        outputParts.push('..');\n    }\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\n    return outputParts.join('/');\n}\nexports.relative = relative;\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalize(path) {\n    var isPathAbsolute = isAbsolute(path);\n    var trailingSlash = path.substr(-1) === '/';\n    // Normalize the path\n    var normalizedPath = normalizeArray(path.split('/').filter(function (p) { return !!p; }), !isPathAbsolute).join('/');\n    if (!normalizedPath && !isPathAbsolute) {\n        normalizedPath = '.';\n    }\n    if (normalizedPath && trailingSlash) {\n        normalizedPath += '/';\n    }\n    return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\nexports.normalize = normalize;\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n    return path.charAt(0) === '/';\n}\nexports.isAbsolute = isAbsolute;\n// posix version\n/** JSDoc */\nfunction join() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return normalize(args.join('/'));\n}\nexports.join = join;\n/** JSDoc */\nfunction dirname(path) {\n    var result = splitPath(path);\n    var root = result[0];\n    var dir = result[1];\n    if (!root && !dir) {\n        // No dirname whatsoever\n        return '.';\n    }\n    if (dir) {\n        // It has a dirname, strip trailing slash\n        dir = dir.substr(0, dir.length - 1);\n    }\n    return root + dir;\n}\nexports.dirname = dirname;\n/** JSDoc */\nfunction basename(path, ext) {\n    var f = splitPath(path)[2];\n    if (ext && f.substr(ext.length * -1) === ext) {\n        f = f.substr(0, f.length - ext.length);\n    }\n    return f;\n}\nexports.basename = basename;\n//# sourceMappingURL=path.js.map\n\n/***/ }),\n\n/***/ \"ficd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexports.FunctionToString = FunctionToString;\n//# sourceMappingURL=functiontostring.js.map\n\n/***/ }),\n\n/***/ \"fvxt\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar hub_1 = __webpack_require__(\"q5hm\");\nvar logger_1 = __webpack_require__(\"VAgH\");\nvar misc_1 = __webpack_require__(\"dDlv\");\n/** Deduplication filter */\nvar Dedupe = /** @class */ (function () {\n    function Dedupe() {\n        /**\n         * @inheritDoc\n         */\n        this.name = Dedupe.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    Dedupe.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (currentEvent) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(Dedupe);\n                if (self) {\n                    // Juuust in case something goes wrong\n                    try {\n                        if (self.shouldDropEvent(currentEvent, self.previousEvent)) {\n                            return [2 /*return*/, null];\n                        }\n                    }\n                    catch (_oO) {\n                        return [2 /*return*/, (self.previousEvent = currentEvent)];\n                    }\n                    return [2 /*return*/, (self.previousEvent = currentEvent)];\n                }\n                return [2 /*return*/, currentEvent];\n            });\n        }); });\n    };\n    /** JSDoc */\n    Dedupe.prototype.shouldDropEvent = function (currentEvent, previousEvent) {\n        if (!previousEvent) {\n            return false;\n        }\n        if (this.isSameMessageEvent(currentEvent, previousEvent)) {\n            logger_1.logger.warn(\"Event dropped due to being a duplicate of previous event (same message).\\nEvent: \" + misc_1.getEventDescription(currentEvent));\n            return true;\n        }\n        if (this.isSameExceptionEvent(currentEvent, previousEvent)) {\n            logger_1.logger.warn(\"Event dropped due to being a duplicate of previous event (same exception).\\nEvent: \" + misc_1.getEventDescription(currentEvent));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameMessageEvent = function (currentEvent, previousEvent) {\n        var currentMessage = currentEvent.message;\n        var previousMessage = previousEvent.message;\n        // If no event has a message, they were both exceptions, so bail out\n        if (!currentMessage && !previousMessage) {\n            return false;\n        }\n        // If only one event has a stacktrace, but not the other one, they are not the same\n        if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n            return false;\n        }\n        if (currentMessage !== previousMessage) {\n            return false;\n        }\n        if (!this.isSameFingerprint(currentEvent, previousEvent)) {\n            return false;\n        }\n        if (!this.isSameStacktrace(currentEvent, previousEvent)) {\n            return false;\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype.getFramesFromEvent = function (event) {\n        var exception = event.exception;\n        if (exception) {\n            try {\n                // @ts-ignore\n                return exception.values[0].stacktrace.frames;\n            }\n            catch (_oO) {\n                return undefined;\n            }\n        }\n        else if (event.stacktrace) {\n            return event.stacktrace.frames;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameStacktrace = function (currentEvent, previousEvent) {\n        var currentFrames = this.getFramesFromEvent(currentEvent);\n        var previousFrames = this.getFramesFromEvent(previousEvent);\n        // If no event has a fingerprint, they are assumed to be the same\n        if (!currentFrames && !previousFrames) {\n            return true;\n        }\n        // If only one event has a stacktrace, but not the other one, they are not the same\n        if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n            return false;\n        }\n        currentFrames = currentFrames;\n        previousFrames = previousFrames;\n        // If number of frames differ, they are not the same\n        if (previousFrames.length !== currentFrames.length) {\n            return false;\n        }\n        // Otherwise, compare the two\n        for (var i = 0; i < previousFrames.length; i++) {\n            var frameA = previousFrames[i];\n            var frameB = currentFrames[i];\n            if (frameA.filename !== frameB.filename ||\n                frameA.lineno !== frameB.lineno ||\n                frameA.colno !== frameB.colno ||\n                frameA.function !== frameB.function) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype.getExceptionFromEvent = function (event) {\n        return event.exception && event.exception.values && event.exception.values[0];\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameExceptionEvent = function (currentEvent, previousEvent) {\n        var previousException = this.getExceptionFromEvent(previousEvent);\n        var currentException = this.getExceptionFromEvent(currentEvent);\n        if (!previousException || !currentException) {\n            return false;\n        }\n        if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n            return false;\n        }\n        if (!this.isSameFingerprint(currentEvent, previousEvent)) {\n            return false;\n        }\n        if (!this.isSameStacktrace(currentEvent, previousEvent)) {\n            return false;\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameFingerprint = function (currentEvent, previousEvent) {\n        var currentFingerprint = currentEvent.fingerprint;\n        var previousFingerprint = previousEvent.fingerprint;\n        // If no event has a fingerprint, they are assumed to be the same\n        if (!currentFingerprint && !previousFingerprint) {\n            return true;\n        }\n        // If only one event has a fingerprint, but not the other one, they are not the same\n        if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n            return false;\n        }\n        currentFingerprint = currentFingerprint;\n        previousFingerprint = previousFingerprint;\n        // Otherwise, compare the two\n        try {\n            return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Dedupe.id = 'Dedupe';\n    return Dedupe;\n}());\nexports.Dedupe = Dedupe;\n//# sourceMappingURL=dedupe.js.map\n\n/***/ }),\n\n/***/ \"hct9\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nvar Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity = exports.Severity || (exports.Severity = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity = exports.Severity || (exports.Severity = {}));\n/** The status of an event. */\nvar Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status = exports.Status || (exports.Status = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status = exports.Status || (exports.Status = {}));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"hoAL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Console logging verbosity for the SDK. */\nvar LogLevel;\n(function (LogLevel) {\n    /** No logs will be generated. */\n    LogLevel[LogLevel[\"None\"] = 0] = \"None\";\n    /** Only SDK internal errors will be logged. */\n    LogLevel[LogLevel[\"Error\"] = 1] = \"Error\";\n    /** Information useful for debugging the SDK will be logged. */\n    LogLevel[LogLevel[\"Debug\"] = 2] = \"Debug\";\n    /** All SDK actions will be logged. */\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n//# sourceMappingURL=interfaces.js.map\n\n/***/ }),\n\n/***/ \"nnpQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar hub_1 = __webpack_require__(\"q5hm\");\nvar path_1 = __webpack_require__(\"dOdG\");\n/** Rewrite event frames paths */\nvar RewriteFrames = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function RewriteFrames(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        /**\n         * @inheritDoc\n         */\n        this.name = RewriteFrames.id;\n        /**\n         * @inheritDoc\n         */\n        this.iteratee = function (frame) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var base;\n            return tslib_1.__generator(this, function (_a) {\n                if (frame.filename && frame.filename.startsWith('/')) {\n                    base = this.root ? path_1.relative(this.root, frame.filename) : path_1.basename(frame.filename);\n                    frame.filename = \"app:///\" + base;\n                }\n                return [2 /*return*/, frame];\n            });\n        }); };\n        if (options.root) {\n            this.root = options.root;\n        }\n        if (options.iteratee) {\n            this.iteratee = options.iteratee;\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    RewriteFrames.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(RewriteFrames);\n                if (self) {\n                    return [2 /*return*/, self.process(event)];\n                }\n                return [2 /*return*/, event];\n            });\n        }); });\n    };\n    /** JSDoc */\n    RewriteFrames.prototype.process = function (event) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var frames, _a, _b, _i, i, _c, _d;\n            return tslib_1.__generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        frames = this.getFramesFromEvent(event);\n                        if (!frames) return [3 /*break*/, 4];\n                        _a = [];\n                        for (_b in frames)\n                            _a.push(_b);\n                        _i = 0;\n                        _e.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\n                        i = _a[_i];\n                        // tslint:disable-next-line\n                        _c = frames;\n                        _d = i;\n                        return [4 /*yield*/, this.iteratee(frames[i])];\n                    case 2:\n                        // tslint:disable-next-line\n                        _c[_d] = _e.sent();\n                        _e.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, event];\n                }\n            });\n        });\n    };\n    /** JSDoc */\n    RewriteFrames.prototype.getFramesFromEvent = function (event) {\n        var exception = event.exception;\n        if (exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                return exception.values[0].stacktrace.frames;\n            }\n            catch (_oO) {\n                return undefined;\n            }\n        }\n        else if (event.stacktrace) {\n            return event.stacktrace.frames;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    RewriteFrames.id = 'RewriteFrames';\n    return RewriteFrames;\n}());\nexports.RewriteFrames = RewriteFrames;\n//# sourceMappingURL=rewriteframes.js.map\n\n/***/ }),\n\n/***/ \"q5hm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scope_1 = __webpack_require__(\"yZla\");\nexports.addGlobalEventProcessor = scope_1.addGlobalEventProcessor;\nexports.Scope = scope_1.Scope;\nvar hub_1 = __webpack_require__(\"A6ZE\");\nexports.getCurrentHub = hub_1.getCurrentHub;\nexports.getHubFromCarrier = hub_1.getHubFromCarrier;\nexports.getMainCarrier = hub_1.getMainCarrier;\nexports.Hub = hub_1.Hub;\nexports.setHubOnCarrier = hub_1.setHubOnCarrier;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"r5K/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexports.SentryError = SentryError;\n//# sourceMappingURL=error.js.map\n\n/***/ }),\n\n/***/ \"rnrV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, process) {\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar core = __webpack_require__(\"PEIW\");\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar dist = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nvar Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity = exports.Severity || (exports.Severity = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity = exports.Severity || (exports.Severity = {}));\n/** The status of an event. */\nvar Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status = exports.Status || (exports.Status = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status = exports.Status || (exports.Status = {}));\n\n});\n\nunwrapExports(dist);\nvar dist_1 = dist.Severity;\nvar dist_2 = dist.Status;\n\nvar is = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\nexports.isError = isError;\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\nexports.isErrorEvent = isErrorEvent;\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\nexports.isDOMError = isDOMError;\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\nexports.isDOMException = isDOMException;\n/**\n * Checks whether given value's type is an undefined\n * {@link isUndefined}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isUndefined(wat) {\n    return wat === void 0;\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks whether given value's type is a function\n * {@link isFunction}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isFunction(wat) {\n    return typeof wat === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\nexports.isPrimitive = isPrimitive;\n/**\n * Checks whether given value's type is an array\n * {@link isArray}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isArray(wat) {\n    return Object.prototype.toString.call(wat) === '[object Array]';\n}\nexports.isArray = isArray;\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n/**\n * Checks whether given value's type is a NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n    return wat !== wat;\n}\nexports.isNaN = isNaN;\n\n});\n\nunwrapExports(is);\nvar is_1 = is.isError;\nvar is_2 = is.isErrorEvent;\nvar is_3 = is.isDOMError;\nvar is_4 = is.isDOMException;\nvar is_5 = is.isUndefined;\nvar is_6 = is.isFunction;\nvar is_7 = is.isString;\nvar is_8 = is.isPrimitive;\nvar is_9 = is.isArray;\nvar is_10 = is.isPlainObject;\nvar is_11 = is.isRegExp;\nvar is_12 = is.isNaN;\n\nvar misc = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\nexports.dynamicRequire = dynamicRequire;\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nexports.isNodeEnv = isNodeEnv;\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n// tslint:disable:strict-type-predicates\nfunction getGlobalObject() {\n    return isNodeEnv() ? commonjsGlobal : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {};\n}\nexports.getGlobalObject = getGlobalObject;\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            var r = (Math.random() * 16) | 0;\n            // tslint:disable-next-line:no-bitwise\n            var v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\nexports.uuid4 = uuid4;\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\nexports.htmlTreeAsString = htmlTreeAsString;\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && is.isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\nexports.htmlElementAsString = htmlElementAsString;\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\nexports.parseUrl = parseUrl;\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    else if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        else {\n            return exception.type || exception.value || event.event_id || '<unknown>';\n        }\n    }\n    else {\n        return event.event_id || '<unknown>';\n    }\n}\nexports.getEventDescription = getEventDescription;\n/** JSDoc */\nfunction consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\nexports.consoleSandbox = consoleSandbox;\n\n});\n\nunwrapExports(misc);\nvar misc_1 = misc.dynamicRequire;\nvar misc_2 = misc.isNodeEnv;\nvar misc_3 = misc.getGlobalObject;\nvar misc_4 = misc.uuid4;\nvar misc_5 = misc.htmlTreeAsString;\nvar misc_6 = misc.htmlElementAsString;\nvar misc_7 = misc.parseUrl;\nvar misc_8 = misc.getEventDescription;\nvar misc_9 = misc.consoleSandbox;\n\nvar supports = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsErrorEvent = supportsErrorEvent;\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsDOMError = supportsDOMError;\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsDOMException = supportsDOMException;\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n    if (!('fetch' in misc.getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsFetch = supportsFetch;\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = misc.getGlobalObject();\n    var fetch = global.fetch;\n    // tslint:disable-next-line:no-unsafe-any\n    return fetch.toString().indexOf('native') !== -1;\n}\nexports.supportsNativeFetch = supportsNativeFetch;\n/**\n * Tells whether current environment supports sendBeacon API\n * {@link supportsBeacon}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsBeacon() {\n    var global = misc.getGlobalObject();\n    return 'navigator' in global && 'sendBeacon' in global.navigator;\n}\nexports.supportsBeacon = supportsBeacon;\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n    return 'ReportingObserver' in misc.getGlobalObject();\n}\nexports.supportsReportingObserver = supportsReportingObserver;\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('pickleRick', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsReferrerPolicy = supportsReferrerPolicy;\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = misc.getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\nexports.supportsHistory = supportsHistory;\n\n});\n\nunwrapExports(supports);\nvar supports_1 = supports.supportsErrorEvent;\nvar supports_2 = supports.supportsDOMError;\nvar supports_3 = supports.supportsDOMException;\nvar supports_4 = supports.supportsFetch;\nvar supports_5 = supports.supportsNativeFetch;\nvar supports_6 = supports.supportsBeacon;\nvar supports_7 = supports.supportsReportingObserver;\nvar supports_8 = supports.supportsReferrerPolicy;\nvar supports_9 = supports.supportsHistory;\n\nvar string = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    if (max === 0 || !is.isString(str)) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\nexports.truncate = truncate;\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\nexports.snipLine = snipLine;\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\nexports.safeJoin = safeJoin;\n/**\n * Checks if given value is included in the target\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill\n * @param target source string\n * @param search string to be looked for\n * @returns An answer\n */\nfunction includes(target, search) {\n    if (search.length > target.length) {\n        return false;\n    }\n    else {\n        return target.indexOf(search) !== -1;\n    }\n}\nexports.includes = includes;\n\n});\n\nunwrapExports(string);\nvar string_1 = string.truncate;\nvar string_2 = string.snipLine;\nvar string_3 = string.safeJoin;\nvar string_4 = string.includes;\n\nvar object = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n/**\n * Serializes the given object into a string.\n * Like JSON.stringify, but doesn't throw on circular references.\n *\n * @param object A JSON-serializable object.\n * @returns A string containing the serialized object.\n */\nfunction serialize(object) {\n    return JSON.stringify(object, serializer({ normalize: false }));\n}\nexports.serialize = serialize;\n/**\n * Deserializes an object from a string previously serialized with\n * {@link serialize}.\n *\n * @param str A serialized object.\n * @returns The deserialized object.\n */\nfunction deserialize(str) {\n    return JSON.parse(str);\n}\nexports.deserialize = deserialize;\n/**\n * Creates a deep copy of the given object.\n *\n * The object must be serializable, i.e.:\n *  - It must not contain any cycles\n *  - Only primitive types are allowed (object, array, number, string, boolean)\n *  - Its depth should be considerably low for performance reasons\n *\n * @param object A JSON-serializable object.\n * @returns The object clone.\n */\nfunction clone(object) {\n    return deserialize(serialize(object));\n}\nexports.clone = clone;\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nfunction fill(source, name, replacement) {\n    if (!(name in source) || source[name].__sentry__) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    wrapped.__sentry__ = true;\n    wrapped.__sentry_original__ = original;\n    wrapped.__sentry_wrapped__ = wrapped;\n    source[name] = wrapped;\n}\nexports.fill = fill;\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\nexports.urlEncode = urlEncode;\n// Default Node.js REPL depth\nvar MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 100kB, as 200kB is max payload size, so half sounds reasonable\nvar MAX_SERIALIZE_EXCEPTION_SIZE = 100 * 1024;\nvar MAX_SERIALIZE_KEYS_LENGTH = 40;\n/** JSDoc */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** JSDoc */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    if (typeof value === 'string') {\n        return string.truncate(value, 40);\n    }\n    else if (type === '[object Object]') {\n        // Node.js REPL notation\n        return '[Object]';\n    }\n    else if (type === '[object Array]') {\n        // Node.js REPL notation\n        return '[Array]';\n    }\n    else {\n        return normalizeValue(value);\n    }\n}\n/** JSDoc */\nfunction serializeObject(value, depth) {\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    if (is.isPlainObject(value)) {\n        var serialized_1 = {};\n        var val_1 = value;\n        Object.keys(val_1).forEach(function (key) {\n            serialized_1[key] = serializeObject(val_1[key], depth - 1);\n        });\n        return serialized_1;\n    }\n    else if (Array.isArray(value)) {\n        var val = value;\n        return val.map(function (v) { return serializeObject(v, depth - 1); });\n    }\n    return serializeValue(value);\n}\nexports.serializeObject = serializeObject;\n/** JSDoc */\nfunction limitObjectDepthToSize(object, depth, maxSize) {\n    if (depth === void 0) { depth = MAX_SERIALIZE_EXCEPTION_DEPTH; }\n    if (maxSize === void 0) { maxSize = MAX_SERIALIZE_EXCEPTION_SIZE; }\n    var serialized = serializeObject(object, depth);\n    if (jsonSize(serialize(serialized)) > maxSize) {\n        return limitObjectDepthToSize(object, depth - 1);\n    }\n    return serialized;\n}\nexports.limitObjectDepthToSize = limitObjectDepthToSize;\n/** JSDoc */\nfunction serializeKeysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = MAX_SERIALIZE_KEYS_LENGTH; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return string.truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return string.truncate(serialized, maxLength);\n    }\n    return '';\n}\nexports.serializeKeysToEventMessage = serializeKeysToEventMessage;\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\n/** JSDoc */\nfunction assign(target) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var to = Object(target);\n    // tslint:disable-next-line\n    for (var i = 0; i < args.length; i++) {\n        var source = args[i];\n        if (source !== null) {\n            for (var nextKey in source) {\n                if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                    to[nextKey] = source[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\nexports.assign = assign;\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof commonjsGlobal !== 'undefined' && value === commonjsGlobal) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    if (value instanceof Date) {\n        return \"[Date] \" + value;\n    }\n    if (value instanceof Error) {\n        return objectifyError(value);\n    }\n    if (is.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (is.isUndefined(value)) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * serializer()\n *\n * Remove circular references,\n * translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * and takes care of Error objects serialization\n */\nfunction serializer(options) {\n    if (options === void 0) { options = { normalize: true }; }\n    var stack = [];\n    var keys = [];\n    /** recursive */\n    function cycleserializer(_key, value) {\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n        return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join('.') + \"]\";\n    }\n    return function (key, value) {\n        if (stack.length > 0) {\n            var thisPos = stack.indexOf(this);\n            if (thisPos === -1) {\n                stack.push(this);\n                keys.push(key);\n            }\n            else {\n                stack.splice(thisPos + 1);\n                keys.splice(thisPos, Infinity, key);\n            }\n            if (stack.indexOf(value) !== -1) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                value = cycleserializer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n        return options.normalize ? normalizeValue(value, key) : value;\n    };\n}\n/**\n * safeNormalize()\n *\n * Creates a copy of the input by applying serializer function on it and parsing it back to unify the data\n */\nfunction safeNormalize(input) {\n    try {\n        return JSON.parse(JSON.stringify(input, serializer({ normalize: true })));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\nexports.safeNormalize = safeNormalize;\n\n});\n\nunwrapExports(object);\nvar object_1 = object.serialize;\nvar object_2 = object.deserialize;\nvar object_3 = object.clone;\nvar object_4 = object.fill;\nvar object_5 = object.urlEncode;\nvar object_6 = object.serializeObject;\nvar object_7 = object.limitObjectDepthToSize;\nvar object_8 = object.serializeKeysToEventMessage;\nvar object_9 = object.assign;\nvar object_10 = object.safeNormalize;\n\n// tslint:disable\r\n/*\r\n * JavaScript MD5\r\n * https://github.com/blueimp/JavaScript-MD5\r\n *\r\n * Copyright 2011, Sebastian Tschan\r\n * https://blueimp.net\r\n *\r\n * Licensed under the MIT license:\r\n * https://opensource.org/licenses/MIT\r\n *\r\n * Based on\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\n/**\r\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n */\r\nfunction safeAdd(x, y) {\r\n    var lsw = (x & 0xffff) + (y & 0xffff);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xffff);\r\n}\r\n/**\r\n * Bitwise rotate a 32-bit number to the left.\r\n */\r\nfunction bitRotateLeft(num, cnt) {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n/**\r\n * These functions implement the four basic operations the algorithm uses.\r\n */\r\nfunction md5cmn(q, a, b, x, s, t) {\r\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\r\n}\r\nfunction md5ff(a, b, c, d, x, s, t) {\r\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t);\r\n}\r\nfunction md5gg(a, b, c, d, x, s, t) {\r\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\r\n}\r\nfunction md5hh(a, b, c, d, x, s, t) {\r\n    return md5cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\nfunction md5ii(a, b, c, d, x, s, t) {\r\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t);\r\n}\r\n/**\r\n * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n */\r\nfunction binlMD5(x, len) {\r\n    /** append padding */\r\n    x[len >> 5] |= 0x80 << len % 32;\r\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n    var i;\r\n    var olda;\r\n    var oldb;\r\n    var oldc;\r\n    var oldd;\r\n    var a = 1732584193;\r\n    var b = -271733879;\r\n    var c = -1732584194;\r\n    var d = 271733878;\r\n    for (i = 0; i < x.length; i += 16) {\r\n        olda = a;\r\n        oldb = b;\r\n        oldc = c;\r\n        oldd = d;\r\n        a = md5ff(a, b, c, d, x[i], 7, -680876936);\r\n        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\r\n        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n        b = md5gg(b, c, d, a, x[i], 20, -373897302);\r\n        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\r\n        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n        d = md5hh(d, a, b, c, x[i], 11, -358537222);\r\n        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n        a = md5ii(a, b, c, d, x[i], 6, -198630844);\r\n        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n        a = safeAdd(a, olda);\r\n        b = safeAdd(b, oldb);\r\n        c = safeAdd(c, oldc);\r\n        d = safeAdd(d, oldd);\r\n    }\r\n    return [a, b, c, d];\r\n}\r\n/**\r\n * Convert an array of little-endian words to a string\r\n */\r\nfunction binl2rstr(input) {\r\n    var i;\r\n    var output = '';\r\n    var length32 = input.length * 32;\r\n    for (i = 0; i < length32; i += 8) {\r\n        output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Convert a raw string to an array of little-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\nfunction rstr2binl(input) {\r\n    var i;\r\n    var output = [];\r\n    output[(input.length >> 2) - 1] = undefined;\r\n    for (i = 0; i < output.length; i += 1) {\r\n        output[i] = 0;\r\n    }\r\n    var length8 = input.length * 8;\r\n    for (i = 0; i < length8; i += 8) {\r\n        output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Calculate the MD5 of a raw string\r\n */\r\nfunction rstrMD5(s) {\r\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\r\n}\r\n/**\r\n * Calculate the HMAC-MD5, of a key and some data (raw strings)\r\n */\r\nfunction rstrHMACMD5(key, data) {\r\n    var i;\r\n    var bkey = rstr2binl(key);\r\n    var ipad = [];\r\n    var opad = [];\r\n    var hash;\r\n    ipad[15] = opad[15] = undefined;\r\n    if (bkey.length > 16) {\r\n        bkey = binlMD5(bkey, key.length * 8);\r\n    }\r\n    for (i = 0; i < 16; i += 1) {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5c5c5c5c;\r\n    }\r\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\r\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\r\n}\r\n/**\r\n * Convert a raw string to a hex string\r\n */\r\nfunction rstr2hex(input) {\r\n    var hexTab = '0123456789abcdef';\r\n    var output = '';\r\n    var x;\r\n    var i;\r\n    for (i = 0; i < input.length; i += 1) {\r\n        x = input.charCodeAt(i);\r\n        output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Encode a string as utf-8\r\n */\r\nfunction str2rstrUTF8(input) {\r\n    return unescape(encodeURIComponent(input));\r\n}\r\n/*\r\n * Take string arguments and return either raw or hex encoded strings\r\n */\r\nfunction rawMD5(s) {\r\n    return rstrMD5(str2rstrUTF8(s));\r\n}\r\nfunction hexMD5(s) {\r\n    return rstr2hex(rawMD5(s));\r\n}\r\nfunction rawHMACMD5(k, d) {\r\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\r\n}\r\nfunction hexHMACMD5(k, d) {\r\n    return rstr2hex(rawHMACMD5(k, d));\r\n}\r\nfunction md5(string, key, raw) {\r\n    if (!key) {\r\n        if (!raw) {\r\n            return hexMD5(string);\r\n        }\r\n        return rawMD5(string);\r\n    }\r\n    if (!raw) {\r\n        return hexHMACMD5(key, string);\r\n    }\r\n    return rawHMACMD5(key, string);\r\n}\n\n// tslint:disable\r\n/**\r\n * TraceKit - Cross brower stack traces\r\n *\r\n * This was originally forked from github.com/occ/TraceKit, but has since been\r\n * largely modified and is now maintained as part of Sentry JS SDK.\r\n *\r\n * NOTE: Last merge with upstream repository\r\n * Jul 11,2018 - #f03357c\r\n *\r\n * https://github.com/csnover/TraceKit\r\n * @license MIT\r\n * @namespace TraceKit\r\n */\r\nvar window$1 = misc_3();\r\nvar TraceKit = {\r\n    wrap: function () { return function () { }; },\r\n    report: false,\r\n    collectWindowErrors: false,\r\n    computeStackTrace: false,\r\n    remoteFetching: false,\r\n    linesOfContext: false,\r\n    extendToAsynchronousCallbacks: false,\r\n};\r\n// var TraceKit: TraceKitInterface = {};\r\n// var TraceKit = {};\r\n// global reference to slice\r\nvar _slice = [].slice;\r\nvar UNKNOWN_FUNCTION = '?';\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\r\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\r\n/**\r\n * A better form of hasOwnProperty<br/>\r\n * Example: `_has(MainHostObject, property) === true/false`\r\n *\r\n * @param {Object} object to check property\r\n * @param {string} key to check\r\n * @return {Boolean} true if the object has the key and it is not inherited\r\n */\r\nfunction _has(object, key) {\r\n    return Object.prototype.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * A safe form of location.href<br/>\r\n *\r\n * @return {string} location.href\r\n */\r\nfunction getLocationHref() {\r\n    if (typeof document === 'undefined' || document.location == null)\r\n        return '';\r\n    return document.location.href;\r\n}\r\n/**\r\n * A safe form of location.origin<br/>\r\n *\r\n * @return {string} location.origin\r\n */\r\nfunction getLocationOrigin() {\r\n    if (typeof document === 'undefined' || document.location == null)\r\n        return '';\r\n    // Oh dear IE10...\r\n    if (!document.location.origin) {\r\n        return (document.location.protocol +\r\n            '//' +\r\n            document.location.hostname +\r\n            (document.location.port ? ':' + document.location.port : ''));\r\n    }\r\n    return document.location.origin;\r\n}\r\n/**\r\n * Wrap any function in a TraceKit reporter<br/>\r\n * Example: `func = TraceKit.wrap(func);`\r\n *\r\n * @param {Function} func Function to be wrapped\r\n * @return {Function} The wrapped func\r\n * @memberof TraceKit\r\n */\r\nTraceKit.wrap = function traceKitWrapper(func) {\r\n    function wrapped() {\r\n        try {\r\n            // @ts-ignore\r\n            return func.apply(this, arguments);\r\n        }\r\n        catch (e) {\r\n            TraceKit.report(e);\r\n            throw e;\r\n        }\r\n    }\r\n    return wrapped;\r\n};\r\n/**\r\n * Cross-browser processing of unhandled exceptions\r\n *\r\n * Syntax:\r\n * ```js\r\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\r\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\r\n *   TraceKit.report(exception)\r\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\r\n * ```\r\n *\r\n * Supports:\r\n *   - Firefox: full stack trace with line numbers, plus column number\r\n *     on top frame; column number is not guaranteed\r\n *   - Opera: full stack trace with line and column numbers\r\n *   - Chrome: full stack trace with line and column numbers\r\n *   - Safari: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *   - IE: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *\r\n * In theory, TraceKit should work on all of the following versions:\r\n *   - IE5.5+ (only 8.0 tested)\r\n *   - Firefox 0.9+ (only 3.5+ tested)\r\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\r\n *     Exceptions Have Stacktrace to be enabled in opera:config)\r\n *   - Safari 3+ (only 4+ tested)\r\n *   - Chrome 1+ (only 5+ tested)\r\n *   - Konqueror 3.5+ (untested)\r\n *\r\n * Requires TraceKit.computeStackTrace.\r\n *\r\n * Tries to catch all unhandled exceptions and report them to the\r\n * subscribed handlers. Please note that TraceKit.report will rethrow the\r\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\r\n * If the exception does not reach the top of the browser, you will only\r\n * get a stack trace from the point where TraceKit.report was called.\r\n *\r\n * Handlers receive a TraceKit.StackTrace object as described in the\r\n * TraceKit.computeStackTrace docs.\r\n *\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.report = (function reportModuleWrapper() {\r\n    var handlers = [], lastException = null, lastExceptionStack = null;\r\n    /**\r\n     * Add a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function subscribe(handler) {\r\n        // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\r\n        // So user can choose which one he wants to attach\r\n        // installGlobalHandler();\r\n        // installGlobalUnhandledRejectionHandler();\r\n        handlers.push(handler);\r\n    }\r\n    /**\r\n     * Remove a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function unsubscribe(handler) {\r\n        for (var i = handlers.length - 1; i >= 0; --i) {\r\n            if (handlers[i] === handler) {\r\n                handlers.splice(i, 1);\r\n            }\r\n        }\r\n        if (handlers.length === 0) {\r\n            uninstallGlobalHandler();\r\n            uninstallGlobalUnhandledRejectionHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Dispatch stack information to all handlers.\r\n     * @param {TraceKit.StackTrace} stack\r\n     * @param {boolean} isWindowError Is this a top-level window error?\r\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an error occurs while calling an handler.\r\n     */\r\n    function notifyHandlers(stack, isWindowError, error) {\r\n        var exception = null;\r\n        if (isWindowError && !TraceKit.collectWindowErrors) {\r\n            return;\r\n        }\r\n        for (var i in handlers) {\r\n            if (_has(handlers, i)) {\r\n                try {\r\n                    handlers[i](stack, isWindowError, error);\r\n                }\r\n                catch (inner) {\r\n                    exception = inner;\r\n                }\r\n            }\r\n        }\r\n        if (exception) {\r\n            throw exception;\r\n        }\r\n    }\r\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\r\n    var _oldOnunhandledrejectionHandler, _onUnhandledRejectionHandlerInstalled;\r\n    /**\r\n     * Ensures all global unhandled exceptions are recorded.\r\n     * Supported by Gecko and IE.\r\n     * @param {string} message Error message.\r\n     * @param {string} url URL of script that generated the exception.\r\n     * @param {(number|string)} lineNo The line number at which the error occurred.\r\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\r\n     * @param {Error=} errorObj The actual Error object.\r\n     * @memberof TraceKit.report\r\n     */\r\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\r\n        var stack = null;\r\n        // If 'errorObj' is ErrorEvent, get real Error from inside\r\n        errorObj = is_2(errorObj) ? errorObj.error : errorObj;\r\n        // If 'message' is ErrorEvent, get real message from inside\r\n        message = is_2(message) ? message.message : message;\r\n        if (lastExceptionStack) {\r\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\r\n            processLastException();\r\n        }\r\n        else if (errorObj && is_1(errorObj)) {\r\n            stack = TraceKit.computeStackTrace(errorObj);\r\n            stack.mechanism = 'onerror';\r\n            notifyHandlers(stack, true, errorObj);\r\n        }\r\n        else {\r\n            var location = {\r\n                url: url,\r\n                line: lineNo,\r\n                column: columnNo,\r\n            };\r\n            var name;\r\n            var msg = message; // must be new var or will modify original `arguments`\r\n            if ({}.toString.call(message) === '[object String]') {\r\n                var groups = message.match(ERROR_TYPES_RE);\r\n                if (groups) {\r\n                    name = groups[1];\r\n                    msg = groups[2];\r\n                }\r\n            }\r\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\r\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\r\n            stack = {\r\n                name: name,\r\n                message: msg,\r\n                mode: 'onerror',\r\n                mechanism: 'onerror',\r\n                stack: [\r\n                    tslib_1.__assign({}, location, { \r\n                        // Firefox sometimes doesn't return url correctly and this is an old behavior\r\n                        // that I prefer to port here as well.\r\n                        // It can be altered only here, as previously it's using `location.url` for other things — Kamil\r\n                        url: location.url || getLocationHref() }),\r\n                ],\r\n            };\r\n            notifyHandlers(stack, true, null);\r\n        }\r\n        if (_oldOnerrorHandler) {\r\n            // @ts-ignore\r\n            return _oldOnerrorHandler.apply(this, arguments);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Ensures all unhandled rejections are recorded.\r\n     * @param {PromiseRejectionEvent} e event.\r\n     * @memberof TraceKit.report\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\r\n     */\r\n    function traceKitWindowOnUnhandledRejection(e) {\r\n        var err = (e && (e.detail ? e.detail.reason : e.reason)) || e;\r\n        var stack = TraceKit.computeStackTrace(err);\r\n        stack.mechanism = 'onunhandledrejection';\r\n        notifyHandlers(stack, true, err);\r\n    }\r\n    /**\r\n     * Install a global onerror handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function installGlobalHandler() {\r\n        if (_onErrorHandlerInstalled === true) {\r\n            return;\r\n        }\r\n        _oldOnerrorHandler = window$1.onerror;\r\n        window$1.onerror = traceKitWindowOnError;\r\n        _onErrorHandlerInstalled = true;\r\n    }\r\n    /**\r\n     * Uninstall the global onerror handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function uninstallGlobalHandler() {\r\n        if (_onErrorHandlerInstalled) {\r\n            window$1.onerror = _oldOnerrorHandler;\r\n            _onErrorHandlerInstalled = false;\r\n        }\r\n    }\r\n    /**\r\n     * Install a global onunhandledrejection handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function installGlobalUnhandledRejectionHandler() {\r\n        if (_onUnhandledRejectionHandlerInstalled === true) {\r\n            return;\r\n        }\r\n        _oldOnunhandledrejectionHandler = window$1.onunhandledrejection;\r\n        window$1.onunhandledrejection = traceKitWindowOnUnhandledRejection;\r\n        _onUnhandledRejectionHandlerInstalled = true;\r\n    }\r\n    /**\r\n     * Uninstall the global onunhandledrejection handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function uninstallGlobalUnhandledRejectionHandler() {\r\n        if (_onUnhandledRejectionHandlerInstalled) {\r\n            window$1.onerror = _oldOnunhandledrejectionHandler;\r\n            _onUnhandledRejectionHandlerInstalled = false;\r\n        }\r\n    }\r\n    /**\r\n     * Process the most recent exception\r\n     * @memberof TraceKit.report\r\n     */\r\n    function processLastException() {\r\n        var _lastExceptionStack = lastExceptionStack, _lastException = lastException;\r\n        lastExceptionStack = null;\r\n        lastException = null;\r\n        notifyHandlers(_lastExceptionStack, false, _lastException);\r\n    }\r\n    /**\r\n     * Reports an unhandled Error to TraceKit.\r\n     * @param {Error} ex\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\r\n     */\r\n    function report(ex) {\r\n        if (lastExceptionStack) {\r\n            if (lastException === ex) {\r\n                return; // already caught by an inner catch block, ignore\r\n            }\r\n            else {\r\n                processLastException();\r\n            }\r\n        }\r\n        var stack = TraceKit.computeStackTrace(ex);\r\n        lastExceptionStack = stack;\r\n        lastException = ex;\r\n        // If the stack trace is incomplete, wait for 2 seconds for\r\n        // slow slow IE to see if onerror occurs or not before reporting\r\n        // this exception; otherwise, we will end up with an incomplete\r\n        // stack trace\r\n        setTimeout(function () {\r\n            if (lastException === ex) {\r\n                processLastException();\r\n            }\r\n        }, stack.incomplete ? 2000 : 0);\r\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\r\n    }\r\n    report.subscribe = subscribe;\r\n    report.unsubscribe = unsubscribe;\r\n    report.installGlobalHandler = installGlobalHandler;\r\n    report.installGlobalUnhandledRejectionHandler = installGlobalUnhandledRejectionHandler;\r\n    return report;\r\n})();\r\n/**\r\n * An object representing a single stack frame.\r\n * @typedef {Object} StackFrame\r\n * @property {string} url The JavaScript or HTML file URL.\r\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\r\n * @property {string[]?} args The arguments passed to the function, if known.\r\n * @property {number=} line The line number, if known.\r\n * @property {number=} column The column number, if known.\r\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\r\n * @memberof TraceKit\r\n */\r\n/**\r\n * An object representing a JavaScript stack trace.\r\n * @typedef {Object} StackTrace\r\n * @property {string} name The name of the thrown exception.\r\n * @property {string} message The exception error message.\r\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\r\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\r\n * @memberof TraceKit\r\n */\r\n/**\r\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\r\n *\r\n * Syntax:\r\n *   ```js\r\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\r\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\r\n *   ```\r\n *\r\n * Supports:\r\n *   - Firefox:  full stack trace with line numbers and unreliable column\r\n *               number on top frame\r\n *   - Opera 10: full stack trace with line and column numbers\r\n *   - Opera 9-: full stack trace with line numbers\r\n *   - Chrome:   full stack trace with line and column numbers\r\n *   - Safari:   line and column number for the topmost stacktrace element\r\n *               only\r\n *   - IE:       no line numbers whatsoever\r\n *\r\n * Tries to guess names of anonymous functions by looking for assignments\r\n * in the source code. In IE and Safari, we have to guess source file names\r\n * by searching for function bodies inside all page scripts. This will not\r\n * work for scripts that are loaded cross-domain.\r\n * Here be dragons: some function names may be guessed incorrectly, and\r\n * duplicate functions may be mismatched.\r\n *\r\n * TraceKit.computeStackTrace should only be used for tracing purposes.\r\n * Logging of unhandled exceptions should be done with TraceKit.report,\r\n * which builds on top of TraceKit.computeStackTrace and provides better\r\n * IE support by utilizing the window.onerror event to retrieve information\r\n * about the top of the stack.\r\n *\r\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\r\n * so computeStackTrace instead walks its *own* chain of callers.\r\n * This means that:\r\n *  * in Safari, some methods may be missing from the stack trace;\r\n *  * in IE, the topmost function in the stack trace will always be the\r\n *    caller of computeStackTrace.\r\n *\r\n * This is okay for tracing (because you are likely to be calling\r\n * computeStackTrace from the function you want to be the topmost element\r\n * of the stack trace anyway), but not okay for logging unhandled\r\n * exceptions (because your catch block will likely be far away from the\r\n * inner function that actually caused the exception).\r\n *\r\n * Tracing example:\r\n *  ```js\r\n *     function trace(message) {\r\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\r\n *         var data = message + \"\\n\";\r\n *         for(var i in stackInfo.stack) {\r\n *             var item = stackInfo.stack[i];\r\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\r\n *         }\r\n *         if (window.console)\r\n *             console.info(data);\r\n *         else\r\n *             alert(data);\r\n *     }\r\n * ```\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\r\n    var debug = false, sourceCache = {};\r\n    /**\r\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\r\n     * to look up anonymous function names.\r\n     * @param {string} url URL of source code.\r\n     * @return {string} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function loadSource(url) {\r\n        if (!TraceKit.remoteFetching) {\r\n            //Only attempt request if remoteFetching is on.\r\n            return '';\r\n        }\r\n        try {\r\n            var getXHR = function () {\r\n                try {\r\n                    return new window$1.XMLHttpRequest();\r\n                }\r\n                catch (e) {\r\n                    // explicitly bubble up the exception if not found\r\n                    return new window$1.ActiveXObject('Microsoft.XMLHTTP');\r\n                }\r\n            };\r\n            var request = getXHR();\r\n            request.open('GET', url, false);\r\n            request.send('');\r\n            return request.responseText;\r\n        }\r\n        catch (e) {\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves source code from the source code cache.\r\n     * @param {string} url URL of source code.\r\n     * @return {Array.<string>} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function getSource(url) {\r\n        if (typeof url !== 'string') {\r\n            return [];\r\n        }\r\n        if (!_has(sourceCache, url)) {\r\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\r\n            // cross-domain errors will be triggered.\r\n            /*\r\n                        Regex matches:\r\n                        0 - Full Url\r\n                        1 - Protocol\r\n                        2 - Domain\r\n                        3 - Port (Useful for internal applications)\r\n                        4 - Path\r\n                    */\r\n            var source = '';\r\n            var domain = '';\r\n            try {\r\n                domain = window$1.document.domain;\r\n            }\r\n            catch (e) { }\r\n            var match = /(.*)\\:\\/\\/([^:\\/]+)([:\\d]*)\\/{0,1}([\\s\\S]*)/.exec(url);\r\n            if (match && match[2] === domain) {\r\n                source = loadSource(url);\r\n            }\r\n            sourceCache[url] = source ? source.split('\\n') : [];\r\n        }\r\n        return sourceCache[url];\r\n    }\r\n    /**\r\n     * Tries to use an externally loaded copy of source code to determine\r\n     * the name of a function by looking at the name of the variable it was\r\n     * assigned to, if any.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} lineNo Line number in source code.\r\n     * @return {string} The function name, if discoverable.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function guessFunctionName(url, lineNo) {\r\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/, reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/, line = '', maxLines = 10, source = getSource(url), m;\r\n        if (!source.length) {\r\n            return UNKNOWN_FUNCTION;\r\n        }\r\n        // Walk backwards from the first line in the function until we find the line which\r\n        // matches the pattern above, which is the function definition\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            line = source[lineNo - i] + line;\r\n            if (!is_5(line)) {\r\n                if ((m = reGuessFunction.exec(line))) {\r\n                    return m[1];\r\n                }\r\n                else if ((m = reFunctionArgNames.exec(line))) {\r\n                    return m[1];\r\n                }\r\n            }\r\n        }\r\n        return UNKNOWN_FUNCTION;\r\n    }\r\n    /**\r\n     * Retrieves the surrounding lines from where an exception occurred.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} line Line number in source code to center around for context.\r\n     * @return {?Array.<string>} Lines of source code.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function gatherContext(url, line) {\r\n        var source = getSource(url);\r\n        if (!source.length) {\r\n            return null;\r\n        }\r\n        var context = [], \r\n        // linesBefore & linesAfter are inclusive with the offending line.\r\n        // if linesOfContext is even, there will be one extra line\r\n        //   *before* the offending line.\r\n        linesBefore = Math.floor(TraceKit.linesOfContext / 2), \r\n        // Add one extra line if linesOfContext is odd\r\n        linesAfter = linesBefore + (TraceKit.linesOfContext % 2), start = Math.max(0, line - linesBefore - 1), end = Math.min(source.length, line + linesAfter - 1);\r\n        line -= 1; // convert to 0-based index\r\n        for (var i = start; i < end; ++i) {\r\n            if (!is_5(source[i])) {\r\n                context.push(source[i]);\r\n            }\r\n        }\r\n        return context.length > 0 ? context : null;\r\n    }\r\n    /**\r\n     * Escapes special characters, except for whitespace, in a string to be\r\n     * used inside a regular expression as a string literal.\r\n     * @param {string} text The string.\r\n     * @return {string} The escaped string literal.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeRegExp(text) {\r\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\r\n    }\r\n    /**\r\n     * Escapes special characters in a string to be used inside a regular\r\n     * expression as a string literal. Also ensures that HTML entities will\r\n     * be matched the same as their literal friends.\r\n     * @param {string} body The string.\r\n     * @return {string} The escaped string.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\r\n        return escapeRegExp(body)\r\n            .replace('<', '(?:<|&lt;)')\r\n            .replace('>', '(?:>|&gt;)')\r\n            .replace('&', '(?:&|&amp;)')\r\n            .replace('\"', '(?:\"|&quot;)')\r\n            .replace(/\\s+/g, '\\\\s+');\r\n    }\r\n    /**\r\n     * Determines where a code fragment occurs in the source code.\r\n     * @param {RegExp} re The function definition.\r\n     * @param {Array.<string>} urls A list of URLs to search.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInUrls(re, urls) {\r\n        var source, m;\r\n        for (var i = 0, j = urls.length; i < j; ++i) {\r\n            if ((source = getSource(urls[i])).length) {\r\n                source = source.join('\\n');\r\n                if ((m = re.exec(source))) {\r\n                    return {\r\n                        url: urls[i],\r\n                        line: source.substring(0, m.index).split('\\n').length,\r\n                        column: m.index - source.lastIndexOf('\\n', m.index) - 1,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Determines at which column a code fragment occurs on a line of the\r\n     * source code.\r\n     * @param {string} fragment The code fragment.\r\n     * @param {string} url The URL to search.\r\n     * @param {(string|number)} line The line number to examine.\r\n     * @return {?number} The column number.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInLine(fragment, url, line) {\r\n        var source = getSource(url), re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'), m;\r\n        line -= 1;\r\n        if (source && source.length > line && (m = re.exec(source[line]))) {\r\n            return m.index;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Determines where a function was defined within the source code.\r\n     * @param {(Function|string)} func A function reference or serialized\r\n     * function definition.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceByFunctionBody(func) {\r\n        if (is_5(window$1 && window$1.document)) {\r\n            return;\r\n        }\r\n        var urls = [getLocationHref()], scripts = window$1.document.getElementsByTagName('script'), body, code = '' + func, codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/, eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/, re, parts, result;\r\n        for (var i = 0; i < scripts.length; ++i) {\r\n            var script = scripts[i];\r\n            if (script.src) {\r\n                urls.push(script.src);\r\n            }\r\n        }\r\n        if (!(parts = codeRE.exec(code))) {\r\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\r\n        }\r\n        // not sure if this is really necessary, but I don’t have a test\r\n        // corpus large enough to confirm that and it was in the original.\r\n        else {\r\n            var name = parts[1] ? '\\\\s+' + parts[1] : '', args = parts[2].split(',').join('\\\\s*,\\\\s*');\r\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\r\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\r\n        }\r\n        // look for a normal function definition\r\n        if ((result = findSourceInUrls(re, urls))) {\r\n            return result;\r\n        }\r\n        // look for an old-school event handler function\r\n        if ((parts = eventRE.exec(code))) {\r\n            var event = parts[1];\r\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\r\n            // look for a function defined in HTML as an onXXX handler\r\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\r\n            if ((result = findSourceInUrls(re, urls[0]))) {\r\n                return result;\r\n            }\r\n            // look for ???\r\n            re = new RegExp(body);\r\n            if ((result = findSourceInUrls(re, urls))) {\r\n                return result;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    // Contents of Exception in various browsers.\r\n    //\r\n    // SAFARI:\r\n    // ex.message = Can't find variable: qq\r\n    // ex.line = 59\r\n    // ex.sourceId = 580238192\r\n    // ex.sourceURL = http://...\r\n    // ex.expressionBeginOffset = 96\r\n    // ex.expressionCaretOffset = 98\r\n    // ex.expressionEndOffset = 98\r\n    // ex.name = ReferenceError\r\n    //\r\n    // FIREFOX:\r\n    // ex.message = qq is not defined\r\n    // ex.fileName = http://...\r\n    // ex.lineNumber = 59\r\n    // ex.columnNumber = 69\r\n    // ex.stack = ...stack trace... (see the example below)\r\n    // ex.name = ReferenceError\r\n    //\r\n    // CHROME:\r\n    // ex.message = qq is not defined\r\n    // ex.name = ReferenceError\r\n    // ex.type = not_defined\r\n    // ex.arguments = ['aa']\r\n    // ex.stack = ...stack trace...\r\n    //\r\n    // INTERNET EXPLORER:\r\n    // ex.message = ...\r\n    // ex.name = ReferenceError\r\n    //\r\n    // OPERA:\r\n    // ex.message = ...message... (see the example below)\r\n    // ex.name = ReferenceError\r\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\r\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\r\n    /**\r\n     * Computes stack trace information from the stack property.\r\n     * Chrome and Gecko use this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStackProp(ex) {\r\n        if (!ex.stack) {\r\n            return null;\r\n        }\r\n        var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i, gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i, winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i, \r\n        // Used to additionally parse URL/line/column from eval frames\r\n        isEval, geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i, chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/, lines = ex.stack.split('\\n'), stack = [], submatch, parts, element, reference = /^(.*) is undefined$/.exec(ex.message);\r\n        for (var i = 0, j = lines.length; i < j; ++i) {\r\n            if ((parts = chrome.exec(lines[i]))) {\r\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\r\n                isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\r\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\r\n                    // throw out eval line/column and use top-most line/column number\r\n                    parts[2] = submatch[1]; // url\r\n                    // NOTE: It's messing out our integration tests in Karma, let's see if we can live with it – Kamil\r\n                    // parts[3] = submatch[2]; // line\r\n                    // parts[4] = submatch[3]; // column\r\n                }\r\n                element = {\r\n                    url: !isNative ? parts[2] : null,\r\n                    func: parts[1] || UNKNOWN_FUNCTION,\r\n                    args: isNative ? [parts[2]] : [],\r\n                    line: parts[3] ? +parts[3] : null,\r\n                    column: parts[4] ? +parts[4] : null,\r\n                };\r\n            }\r\n            else if ((parts = winjs.exec(lines[i]))) {\r\n                element = {\r\n                    url: parts[2],\r\n                    func: parts[1] || UNKNOWN_FUNCTION,\r\n                    args: [],\r\n                    line: +parts[3],\r\n                    column: parts[4] ? +parts[4] : null,\r\n                };\r\n            }\r\n            else if ((parts = gecko.exec(lines[i]))) {\r\n                isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\r\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\r\n                    // throw out eval line/column and use top-most line number\r\n                    parts[3] = submatch[1];\r\n                    // NOTE: It's messing out our integration tests in Karma, let's see if we can live with it – Kamil\r\n                    // parts[4] = submatch[2];\r\n                    // parts[5] = null; // no column when eval\r\n                }\r\n                else if (i === 0 && !parts[5] && !is_5(ex.columnNumber)) {\r\n                    // FireFox uses this awesome columnNumber property for its top frame\r\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\r\n                    // so adding 1\r\n                    // NOTE: this hack doesn't work if top-most frame is eval\r\n                    stack[0].column = ex.columnNumber + 1;\r\n                }\r\n                element = {\r\n                    url: parts[3],\r\n                    func: parts[1] || UNKNOWN_FUNCTION,\r\n                    args: parts[2] ? parts[2].split(',') : [],\r\n                    line: parts[4] ? +parts[4] : null,\r\n                    column: parts[5] ? +parts[5] : null,\r\n                };\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n            if (!element.func && element.line) {\r\n                element.func = guessFunctionName(element.url, element.line);\r\n            }\r\n            if (TraceKit.remoteFetching && element.url && element.url.substr(0, 5) === 'blob:') {\r\n                // Special case for handling JavaScript loaded into a blob.\r\n                // We use a synchronous AJAX request here as a blob is already in\r\n                // memory - it's not making a network request.  This will generate a warning\r\n                // in the browser console, but there has already been an error so that's not\r\n                // that much of an issue.\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open('GET', element.url, false);\r\n                xhr.send('');\r\n                // If we failed to download the source, skip this patch\r\n                if (xhr.status === 200) {\r\n                    var source = xhr.responseText || '';\r\n                    // We trim the source down to the last 300 characters as sourceMappingURL is always at the end of the file.\r\n                    // Why 300? To be in line with: https://github.com/getsentry/sentry/blob/4af29e8f2350e20c28a6933354e4f42437b4ba42/src/sentry/lang/javascript/processor.py#L164-L175\r\n                    source = source.slice(-300);\r\n                    // Now we dig out the source map URL\r\n                    var sourceMaps = source.match(/\\/\\/# sourceMappingURL=(.*)$/);\r\n                    // If we don't find a source map comment or we find more than one, continue on to the next element.\r\n                    if (sourceMaps) {\r\n                        var sourceMapAddress = sourceMaps[1];\r\n                        // Now we check to see if it's a relative URL.\r\n                        // If it is, convert it to an absolute one.\r\n                        if (sourceMapAddress.charAt(0) === '~') {\r\n                            sourceMapAddress = getLocationOrigin() + sourceMapAddress.slice(1);\r\n                        }\r\n                        // Now we strip the '.map' off of the end of the URL and update the\r\n                        // element so that Sentry can match the map to the blob.\r\n                        element.url = sourceMapAddress.slice(0, -4);\r\n                    }\r\n                }\r\n            }\r\n            element.context = element.line ? gatherContext(element.url, element.line) : null;\r\n            stack.push(element);\r\n        }\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\r\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\r\n        }\r\n        return {\r\n            mode: 'stack',\r\n            name: ex.name,\r\n            message: ex.message,\r\n            stack: stack,\r\n        };\r\n    }\r\n    /**\r\n     * Computes stack trace information from the stacktrace property.\r\n     * Opera 10+ uses this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStacktraceProp(ex) {\r\n        // Access and store the stacktrace property before doing ANYTHING\r\n        // else to it because Opera is not very good at providing it\r\n        // reliably in other circumstances.\r\n        var stacktrace = ex.stacktrace;\r\n        if (!stacktrace) {\r\n            return;\r\n        }\r\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i, opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i, lines = stacktrace.split('\\n'), stack = [], parts;\r\n        for (var line = 0; line < lines.length; line += 2) {\r\n            var element = null;\r\n            if ((parts = opera10Regex.exec(lines[line]))) {\r\n                element = {\r\n                    url: parts[2],\r\n                    line: +parts[1],\r\n                    column: null,\r\n                    func: parts[3],\r\n                    args: [],\r\n                };\r\n            }\r\n            else if ((parts = opera11Regex.exec(lines[line]))) {\r\n                element = {\r\n                    url: parts[6],\r\n                    line: +parts[1],\r\n                    column: +parts[2],\r\n                    func: parts[3] || parts[4],\r\n                    args: parts[5] ? parts[5].split(',') : [],\r\n                };\r\n            }\r\n            if (element) {\r\n                if (!element.func && element.line) {\r\n                    element.func = guessFunctionName(element.url, element.line);\r\n                }\r\n                if (element.line) {\r\n                    try {\r\n                        element.context = gatherContext(element.url, element.line);\r\n                    }\r\n                    catch (exc) { }\r\n                }\r\n                if (!element.context) {\r\n                    element.context = [lines[line + 1]];\r\n                }\r\n                stack.push(element);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n        return {\r\n            mode: 'stacktrace',\r\n            name: ex.name,\r\n            message: ex.message,\r\n            stack: stack,\r\n        };\r\n    }\r\n    /**\r\n     * NOT TESTED.\r\n     * Computes stack trace information from an error message that includes\r\n     * the stack trace.\r\n     * Opera 9 and earlier use this method if the option to show stack\r\n     * traces is turned on in opera:config.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\r\n        // TODO: Clean this function up\r\n        // Opera includes a stack trace into the exception message. An example is:\r\n        //\r\n        // Statement on line 3: Undefined variable: undefinedFunc\r\n        // Backtrace:\r\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\r\n        //         undefinedFunc(a);\r\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\r\n        //           zzz(x, y, z);\r\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\r\n        //           yyy(a, a, a);\r\n        //   Line 1 of function script\r\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\r\n        //   ...\r\n        var lines = ex.message.split('\\n');\r\n        if (lines.length < 4) {\r\n            return null;\r\n        }\r\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i, stack = [], scripts = window$1 && window$1.document && window$1.document.getElementsByTagName('script'), inlineScriptBlocks = [], parts;\r\n        for (var s in scripts) {\r\n            if (_has(scripts, s) && !scripts[s].src) {\r\n                inlineScriptBlocks.push(scripts[s]);\r\n            }\r\n        }\r\n        for (var line = 2; line < lines.length; line += 2) {\r\n            var item = null;\r\n            if ((parts = lineRE1.exec(lines[line]))) {\r\n                item = {\r\n                    url: parts[2],\r\n                    func: parts[3],\r\n                    args: [],\r\n                    line: +parts[1],\r\n                    column: null,\r\n                };\r\n            }\r\n            else if ((parts = lineRE2.exec(lines[line]))) {\r\n                item = {\r\n                    url: parts[3],\r\n                    func: parts[4],\r\n                    args: [],\r\n                    line: +parts[1],\r\n                    column: null,\r\n                };\r\n                var relativeLine = +parts[1]; // relative to the start of the <SCRIPT> block\r\n                var script = inlineScriptBlocks[parts[2] - 1];\r\n                if (script) {\r\n                    var source = getSource(item.url);\r\n                    if (source) {\r\n                        source = source.join('\\n');\r\n                        var pos = source.indexOf(script.innerText);\r\n                        if (pos >= 0) {\r\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if ((parts = lineRE3.exec(lines[line]))) {\r\n                var url = getLocationHref().replace(/#.*$/, '');\r\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\r\n                var src = findSourceInUrls(re, [url]);\r\n                item = {\r\n                    url: url,\r\n                    func: '',\r\n                    args: [],\r\n                    line: src ? src.line : parts[1],\r\n                    column: null,\r\n                };\r\n            }\r\n            if (item) {\r\n                if (!item.func) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var context = gatherContext(item.url, item.line);\r\n                var midline = context ? context[Math.floor(context.length / 2)] : null;\r\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\r\n                    item.context = context;\r\n                }\r\n                else {\r\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\r\n                    item.context = [lines[line + 1]];\r\n                }\r\n                stack.push(item);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null; // could not parse multiline exception message as Opera stack trace\r\n        }\r\n        return {\r\n            mode: 'multiline',\r\n            name: ex.name,\r\n            message: lines[0],\r\n            stack: stack,\r\n        };\r\n    }\r\n    /**\r\n     * Adds information about the first frame to incomplete stack traces.\r\n     * Safari and IE require this to get complete data on the first frame.\r\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\r\n     * one of the compute* methods.\r\n     * @param {string} url The URL of the script that caused an error.\r\n     * @param {(number|string)} lineNo The line number of the script that\r\n     * caused an error.\r\n     * @param {string=} message The error generated by the browser, which\r\n     * hopefully contains the name of the object that caused the error.\r\n     * @return {boolean} Whether or not the stack information was\r\n     * augmented.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\r\n        var initial = {\r\n            url: url,\r\n            line: lineNo,\r\n        };\r\n        if (initial.url && initial.line) {\r\n            stackInfo.incomplete = false;\r\n            if (!initial.func) {\r\n                initial.func = guessFunctionName(initial.url, initial.line);\r\n            }\r\n            if (!initial.context) {\r\n                initial.context = gatherContext(initial.url, initial.line);\r\n            }\r\n            var reference = / '([^']+)' /.exec(message);\r\n            if (reference) {\r\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\r\n            }\r\n            if (stackInfo.stack.length > 0) {\r\n                if (stackInfo.stack[0].url === initial.url) {\r\n                    if (stackInfo.stack[0].line === initial.line) {\r\n                        return false; // already in stack trace\r\n                    }\r\n                    else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\r\n                        stackInfo.stack[0].line = initial.line;\r\n                        stackInfo.stack[0].context = initial.context;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            stackInfo.stack.unshift(initial);\r\n            stackInfo.partial = true;\r\n            return true;\r\n        }\r\n        else {\r\n            stackInfo.incomplete = true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Computes stack trace information by walking the arguments.caller\r\n     * chain at the time the exception occurred. This will cause earlier\r\n     * frames to be missed but is the only way to get any stack trace in\r\n     * Safari and IE. The top frame is restored by\r\n     * {@link augmentStackTraceWithInitialElement}.\r\n     * @param {Error} ex\r\n     * @return {TraceKit.StackTrace=} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\r\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i, stack = [], funcs = {}, recursion = false, parts, item, source;\r\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\r\n            if (curr === computeStackTrace || curr === TraceKit.report) {\r\n                continue;\r\n            }\r\n            item = {\r\n                url: null,\r\n                func: UNKNOWN_FUNCTION,\r\n                args: [],\r\n                line: null,\r\n                column: null,\r\n            };\r\n            if (curr.name) {\r\n                item.func = curr.name;\r\n            }\r\n            else if ((parts = functionName.exec(curr.toString()))) {\r\n                item.func = parts[1];\r\n            }\r\n            if (typeof item.func === 'undefined') {\r\n                try {\r\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\r\n                }\r\n                catch (e) { }\r\n            }\r\n            if ((source = findSourceByFunctionBody(curr))) {\r\n                item.url = source.url;\r\n                item.line = source.line;\r\n                if (item.func === UNKNOWN_FUNCTION) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\r\n                if (reference) {\r\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\r\n                }\r\n            }\r\n            if (funcs['' + curr]) {\r\n                recursion = true;\r\n            }\r\n            else {\r\n                funcs['' + curr] = true;\r\n            }\r\n            stack.push(item);\r\n        }\r\n        if (depth) {\r\n            stack.splice(0, depth);\r\n        }\r\n        var result = {\r\n            mode: 'callers',\r\n            name: ex.name,\r\n            message: ex.message,\r\n            stack: stack,\r\n        };\r\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\r\n        return result;\r\n    }\r\n    /**\r\n     * Computes a stack trace for an exception.\r\n     * @param {Error} ex\r\n     * @param {(string|number)=} depth\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTrace(ex, depth) {\r\n        var stack = null;\r\n        depth = depth == null ? 0 : +depth;\r\n        try {\r\n            // This must be tried first because Opera 10 *destroys*\r\n            // its stacktrace property if you try to access the stack\r\n            // property first!!\r\n            stack = computeStackTraceFromStacktraceProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        try {\r\n            stack = computeStackTraceFromStackProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        try {\r\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        try {\r\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        return {\r\n            name: ex.name,\r\n            message: ex.message,\r\n            mode: 'failed',\r\n        };\r\n    }\r\n    /**\r\n     * Logs a stacktrace starting from the previous call and working down.\r\n     * @param {(number|string)=} depth How many frames deep to trace.\r\n     * @return {TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceOfCaller(depth) {\r\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\r\n        try {\r\n            throw new Error();\r\n        }\r\n        catch (ex) {\r\n            return computeStackTrace(ex, depth + 1);\r\n        }\r\n    }\r\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\r\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\r\n    computeStackTrace.guessFunctionName = guessFunctionName;\r\n    computeStackTrace.gatherContext = gatherContext;\r\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\r\n    computeStackTrace.getSource = getSource;\r\n    return computeStackTrace;\r\n})();\r\n/**\r\n * Extends support for global error handling for asynchronous browser\r\n * functions. Adopted from Closure Library's errorhandler.js\r\n * @memberof TraceKit\r\n */\r\nTraceKit.extendToAsynchronousCallbacks = function () {\r\n    var _helper = function _helper(fnName) {\r\n        var originalFn = window$1[fnName];\r\n        window$1[fnName] = function traceKitAsyncExtension() {\r\n            // Make a copy of the arguments\r\n            var args = _slice.call(arguments);\r\n            var originalCallback = args[0];\r\n            if (typeof originalCallback === 'function') {\r\n                args[0] = TraceKit.wrap(originalCallback);\r\n            }\r\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\r\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\r\n            // can just call the original function directly.\r\n            if (originalFn.apply) {\r\n                return originalFn.apply(this, args);\r\n            }\r\n            else {\r\n                return originalFn(args[0], args[1]);\r\n            }\r\n        };\r\n    };\r\n    _helper('setTimeout');\r\n    _helper('setInterval');\r\n};\r\nTraceKit.remoteFetching = false;\r\nTraceKit.collectWindowErrors = true;\r\nTraceKit.linesOfContext = 11;\r\nvar subscribe = TraceKit.report.subscribe;\r\nvar installGlobalHandler = TraceKit.report.installGlobalHandler;\r\nvar installGlobalUnhandledRejectionHandler = TraceKit.report.installGlobalUnhandledRejectionHandler;\r\nvar computeStackTrace = TraceKit.computeStackTrace;\n\nvar STACKTRACE_LIMIT = 50;\r\n/** JSDoc */\r\nfunction exceptionFromStacktrace(stacktrace) {\r\n    var frames = prepareFramesForEvent(stacktrace.stack);\r\n    var exception = {\r\n        stacktrace: { frames: frames },\r\n        type: stacktrace.name,\r\n        value: stacktrace.message,\r\n    };\r\n    // tslint:disable-next-line:strict-type-predicates\r\n    if (exception.type === undefined && exception.value === '') {\r\n        exception.value = 'Unrecoverable error caught';\r\n    }\r\n    return exception;\r\n}\r\n/** JSDoc */\r\nfunction eventFromPlainObject(exception, syntheticException) {\r\n    var exceptionKeys = Object.keys(exception).sort();\r\n    var event = {\r\n        extra: {\r\n            __serialized__: object_7(exception),\r\n        },\r\n        fingerprint: [md5(exceptionKeys.join(''))],\r\n        message: \"Non-Error exception captured with keys: \" + object_8(exceptionKeys),\r\n    };\r\n    if (syntheticException) {\r\n        var stacktrace = computeStackTrace(syntheticException);\r\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\r\n        event.stacktrace = {\r\n            frames: frames_1,\r\n        };\r\n    }\r\n    return event;\r\n}\r\n/** JSDoc */\r\nfunction eventFromStacktrace(stacktrace) {\r\n    var exception = exceptionFromStacktrace(stacktrace);\r\n    return {\r\n        exception: {\r\n            values: [exception],\r\n        },\r\n    };\r\n}\r\n/** JSDoc */\r\nfunction prepareFramesForEvent(stack) {\r\n    if (!stack || !stack.length) {\r\n        return [];\r\n    }\r\n    var localStack = stack;\r\n    var firstFrameFunction = localStack[0].func || '';\r\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\r\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\r\n    if (string_4(firstFrameFunction, 'captureMessage') || string_4(firstFrameFunction, 'captureException')) {\r\n        localStack = localStack.slice(1);\r\n    }\r\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\r\n    if (string_4(lastFrameFunction, 'sentryWrapped')) {\r\n        localStack = localStack.slice(0, -1);\r\n    }\r\n    // The frame where the crash happened, should be the last entry in the array\r\n    return localStack\r\n        .map(function (frame) { return ({\r\n        colno: frame.column,\r\n        filename: frame.url || localStack[0].url,\r\n        function: frame.func || '?',\r\n        in_app: true,\r\n        lineno: frame.line,\r\n    }); })\r\n        .slice(0, STACKTRACE_LIMIT)\r\n        .reverse();\r\n}\r\n/**\r\n * Adds exception values, type and value to an synthetic Exception.\r\n * @param event The event to modify.\r\n * @param message Message to be added.\r\n */\r\nfunction addExceptionTypeValue(event, message) {\r\n    event.exception = event.exception || {};\r\n    event.exception.values = event.exception.values || [];\r\n    event.exception.values[0] = event.exception.values[0] || {};\r\n    event.exception.values[0].value = event.exception.values[0].value || message;\r\n    event.exception.values[0].type = event.exception.values[0].type || 'Error';\r\n}\n\n/** Base Transport class implementation */\r\nvar BaseTransport = /** @class */ (function () {\r\n    function BaseTransport(options) {\r\n        this.options = options;\r\n        /** A simple buffer holding all requests. */\r\n        this.buffer = new core.PromiseBuffer(30);\r\n        this.url = new core.API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BaseTransport.prototype.sendEvent = function (_) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                throw new core.SentryError('Transport Class has to implement `sendEvent` method');\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BaseTransport.prototype.close = function (timeout) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.buffer.drain(timeout)];\r\n            });\r\n        });\r\n    };\r\n    return BaseTransport;\r\n}());\n\nvar global$1 = misc_3();\r\n/** `fetch` based transport */\r\nvar FetchTransport = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FetchTransport, _super);\r\n    function FetchTransport() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    FetchTransport.prototype.sendEvent = function (body) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var defaultOptions;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                defaultOptions = {\r\n                    body: body,\r\n                    method: 'POST',\r\n                    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\r\n                    // https://caniuse.com/#feat=referrer-policy\r\n                    // It doesn't. And it throw exception instead of ignoring this parameter...\r\n                    // REF: https://github.com/getsentry/raven-js/issues/1233\r\n                    referrerPolicy: (supports_8() ? 'origin' : ''),\r\n                };\r\n                return [2 /*return*/, this.buffer.add(global$1.fetch(this.url, defaultOptions).then(function (response) { return ({\r\n                        status: dist_2.fromHttpCode(response.status),\r\n                    }); }))];\r\n            });\r\n        });\r\n    };\r\n    return FetchTransport;\r\n}(BaseTransport));\n\n/** `XHR` based transport */\r\nvar XHRTransport = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XHRTransport, _super);\r\n    function XHRTransport() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    XHRTransport.prototype.sendEvent = function (body) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.buffer.add(new Promise(function (resolve, reject) {\r\n                        var request = new XMLHttpRequest();\r\n                        request.onreadystatechange = function () {\r\n                            if (request.readyState !== 4) {\r\n                                return;\r\n                            }\r\n                            if (request.status === 200) {\r\n                                resolve({\r\n                                    status: dist_2.fromHttpCode(request.status),\r\n                                });\r\n                            }\r\n                            reject(request);\r\n                        };\r\n                        request.open('POST', _this.url);\r\n                        request.send(body);\r\n                    }))];\r\n            });\r\n        });\r\n    };\r\n    return XHRTransport;\r\n}(BaseTransport));\n\nvar global$2 = misc_3();\r\n/** `sendBeacon` based transport */\r\nvar BeaconTransport = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BeaconTransport, _super);\r\n    function BeaconTransport() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BeaconTransport.prototype.sendEvent = function (body) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                result = global$2.navigator.sendBeacon(this.url, body);\r\n                return [2 /*return*/, this.buffer.add(Promise.resolve({\r\n                        status: result ? dist_2.Success : dist_2.Failed,\r\n                    }))];\r\n            });\r\n        });\r\n    };\r\n    return BeaconTransport;\r\n}(BaseTransport));\n\n\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n\tBaseTransport: BaseTransport,\n\tFetchTransport: FetchTransport,\n\tXHRTransport: XHRTransport,\n\tBeaconTransport: BeaconTransport\n});\n\n/** The Sentry Browser SDK Backend. */\r\nvar BrowserBackend = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BrowserBackend, _super);\r\n    function BrowserBackend() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserBackend.prototype.install = function () {\r\n        // We are only called by the client if the SDK is enabled and a valid Dsn\r\n        // has been configured. If no Dsn is present, this indicates a programming\r\n        // error.\r\n        var dsn = this.options.dsn;\r\n        if (!dsn) {\r\n            throw new core.SentryError('Invariant exception: install() must not be called when disabled');\r\n        }\r\n        Error.stackTraceLimit = 50;\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    BrowserBackend.prototype.setupTransport = function () {\r\n        if (!this.options.dsn) {\r\n            // We return the noop transport here in case there is no Dsn.\r\n            return _super.prototype.setupTransport.call(this);\r\n        }\r\n        var transportOptions = this.options.transportOptions ? this.options.transportOptions : { dsn: this.options.dsn };\r\n        if (this.options.transport) {\r\n            return new this.options.transport(transportOptions);\r\n        }\r\n        else if (supports_6()) {\r\n            return new BeaconTransport(transportOptions);\r\n        }\r\n        else if (supports_4()) {\r\n            return new FetchTransport(transportOptions);\r\n        }\r\n        return new XHRTransport(transportOptions);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var event, ex, ex, name_1, message, ex, ex;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(is_2(exception) && exception.error)) return [3 /*break*/, 1];\r\n                        ex = exception;\r\n                        exception = ex.error; // tslint:disable-line:no-parameter-reassignment\r\n                        event = eventFromStacktrace(computeStackTrace(exception));\r\n                        return [3 /*break*/, 7];\r\n                    case 1:\r\n                        if (!(is_3(exception) || is_4(exception))) return [3 /*break*/, 3];\r\n                        ex = exception;\r\n                        name_1 = ex.name || (is_3(ex) ? 'DOMError' : 'DOMException');\r\n                        message = ex.message ? name_1 + \": \" + ex.message : name_1;\r\n                        return [4 /*yield*/, this.eventFromMessage(message, undefined, hint)];\r\n                    case 2:\r\n                        event = _a.sent();\r\n                        addExceptionTypeValue(event, message);\r\n                        return [3 /*break*/, 7];\r\n                    case 3:\r\n                        if (!is_1(exception)) return [3 /*break*/, 4];\r\n                        // we have a real Error object, do nothing\r\n                        event = eventFromStacktrace(computeStackTrace(exception));\r\n                        return [3 /*break*/, 7];\r\n                    case 4:\r\n                        if (!(is_10(exception) && hint && hint.syntheticException)) return [3 /*break*/, 5];\r\n                        ex = exception;\r\n                        event = eventFromPlainObject(ex, hint.syntheticException);\r\n                        addExceptionTypeValue(event, 'Custom Object');\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        ex = exception;\r\n                        return [4 /*yield*/, this.eventFromMessage(ex, undefined, hint)];\r\n                    case 6:\r\n                        event = _a.sent();\r\n                        addExceptionTypeValue(event, \"\" + ex);\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        event = tslib_1.__assign({}, event, { event_id: hint && hint.event_id, exception: tslib_1.__assign({}, event.exception, { mechanism: {\r\n                                    handled: true,\r\n                                    type: 'generic',\r\n                                } }) });\r\n                        return [2 /*return*/, event];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\r\n        if (level === void 0) { level = dist_1.Info; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var event, stacktrace, frames_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                event = {\r\n                    event_id: hint && hint.event_id,\r\n                    level: level,\r\n                    message: message,\r\n                };\r\n                if (this.options.attachStacktrace && hint && hint.syntheticException) {\r\n                    stacktrace = computeStackTrace(hint.syntheticException);\r\n                    frames_1 = prepareFramesForEvent(stacktrace.stack);\r\n                    event.stacktrace = {\r\n                        frames: frames_1,\r\n                    };\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        });\r\n    };\r\n    return BrowserBackend;\r\n}(core.BaseBackend));\n\nvar SDK_NAME = 'sentry.javascript.browser';\r\nvar SDK_VERSION = '4.5.0';\n\n/**\r\n * The Sentry Browser SDK Client.\r\n *\r\n * @see BrowserOptions for documentation on configuration options.\r\n * @see SentryClient for usage documentation.\r\n */\r\nvar BrowserClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BrowserClient, _super);\r\n    /**\r\n     * Creates a new Browser SDK instance.\r\n     *\r\n     * @param options Configuration options for this SDK.\r\n     */\r\n    function BrowserClient(options) {\r\n        return _super.call(this, BrowserBackend, options) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserClient.prototype.prepareEvent = function (event, scope, hint) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                event.platform = event.platform || 'javascript';\r\n                event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\r\n                        {\r\n                            name: 'npm:@sentry/browser',\r\n                            version: SDK_VERSION,\r\n                        },\r\n                    ]), version: SDK_VERSION });\r\n                return [2 /*return*/, _super.prototype.prepareEvent.call(this, event, scope, hint)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Show a report dialog to the user to send feedback to a specific event.\r\n     *\r\n     * @param options Set individual options for the dialog\r\n     */\r\n    BrowserClient.prototype.showReportDialog = function (options) {\r\n        if (options === void 0) { options = {}; }\r\n        // doesn't work without a document (React Native)\r\n        var document = misc_3().document;\r\n        if (!document) {\r\n            return;\r\n        }\r\n        var dsn = options.dsn || this.getDsn();\r\n        if (!options.eventId) {\r\n            throw new core.SentryError('Missing `eventId` option in showReportDialog call');\r\n        }\r\n        if (!dsn) {\r\n            throw new core.SentryError('Missing `Dsn` option in showReportDialog call');\r\n        }\r\n        var script = document.createElement('script');\r\n        script.async = true;\r\n        script.src = new core.API(dsn).getReportDialogEndpoint(options);\r\n        (document.head || document.body).appendChild(script);\r\n    };\r\n    return BrowserClient;\r\n}(core.BaseClient));\n\nvar logger_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n// TODO: Implement different loggers for different environments\nvar global = misc.getGlobalObject();\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this.enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this.enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this.enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc.consoleSandbox(function () {\n            global.console.log(\"Sentry Logger [Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc.consoleSandbox(function () {\n            global.console.warn(\"Sentry Logger [Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc.consoleSandbox(function () {\n            global.console.error(\"Sentry Logger [Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\nvar logger = new Logger();\nexports.logger = logger;\n\n});\n\nunwrapExports(logger_1);\nvar logger_2 = logger_1.logger;\n\nvar debounceDuration = 1000;\r\nvar keypressTimeout;\r\nvar lastCapturedEvent;\r\nvar ignoreOnError = 0;\r\n/** JSDoc */\r\nfunction shouldIgnoreOnError() {\r\n    return ignoreOnError > 0;\r\n}\r\n/** JSDoc */\r\nfunction ignoreNextOnError() {\r\n    // onerror should trigger before setTimeout\r\n    ignoreOnError += 1;\r\n    setTimeout(function () {\r\n        ignoreOnError -= 1;\r\n    });\r\n}\r\n/**\r\n * Instruments the given function and sends an event to Sentry every time the\r\n * function throws an exception.\r\n *\r\n * @param fn A function to wrap.\r\n * @returns The wrapped function.\r\n */\r\nfunction wrap(fn, options, before) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!is_6(fn)) {\r\n        return fn;\r\n    }\r\n    try {\r\n        // We don't wanna wrap it twice\r\n        if (fn.__sentry__) {\r\n            return fn;\r\n        }\r\n        // If this has already been wrapped in the past, return that wrapped function\r\n        if (fn.__sentry_wrapped__) {\r\n            return fn.__sentry_wrapped__;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just accessing custom props in some Selenium environments\r\n        // can cause a \"Permission denied\" exception (see raven-js#495).\r\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\r\n        return fn;\r\n    }\r\n    var sentryWrapped = function () {\r\n        var _this = this;\r\n        if (before && is_6(before)) {\r\n            before.apply(this, arguments);\r\n        }\r\n        var args = Array.prototype.slice.call(arguments);\r\n        try {\r\n            // Attempt to invoke user-land function\r\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\r\n            //       means Raven caught an error invoking your application code. This is\r\n            //       expected behavior and NOT indicative of a bug with Raven.js.\r\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\r\n            if (fn.handleEvent) {\r\n                return fn.handleEvent.apply(this, wrappedArguments);\r\n            }\r\n            else {\r\n                return fn.apply(this, wrappedArguments);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            ignoreNextOnError();\r\n            core.withScope(function (scope) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    scope.addEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                        var processedEvent;\r\n                        return tslib_1.__generator(this, function (_a) {\r\n                            processedEvent = tslib_1.__assign({}, event);\r\n                            if (options.mechanism) {\r\n                                processedEvent.exception = processedEvent.exception || {};\r\n                                processedEvent.exception.mechanism = options.mechanism;\r\n                            }\r\n                            processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: object_6(args, 2) });\r\n                            return [2 /*return*/, processedEvent];\r\n                        });\r\n                    }); });\r\n                    core.captureException(ex);\r\n                    return [2 /*return*/];\r\n                });\r\n            }); });\r\n            throw ex;\r\n        }\r\n    };\r\n    // Accessing some objects may throw\r\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\r\n    try {\r\n        for (var property in fn) {\r\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\r\n                sentryWrapped[property] = fn[property];\r\n            }\r\n        }\r\n    }\r\n    catch (_oO) { } // tslint:disable-line:no-empty\r\n    sentryWrapped.prototype = fn.prototype;\r\n    fn.__sentry_wrapped__ = sentryWrapped;\r\n    // Signal that this function has been wrapped/filled already\r\n    // for both debugging and to prevent it to being wrapped/filled twice\r\n    sentryWrapped.__sentry__ = true;\r\n    sentryWrapped.__sentry_original__ = fn;\r\n    return sentryWrapped;\r\n}\r\n/**\r\n * Wraps addEventListener to capture UI breadcrumbs\r\n * @param eventName the event name (e.g. \"click\")\r\n * @returns wrapped breadcrumb events handler\r\n */\r\nfunction breadcrumbEventHandler(eventName) {\r\n    return function (event) {\r\n        // reset keypress timeout; e.g. triggering a 'click' after\r\n        // a 'keypress' will reset the keypress debounce so that a new\r\n        // set of keypresses can be recorded\r\n        keypressTimeout = undefined;\r\n        // It's possible this handler might trigger multiple times for the same\r\n        // event (e.g. event propagation through node ancestors). Ignore if we've\r\n        // already captured the event.\r\n        if (lastCapturedEvent === event) {\r\n            return;\r\n        }\r\n        lastCapturedEvent = event;\r\n        // try/catch both:\r\n        // - accessing event.target (see getsentry/raven-js#838, #768)\r\n        // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\r\n        //   can throw an exception in some circumstances.\r\n        var target;\r\n        try {\r\n            target = misc_5(event.target);\r\n        }\r\n        catch (e) {\r\n            target = '<unknown>';\r\n        }\r\n        core.getCurrentHub().addBreadcrumb({\r\n            category: \"ui.\" + eventName,\r\n            message: target,\r\n        }, {\r\n            event: event,\r\n            name: eventName,\r\n        });\r\n    };\r\n}\r\n/**\r\n * Wraps addEventListener to capture keypress UI events\r\n * @returns wrapped keypress events handler\r\n */\r\nfunction keypressEventHandler() {\r\n    // TODO: if somehow user switches keypress target before\r\n    //       debounce timeout is triggered, we will only capture\r\n    //       a single breadcrumb from the FIRST target (acceptable?)\r\n    return function (event) {\r\n        var target;\r\n        try {\r\n            target = event.target;\r\n        }\r\n        catch (e) {\r\n            // just accessing event properties can throw an exception in some rare circumstances\r\n            // see: https://github.com/getsentry/raven-js/issues/838\r\n            return;\r\n        }\r\n        var tagName = target && target.tagName;\r\n        // only consider keypress events on actual input elements\r\n        // this will disregard keypresses targeting body (e.g. tabbing\r\n        // through elements, hotkeys, etc)\r\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\r\n            return;\r\n        }\r\n        // record first keypress in a series, but ignore subsequent\r\n        // keypresses until debounce clears\r\n        if (!keypressTimeout) {\r\n            breadcrumbEventHandler('input')(event);\r\n        }\r\n        clearTimeout(keypressTimeout);\r\n        keypressTimeout = setTimeout(function () {\r\n            keypressTimeout = undefined;\r\n        }, debounceDuration);\r\n    };\r\n}\n\n/** Global handlers */\r\nvar GlobalHandlers = /** @class */ (function () {\r\n    /** JSDoc */\r\n    function GlobalHandlers(options) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = GlobalHandlers.id;\r\n        this.options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GlobalHandlers.prototype.setupOnce = function () {\r\n        subscribe(function (stack, _, error) {\r\n            // TODO: use stack.context to get a valuable information from TraceKit, eg.\r\n            // [\r\n            //   0: \"  })\"\r\n            //   1: \"\"\r\n            //   2: \"  function foo () {\"\r\n            //   3: \"    Sentry.captureException('some error')\"\r\n            //   4: \"    Sentry.captureMessage('some message')\"\r\n            //   5: \"    throw 'foo'\"\r\n            //   6: \"  }\"\r\n            //   7: \"\"\r\n            //   8: \"  function bar () {\"\r\n            //   9: \"    foo();\"\r\n            //   10: \"  }\"\r\n            // ]\r\n            if (shouldIgnoreOnError()) {\r\n                return;\r\n            }\r\n            var self = core.getCurrentHub().getIntegration(GlobalHandlers);\r\n            if (self) {\r\n                core.getCurrentHub().captureEvent(self.eventFromGlobalHandler(stack), { originalException: error, data: { stack: stack } });\r\n            }\r\n        });\r\n        if (this.options.onerror) {\r\n            logger_2.log('Global Handler attached: onerror');\r\n            installGlobalHandler();\r\n        }\r\n        if (this.options.onunhandledrejection) {\r\n            logger_2.log('Global Handler attached: onunhandledrejection');\r\n            installGlobalUnhandledRejectionHandler();\r\n        }\r\n    };\r\n    /** JSDoc */\r\n    GlobalHandlers.prototype.eventFromGlobalHandler = function (stacktrace) {\r\n        var event = eventFromStacktrace(stacktrace);\r\n        return tslib_1.__assign({}, event, { exception: tslib_1.__assign({}, event.exception, { mechanism: {\r\n                    data: {\r\n                        mode: stacktrace.mode,\r\n                    },\r\n                    handled: false,\r\n                    type: stacktrace.mechanism,\r\n                } }) });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GlobalHandlers.id = 'GlobalHandlers';\r\n    return GlobalHandlers;\r\n}());\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\r\nvar TryCatch = /** @class */ (function () {\r\n    function TryCatch() {\r\n        /** JSDoc */\r\n        this.ignoreOnError = 0;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = TryCatch.id;\r\n    }\r\n    /** JSDoc */\r\n    TryCatch.prototype.wrapTimeFunction = function (original) {\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var originalCallback = args[0];\r\n            args[0] = wrap(originalCallback, {\r\n                mechanism: {\r\n                    data: { function: getFunctionName(original) },\r\n                    handled: true,\r\n                    type: 'instrument',\r\n                },\r\n            });\r\n            return original.apply(this, args);\r\n        };\r\n    };\r\n    /** JSDoc */\r\n    TryCatch.prototype.wrapRAF = function (original) {\r\n        return function (callback) {\r\n            return original(wrap(callback, {\r\n                mechanism: {\r\n                    data: {\r\n                        function: 'requestAnimationFrame',\r\n                        handler: getFunctionName(original),\r\n                    },\r\n                    handled: true,\r\n                    type: 'instrument',\r\n                },\r\n            }));\r\n        };\r\n    };\r\n    /** JSDoc */\r\n    TryCatch.prototype.wrapEventTarget = function (target) {\r\n        var global = misc_3();\r\n        var proto = global[target] && global[target].prototype;\r\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\r\n            return;\r\n        }\r\n        object_4(proto, 'addEventListener', function (original) {\r\n            return function (eventName, fn, options) {\r\n                try {\r\n                    fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\r\n                        mechanism: {\r\n                            data: {\r\n                                function: 'handleEvent',\r\n                                handler: getFunctionName(fn),\r\n                                target: target,\r\n                            },\r\n                            handled: true,\r\n                            type: 'instrument',\r\n                        },\r\n                    });\r\n                }\r\n                catch (err) {\r\n                    // can sometimes get 'Permission denied to access property \"handle Event'\r\n                }\r\n                // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\r\n                // so that we don't have more than one wrapper function\r\n                var before;\r\n                var clickHandler;\r\n                var keypressHandler;\r\n                if (target === 'EventTarget' || target === 'Node') {\r\n                    // NOTE: generating multiple handlers per addEventListener invocation, should\r\n                    //       revisit and verify we can just use one (almost certainly)\r\n                    clickHandler = breadcrumbEventHandler('click');\r\n                    keypressHandler = keypressEventHandler();\r\n                    before = function (event) {\r\n                        // need to intercept every DOM event in `before` argument, in case that\r\n                        // same wrapped method is re-used for different events (e.g. mousemove THEN click)\r\n                        // see #724\r\n                        if (!event) {\r\n                            return;\r\n                        }\r\n                        var eventType;\r\n                        try {\r\n                            eventType = event.type;\r\n                        }\r\n                        catch (e) {\r\n                            // just accessing event properties can throw an exception in some rare circumstances\r\n                            // see: https://github.com/getsentry/raven-js/issues/838\r\n                            return;\r\n                        }\r\n                        if (eventType === 'click') {\r\n                            return clickHandler(event);\r\n                        }\r\n                        else if (eventType === 'keypress') {\r\n                            return keypressHandler(event);\r\n                        }\r\n                    };\r\n                }\r\n                return original.call(this, eventName, wrap(fn, {\r\n                    mechanism: {\r\n                        data: {\r\n                            function: 'addEventListener',\r\n                            handler: getFunctionName(fn),\r\n                            target: target,\r\n                        },\r\n                        handled: true,\r\n                        type: 'instrument',\r\n                    },\r\n                }, before), options);\r\n            };\r\n        });\r\n        object_4(proto, 'removeEventListener', function (original) {\r\n            return function (eventName, fn, options) {\r\n                var callback = fn;\r\n                try {\r\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\r\n                }\r\n                catch (e) {\r\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\r\n                }\r\n                return original.call(this, eventName, callback, options);\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Wrap timer functions and event targets to catch errors\r\n     * and provide better metadata.\r\n     */\r\n    TryCatch.prototype.setupOnce = function () {\r\n        this.ignoreOnError = this.ignoreOnError;\r\n        var global = misc_3();\r\n        object_4(global, 'setTimeout', this.wrapTimeFunction.bind(this));\r\n        object_4(global, 'setInterval', this.wrapTimeFunction.bind(this));\r\n        object_4(global, 'requestAnimationFrame', this.wrapRAF.bind(this));\r\n        [\r\n            'EventTarget',\r\n            'Window',\r\n            'Node',\r\n            'ApplicationCache',\r\n            'AudioTrackList',\r\n            'ChannelMergerNode',\r\n            'CryptoOperation',\r\n            'EventSource',\r\n            'FileReader',\r\n            'HTMLUnknownElement',\r\n            'IDBDatabase',\r\n            'IDBRequest',\r\n            'IDBTransaction',\r\n            'KeyOperation',\r\n            'MediaController',\r\n            'MessagePort',\r\n            'ModalWindow',\r\n            'Notification',\r\n            'SVGElementInstance',\r\n            'Screen',\r\n            'TextTrack',\r\n            'TextTrackCue',\r\n            'TextTrackList',\r\n            'WebSocket',\r\n            'WebSocketWorker',\r\n            'Worker',\r\n            'XMLHttpRequest',\r\n            'XMLHttpRequestEventTarget',\r\n            'XMLHttpRequestUpload',\r\n        ].forEach(this.wrapEventTarget.bind(this));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TryCatch.id = 'TryCatch';\r\n    return TryCatch;\r\n}());\r\n/**\r\n * Safely extract function name from itself\r\n */\r\nfunction getFunctionName(fn) {\r\n    try {\r\n        return (fn && fn.name) || '<anonymous>';\r\n    }\r\n    catch (e) {\r\n        // Just accessing custom props in some Selenium environments\r\n        // can cause a \"Permission denied\" exception (see raven-js#495).\r\n        return '<anonymous>';\r\n    }\r\n}\n\nvar global$3 = misc_3();\r\nvar lastHref;\r\n/** Default Breadcrumbs instrumentations */\r\nvar Breadcrumbs = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function Breadcrumbs(options) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = Breadcrumbs.id;\r\n        this.options = tslib_1.__assign({ beacon: true, console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\r\n    }\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentBeacon = function () {\r\n        if (!supports_6()) {\r\n            return;\r\n        }\r\n        /** JSDoc */\r\n        function beaconReplacementFunction(originalBeaconFunction) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var url = args[0];\r\n                var data = args[1];\r\n                // If the browser successfully queues the request for delivery, the method returns \"true\" and returns \"false\" otherwise.\r\n                // https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API/Using_the_Beacon_API\r\n                var result = originalBeaconFunction.apply(this, args);\r\n                var client = core.getCurrentHub().getClient();\r\n                var dsn = client && client.getDsn();\r\n                if (dsn) {\r\n                    var filterUrl = new core.API(dsn).getStoreEndpoint();\r\n                    // if Sentry key appears in URL, don't capture it as a request\r\n                    // but rather as our own 'sentry' type breadcrumb\r\n                    if (filterUrl && string_4(url, filterUrl)) {\r\n                        addSentryBreadcrumb(data);\r\n                        return result;\r\n                    }\r\n                }\r\n                // What is wrong with you TypeScript...\r\n                var breadcrumbData = {\r\n                    category: 'beacon',\r\n                    data: data,\r\n                    type: 'http',\r\n                };\r\n                if (!result) {\r\n                    breadcrumbData.level = dist_1.Error;\r\n                }\r\n                Breadcrumbs.addBreadcrumb(breadcrumbData, {\r\n                    input: args,\r\n                    result: result,\r\n                });\r\n                return result;\r\n            };\r\n        }\r\n        object_4(global$3.navigator, 'sendBeacon', beaconReplacementFunction);\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentConsole = function () {\r\n        if (!('console' in global$3)) {\r\n            return;\r\n        }\r\n        ['debug', 'info', 'warn', 'error', 'log'].forEach(function (level) {\r\n            if (!(level in global$3.console)) {\r\n                return;\r\n            }\r\n            object_4(global$3.console, level, function (originalConsoleLevel) {\r\n                return function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    var breadcrumbData = {\r\n                        category: 'console',\r\n                        data: {\r\n                            extra: {\r\n                                arguments: object_6(args, 2),\r\n                            },\r\n                            logger: 'console',\r\n                        },\r\n                        level: dist_1.fromString(level),\r\n                        message: string_3(args, ' '),\r\n                    };\r\n                    if (level === 'assert') {\r\n                        if (args[0] === false) {\r\n                            breadcrumbData.message = \"Assertion failed: \" + (string_3(args.slice(1), ' ') || 'console.assert');\r\n                            breadcrumbData.data.extra.arguments = object_6(args.slice(1), 2);\r\n                        }\r\n                    }\r\n                    Breadcrumbs.addBreadcrumb(breadcrumbData, {\r\n                        input: args,\r\n                        level: level,\r\n                    });\r\n                    // this fails for some browsers. :(\r\n                    if (originalConsoleLevel) {\r\n                        Function.prototype.apply.call(originalConsoleLevel, global$3.console, args);\r\n                    }\r\n                };\r\n            });\r\n        });\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentDOM = function () {\r\n        if (!('document' in global$3)) {\r\n            return;\r\n        }\r\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\r\n        // to the document. Do this before we instrument addEventListener.\r\n        global$3.document.addEventListener('click', breadcrumbEventHandler('click'), false);\r\n        global$3.document.addEventListener('keypress', keypressEventHandler(), false);\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentFetch = function () {\r\n        if (!supports_5()) {\r\n            return;\r\n        }\r\n        object_4(global$3, 'fetch', function (originalFetch) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var fetchInput = args[0];\r\n                var method = 'GET';\r\n                var url;\r\n                if (typeof fetchInput === 'string') {\r\n                    url = fetchInput;\r\n                }\r\n                else if ('Request' in global$3 && fetchInput instanceof Request) {\r\n                    url = fetchInput.url;\r\n                    if (fetchInput.method) {\r\n                        method = fetchInput.method;\r\n                    }\r\n                }\r\n                else {\r\n                    url = String(fetchInput);\r\n                }\r\n                if (args[1] && args[1].method) {\r\n                    method = args[1].method;\r\n                }\r\n                var client = core.getCurrentHub().getClient();\r\n                var dsn = client && client.getDsn();\r\n                if (dsn) {\r\n                    var filterUrl = new core.API(dsn).getStoreEndpoint();\r\n                    // if Sentry key appears in URL, don't capture it as a request\r\n                    // but rather as our own 'sentry' type breadcrumb\r\n                    if (filterUrl && string_4(url, filterUrl)) {\r\n                        if (method === 'POST' && args[1] && args[1].body) {\r\n                            addSentryBreadcrumb(args[1].body);\r\n                        }\r\n                        return originalFetch.apply(global$3, args);\r\n                    }\r\n                }\r\n                var fetchData = {\r\n                    method: method,\r\n                    url: url,\r\n                };\r\n                return originalFetch\r\n                    .apply(global$3, args)\r\n                    .then(function (response) {\r\n                    fetchData.status_code = response.status;\r\n                    Breadcrumbs.addBreadcrumb({\r\n                        category: 'fetch',\r\n                        data: fetchData,\r\n                        type: 'http',\r\n                    }, {\r\n                        input: args,\r\n                        response: response,\r\n                    });\r\n                    return response;\r\n                })\r\n                    .catch(function (error) {\r\n                    Breadcrumbs.addBreadcrumb({\r\n                        category: 'fetch',\r\n                        data: fetchData,\r\n                        level: dist_1.Error,\r\n                        type: 'http',\r\n                    }, {\r\n                        error: error,\r\n                        input: args,\r\n                    });\r\n                    throw error;\r\n                });\r\n            };\r\n        });\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentHistory = function () {\r\n        var _this = this;\r\n        if (!supports_9()) {\r\n            return;\r\n        }\r\n        var captureUrlChange = function (from, to) {\r\n            var parsedLoc = misc_7(global$3.location.href);\r\n            var parsedTo = misc_7(to);\r\n            var parsedFrom = misc_7(from);\r\n            // Initial pushState doesn't provide `from` information\r\n            if (!parsedFrom.path) {\r\n                parsedFrom = parsedLoc;\r\n            }\r\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\r\n            // not the previous (from) value, we need to track the value of the current URL\r\n            // state ourselves\r\n            lastHref = to;\r\n            // Use only the path component of the URL if the URL matches the current\r\n            // document (almost all the time when using pushState)\r\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\r\n                // tslint:disable-next-line:no-parameter-reassignment\r\n                to = parsedTo.relative;\r\n            }\r\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\r\n                // tslint:disable-next-line:no-parameter-reassignment\r\n                from = parsedFrom.relative;\r\n            }\r\n            Breadcrumbs.addBreadcrumb({\r\n                category: 'navigation',\r\n                data: {\r\n                    from: from,\r\n                    to: to,\r\n                },\r\n            });\r\n        };\r\n        // record navigation (URL) changes\r\n        var oldOnPopState = global$3.onpopstate;\r\n        global$3.onpopstate = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var currentHref = global$3.location.href;\r\n            captureUrlChange(lastHref, currentHref);\r\n            if (oldOnPopState) {\r\n                return oldOnPopState.apply(_this, args);\r\n            }\r\n        };\r\n        /** JSDoc */\r\n        function historyReplacementFunction(originalHistoryFunction) {\r\n            // note history.pushState.length is 0; intentionally not declaring\r\n            // params to preserve 0 arity\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var url = args.length > 2 ? args[2] : undefined;\r\n                // url argument is optional\r\n                if (url) {\r\n                    // coerce to string (this is what pushState does)\r\n                    captureUrlChange(lastHref, String(url));\r\n                }\r\n                return originalHistoryFunction.apply(this, args);\r\n            };\r\n        }\r\n        object_4(global$3.history, 'pushState', historyReplacementFunction);\r\n        object_4(global$3.history, 'replaceState', historyReplacementFunction);\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentXHR = function () {\r\n        if (!('XMLHttpRequest' in global$3)) {\r\n            return;\r\n        }\r\n        /** JSDoc */\r\n        function wrapProp(prop, xhr) {\r\n            // TODO: Fix XHR types\r\n            if (prop in xhr && is_6(xhr[prop])) {\r\n                object_4(xhr, prop, function (original) {\r\n                    return wrap(original, {\r\n                        mechanism: {\r\n                            data: {\r\n                                function: prop,\r\n                                handler: (original && original.name) || '<anonymous>',\r\n                            },\r\n                            handled: true,\r\n                            type: 'instrument',\r\n                        },\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        var xhrproto = XMLHttpRequest.prototype;\r\n        object_4(xhrproto, 'open', function (originalOpen) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var url = args[1];\r\n                this.__sentry_xhr__ = {\r\n                    method: args[0],\r\n                    url: args[1],\r\n                };\r\n                var client = core.getCurrentHub().getClient();\r\n                var dsn = client && client.getDsn();\r\n                if (dsn) {\r\n                    var filterUrl = new core.API(dsn).getStoreEndpoint();\r\n                    // if Sentry key appears in URL, don't capture it as a request\r\n                    // but rather as our own 'sentry' type breadcrumb\r\n                    if (is_7(url) && (filterUrl && string_4(url, filterUrl))) {\r\n                        this.__sentry_own_request__ = true;\r\n                    }\r\n                }\r\n                return originalOpen.apply(this, args);\r\n            };\r\n        });\r\n        object_4(xhrproto, 'send', function (originalSend) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var xhr = this; // tslint:disable-line:no-this-assignment\r\n                if (xhr.__sentry_own_request__) {\r\n                    addSentryBreadcrumb(args[0]);\r\n                }\r\n                /** JSDoc */\r\n                function onreadystatechangeHandler() {\r\n                    if (xhr.readyState === 4) {\r\n                        if (xhr.__sentry_own_request__) {\r\n                            return;\r\n                        }\r\n                        try {\r\n                            // touching statusCode in some platforms throws\r\n                            // an exception\r\n                            if (xhr.__sentry_xhr__) {\r\n                                xhr.__sentry_xhr__.status_code = xhr.status;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            /* do nothing */\r\n                        }\r\n                        Breadcrumbs.addBreadcrumb({\r\n                            category: 'xhr',\r\n                            data: xhr.__sentry_xhr__,\r\n                            type: 'http',\r\n                        }, {\r\n                            xhr: xhr,\r\n                        });\r\n                    }\r\n                }\r\n                ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\r\n                    wrapProp(prop, xhr);\r\n                });\r\n                if ('onreadystatechange' in xhr && is_6(xhr.onreadystatechange)) {\r\n                    object_4(xhr, 'onreadystatechange', function (original) {\r\n                        return wrap(original, {\r\n                            mechanism: {\r\n                                data: {\r\n                                    function: 'onreadystatechange',\r\n                                    handler: (original && original.name) || '<anonymous>',\r\n                                },\r\n                                handled: true,\r\n                                type: 'instrument',\r\n                            },\r\n                        }, onreadystatechangeHandler);\r\n                    });\r\n                }\r\n                else {\r\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\r\n                    // are free to set our own and capture the breadcrumb\r\n                    xhr.onreadystatechange = onreadystatechangeHandler;\r\n                }\r\n                return originalSend.apply(this, args);\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Helper that checks if integration is enabled on the client.\r\n     * @param breadcrumb Breadcrumb\r\n     * @param hint SentryBreadcrumbHint\r\n     */\r\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\r\n        if (core.getCurrentHub().getIntegration(Breadcrumbs)) {\r\n            core.getCurrentHub().addBreadcrumb(breadcrumb, hint);\r\n        }\r\n    };\r\n    /**\r\n     * Instrument browser built-ins w/ breadcrumb capturing\r\n     *  - Console API\r\n     *  - DOM API (click/typing)\r\n     *  - XMLHttpRequest API\r\n     *  - Fetch API\r\n     *  - History API\r\n     */\r\n    Breadcrumbs.prototype.setupOnce = function () {\r\n        if (this.options.console) {\r\n            this.instrumentConsole();\r\n        }\r\n        if (this.options.dom) {\r\n            this.instrumentDOM();\r\n        }\r\n        if (this.options.xhr) {\r\n            this.instrumentXHR();\r\n        }\r\n        if (this.options.fetch) {\r\n            this.instrumentFetch();\r\n        }\r\n        if (this.options.beacon) {\r\n            this.instrumentBeacon();\r\n        }\r\n        if (this.options.history) {\r\n            this.instrumentHistory();\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Breadcrumbs.id = 'Breadcrumbs';\r\n    return Breadcrumbs;\r\n}());\r\n/** JSDoc */\r\nfunction addSentryBreadcrumb(serializedData) {\r\n    // There's always something that can go wrong with deserialization...\r\n    try {\r\n        var event_1 = object_2(serializedData);\r\n        Breadcrumbs.addBreadcrumb({\r\n            category: 'sentry',\r\n            event_id: event_1.event_id,\r\n            level: event_1.level || dist_1.fromString('error'),\r\n            message: misc_8(event_1),\r\n        }, {\r\n            event: event_1,\r\n        });\r\n    }\r\n    catch (_oO) {\r\n        logger_2.error('Error while adding sentry type breadcrumb');\r\n    }\r\n}\n\nvar DEFAULT_KEY = 'cause';\r\nvar DEFAULT_LIMIT = 5;\r\n/** Adds SDK info to an event. */\r\nvar LinkedErrors = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function LinkedErrors(options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = LinkedErrors.id;\r\n        this.key = options.key || DEFAULT_KEY;\r\n        this.limit = options.limit || DEFAULT_LIMIT;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        core.addGlobalEventProcessor(function (event, hint) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var self;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                self = core.getCurrentHub().getIntegration(LinkedErrors);\r\n                if (self) {\r\n                    return [2 /*return*/, self.handler(event, hint)];\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.prototype.handler = function (event, hint) {\r\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\r\n            return event;\r\n        }\r\n        var linkedErrors = this.walkErrorTree(hint.originalException, this.key);\r\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\r\n        return event;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.prototype.walkErrorTree = function (error, key, stack) {\r\n        if (stack === void 0) { stack = []; }\r\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this.limit) {\r\n            return stack;\r\n        }\r\n        var stacktrace = computeStackTrace(error[key]);\r\n        var exception = exceptionFromStacktrace(stacktrace);\r\n        return this.walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.id = 'LinkedErrors';\r\n    return LinkedErrors;\r\n}());\n\nvar global$4 = misc_3();\r\n/** UserAgent */\r\nvar UserAgent = /** @class */ (function () {\r\n    function UserAgent() {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = UserAgent.id;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UserAgent.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        core.addGlobalEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var request;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (core.getCurrentHub().getIntegration(UserAgent)) {\r\n                    if (!global$4.navigator || !global$4.location) {\r\n                        return [2 /*return*/, event];\r\n                    }\r\n                    request = event.request || {};\r\n                    request.url = request.url || global$4.location.href;\r\n                    request.headers = request.headers || {};\r\n                    request.headers['User-Agent'] = global$4.navigator.userAgent;\r\n                    return [2 /*return*/, tslib_1.__assign({}, event, { request: request })];\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UserAgent.id = 'UserAgent';\r\n    return UserAgent;\r\n}());\n\n/** JSDoc */\r\nvar Ember = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function Ember(options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = Ember.id;\r\n        this.Ember =\r\n            options.Ember ||\r\n                misc_3().Ember;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Ember.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        if (!this.Ember) {\r\n            return;\r\n        }\r\n        var oldOnError = this.Ember.onerror;\r\n        this.Ember.onerror = function (error) {\r\n            if (core.getCurrentHub().getIntegration(Ember)) {\r\n                core.withScope(function (scope) {\r\n                    _this.addIntegrationToSdkInfo(scope);\r\n                    core.captureException(error);\r\n                });\r\n            }\r\n            if (typeof oldOnError === 'function') {\r\n                oldOnError.call(_this.Ember, error);\r\n            }\r\n            else if (_this.Ember.testing) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.Ember.RSVP.on('error', function (reason) {\r\n            if (core.getCurrentHub().getIntegration(Ember)) {\r\n                core.withScope(function (scope) {\r\n                    if (reason instanceof Error) {\r\n                        scope.setExtra('context', 'Unhandled Promise error detected');\r\n                        _this.addIntegrationToSdkInfo(scope);\r\n                        core.captureException(reason);\r\n                    }\r\n                    else {\r\n                        scope.setExtra('reason', reason);\r\n                        _this.addIntegrationToSdkInfo(scope);\r\n                        core.captureMessage('Unhandled Promise error detected');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Appends SDK integrations\r\n     * @param scope The scope currently used.\r\n     */\r\n    Ember.prototype.addIntegrationToSdkInfo = function (scope) {\r\n        var _this = this;\r\n        scope.addEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var integrations;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (event.sdk) {\r\n                    integrations = event.sdk.integrations || [];\r\n                    event.sdk = tslib_1.__assign({}, event.sdk, { integrations: tslib_1.__spread(integrations, ['ember']) });\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Ember.id = 'Ember';\r\n    return Ember;\r\n}());\n\n/** JSDoc */\r\nvar Vue = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function Vue(options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = Vue.id;\r\n        this.Vue =\r\n            options.Vue ||\r\n                misc_3().Vue;\r\n    }\r\n    /** JSDoc */\r\n    Vue.prototype.formatComponentName = function (vm) {\r\n        if (vm.$root === vm) {\r\n            return 'root instance';\r\n        }\r\n        var name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\r\n        return ((name ? \"component <\" + name + \">\" : 'anonymous component') +\r\n            (vm._isVue && vm.$options.__file ? \" at \" + vm.$options.__file : ''));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Vue.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        if (!this.Vue || !this.Vue.config) {\r\n            return;\r\n        }\r\n        var oldOnError = this.Vue.config.errorHandler;\r\n        this.Vue.config.errorHandler = function (error, vm, info) {\r\n            var metadata = {};\r\n            if (is_10(vm)) {\r\n                metadata.componentName = _this.formatComponentName(vm);\r\n                metadata.propsData = vm.$options.propsData;\r\n            }\r\n            if (!is_5(info)) {\r\n                metadata.lifecycleHook = info;\r\n            }\r\n            if (core.getCurrentHub().getIntegration(Vue)) {\r\n                core.withScope(function (scope) {\r\n                    Object.keys(metadata).forEach(function (key) {\r\n                        scope.setExtra(key, metadata[key]);\r\n                    });\r\n                    scope.addEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                        var integrations;\r\n                        return tslib_1.__generator(this, function (_a) {\r\n                            if (event.sdk) {\r\n                                integrations = event.sdk.integrations || [];\r\n                                event.sdk = tslib_1.__assign({}, event.sdk, { integrations: tslib_1.__spread(integrations, ['vue']) });\r\n                            }\r\n                            return [2 /*return*/, event];\r\n                        });\r\n                    }); });\r\n                    core.captureException(error);\r\n                });\r\n            }\r\n            if (typeof oldOnError === 'function') {\r\n                oldOnError.call(_this.Vue, error, vm, info);\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Vue.id = 'Vue';\r\n    return Vue;\r\n}());\n\n/** JSDoc */\r\nvar ReportTypes;\r\n(function (ReportTypes) {\r\n    /** JSDoc */\r\n    ReportTypes[\"Crash\"] = \"crash\";\r\n    /** JSDoc */\r\n    ReportTypes[\"Deprecation\"] = \"deprecation\";\r\n    /** JSDoc */\r\n    ReportTypes[\"Intervention\"] = \"intervention\";\r\n})(ReportTypes || (ReportTypes = {}));\r\n/** Reporting API integration - https://w3c.github.io/reporting/ */\r\nvar ReportingObserver = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function ReportingObserver(options) {\r\n        if (options === void 0) { options = {\r\n            types: [ReportTypes.Crash, ReportTypes.Deprecation, ReportTypes.Intervention],\r\n        }; }\r\n        this.options = options;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = ReportingObserver.id;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReportingObserver.prototype.setupOnce = function () {\r\n        if (!supports_7()) {\r\n            return;\r\n        }\r\n        var observer = new (misc_3().ReportingObserver)(this.handler.bind(this), {\r\n            buffered: true,\r\n            types: this.options.types,\r\n        });\r\n        observer.observe();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReportingObserver.prototype.handler = function (reports) {\r\n        var e_1, _a;\r\n        if (!core.getCurrentHub().getIntegration(ReportingObserver)) {\r\n            return;\r\n        }\r\n        var _loop_1 = function (report) {\r\n            core.withScope(function (scope) {\r\n                scope.setExtra('url', report.url);\r\n                var label = \"ReportingObserver [\" + report.type + \"]\";\r\n                var details = 'No details available';\r\n                if (report.body) {\r\n                    // Object.keys doesn't work on ReportBody, as all properties are inheirted\r\n                    var plainBody = {};\r\n                    // tslint:disable-next-line:forin\r\n                    for (var prop in report.body) {\r\n                        plainBody[prop] = report.body[prop];\r\n                    }\r\n                    scope.setExtra('body', plainBody);\r\n                    if (report.type === ReportTypes.Crash) {\r\n                        var body = report.body;\r\n                        // A fancy way to create a message out of crashId OR reason OR both OR fallback\r\n                        details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\r\n                    }\r\n                    else {\r\n                        var body = report.body;\r\n                        details = body.message || details;\r\n                    }\r\n                }\r\n                core.captureMessage(label + \": \" + details);\r\n            });\r\n        };\r\n        try {\r\n            for (var reports_1 = tslib_1.__values(reports), reports_1_1 = reports_1.next(); !reports_1_1.done; reports_1_1 = reports_1.next()) {\r\n                var report = reports_1_1.value;\r\n                _loop_1(report);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (reports_1_1 && !reports_1_1.done && (_a = reports_1.return)) _a.call(reports_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReportingObserver.id = 'ReportingObserver';\r\n    return ReportingObserver;\r\n}());\n\n\n\nvar BrowserIntegrations = /*#__PURE__*/Object.freeze({\n\tGlobalHandlers: GlobalHandlers,\n\tTryCatch: TryCatch,\n\tBreadcrumbs: Breadcrumbs,\n\tLinkedErrors: LinkedErrors,\n\tUserAgent: UserAgent,\n\tEmber: Ember,\n\tVue: Vue,\n\tReportingObserver: ReportingObserver\n});\n\nvar defaultIntegrations = [\r\n    // Common\r\n    new core.Integrations.Dedupe(),\r\n    new core.Integrations.InboundFilters(),\r\n    new core.Integrations.FunctionToString(),\r\n    new core.Integrations.ExtraErrorData(),\r\n    // Native Wrappers\r\n    new TryCatch(),\r\n    new Breadcrumbs(),\r\n    // Global Handlers\r\n    new GlobalHandlers(),\r\n    // Misc\r\n    new LinkedErrors(),\r\n    new UserAgent(),\r\n];\r\n/**\r\n * The Sentry Browser SDK Client.\r\n *\r\n * To use this SDK, call the {@link init} function as early as possible when\r\n * loading the web page. To set context information or send manual events, use\r\n * the provided methods.\r\n *\r\n * @example\r\n * import { init } from '@sentry/browser';\r\n *\r\n * init({\r\n *   dsn: '__DSN__',\r\n *   // ...\r\n * });\r\n *\r\n * @example\r\n * import { configureScope } from '@sentry/browser';\r\n * configureScope((scope: Scope) => {\r\n *   scope.setExtra({ battery: 0.7 });\r\n *   scope.setTag({ user_mode: 'admin' });\r\n *   scope.setUser({ id: '4711' });\r\n * });\r\n *\r\n * @example\r\n * import { addBreadcrumb } from '@sentry/browser';\r\n * addBreadcrumb({\r\n *   message: 'My Breadcrumb',\r\n *   // ...\r\n * });\r\n *\r\n * @example\r\n * import * as Sentry from '@sentry/browser';\r\n * Sentry.captureMessage('Hello, world!');\r\n * Sentry.captureException(new Error('Good bye'));\r\n * Sentry.captureEvent({\r\n *   message: 'Manual',\r\n *   stacktrace: [\r\n *     // ...\r\n *   ],\r\n * });\r\n *\r\n * @see BrowserOptions for documentation on configuration options.\r\n */\r\nfunction init(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (options.defaultIntegrations === undefined) {\r\n        options.defaultIntegrations = defaultIntegrations;\r\n    }\r\n    core.initAndBind(BrowserClient, options);\r\n}\r\n/**\r\n * Present the user with a report dialog.\r\n *\r\n * @param options Everything is optional, we try to fetch all info need from the global scope.\r\n */\r\nfunction showReportDialog(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!options.eventId) {\r\n        options.eventId = core.getCurrentHub().lastEventId();\r\n    }\r\n    core.getCurrentHub().getClient().showReportDialog(options);\r\n}\r\n/**\r\n * This is the getter for lastEventId.\r\n *\r\n * @returns The last event id of a captured event.\r\n */\r\nfunction lastEventId() {\r\n    return core.getCurrentHub().lastEventId();\r\n}\r\n/**\r\n * This function is here to be API compatible with the loader\r\n */\r\nfunction forceLoad() {\r\n    // Noop\r\n}\r\n/**\r\n * This function is here to be API compatible with the loader\r\n */\r\nfunction onLoad(callback) {\r\n    callback();\r\n}\n\nvar INTEGRATIONS = tslib_1.__assign({}, core.Integrations, BrowserIntegrations);\n\nexports.addGlobalEventProcessor = core.addGlobalEventProcessor;\nexports.addBreadcrumb = core.addBreadcrumb;\nexports.captureException = core.captureException;\nexports.captureEvent = core.captureEvent;\nexports.captureMessage = core.captureMessage;\nexports.configureScope = core.configureScope;\nexports.withScope = core.withScope;\nexports.getHubFromCarrier = core.getHubFromCarrier;\nexports.getCurrentHub = core.getCurrentHub;\nexports.Hub = core.Hub;\nexports.Scope = core.Scope;\nexports.Integrations = INTEGRATIONS;\nexports.Transports = index$1;\nexports.Severity = dist_1;\nexports.Status = dist_2;\nexports.BrowserBackend = BrowserBackend;\nexports.BrowserClient = BrowserClient;\nexports.defaultIntegrations = defaultIntegrations;\nexports.forceLoad = forceLoad;\nexports.init = init;\nexports.lastEventId = lastEventId;\nexports.onLoad = onLoad;\nexports.showReportDialog = showReportDialog;\nexports.SDK_NAME = SDK_NAME;\nexports.SDK_VERSION = SDK_VERSION;\n//# sourceMappingURL=index.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\"), __webpack_require__(\"W2nU\")))\n\n/***/ }),\n\n/***/ \"sVPH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\nexports.isError = isError;\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\nexports.isErrorEvent = isErrorEvent;\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\nexports.isDOMError = isDOMError;\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\nexports.isDOMException = isDOMException;\n/**\n * Checks whether given value's type is an undefined\n * {@link isUndefined}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isUndefined(wat) {\n    return wat === void 0;\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks whether given value's type is a function\n * {@link isFunction}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isFunction(wat) {\n    return typeof wat === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\nexports.isPrimitive = isPrimitive;\n/**\n * Checks whether given value's type is an array\n * {@link isArray}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isArray(wat) {\n    return Object.prototype.toString.call(wat) === '[object Array]';\n}\nexports.isArray = isArray;\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n/**\n * Checks whether given value's type is a NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n    return wat !== wat;\n}\nexports.isNaN = isNaN;\n//# sourceMappingURL=is.js.map\n\n/***/ }),\n\n/***/ \"ucAQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\n/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\nfunction forget(promise) {\n    promise.catch(function (e) {\n        // TODO: Use a better logging mechanism\n        console.error(e);\n    });\n}\nexports.forget = forget;\n/**\n * Helper to filter an array with asynchronous callbacks.\n *\n * @param array An array containing items to filter.\n * @param predicate An async predicate evaluated on every item.\n * @param thisArg Optional value passed as \"this\" into the callback.\n * @returns An array containing only values where the callback returned true.\n */\nfunction filterAsync(array, predicate, thisArg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var verdicts;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, Promise.all(array.map(predicate, thisArg))];\n                case 1:\n                    verdicts = _a.sent();\n                    return [2 /*return*/, array.filter(function (_, index) { return verdicts[index]; })];\n            }\n        });\n    });\n}\nexports.filterAsync = filterAsync;\n//# sourceMappingURL=async.js.map\n\n/***/ }),\n\n/***/ \"yCKG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar object_1 = __webpack_require__(\"T/9k\");\nvar dsn_1 = __webpack_require__(\"MzuG\");\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this.dsnObject = new dsn_1.Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this.dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this.getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this.dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + object_1.urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype.getBaseUrl = function () {\n        var dsn = this.dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this.dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this.dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this.dsnObject;\n        var endpoint = \"\" + this.getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexports.API = API;\n//# sourceMappingURL=api.js.map\n\n/***/ }),\n\n/***/ \"yZla\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(\"TToO\");\nvar misc_1 = __webpack_require__(\"dDlv\");\nvar object_1 = __webpack_require__(\"T/9k\");\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this.notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this.scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this.eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this.breadcrumbs = [];\n        /** User */\n        this.user = {};\n        /** Tags */\n        this.tags = {};\n        /** Extra */\n        this.extra = {};\n    }\n    /** Add internal on change listener. */\n    Scope.prototype.addScopeListener = function (callback) {\n        this.scopeListeners.push(callback);\n    };\n    /** Add new event processor that will be called after {@link applyToEvent}. */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this.eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype.notifyScopeListeners = function () {\n        var _this = this;\n        if (!this.notifyingListeners) {\n            this.notifyingListeners = true;\n            setTimeout(function () {\n                _this.scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this.notifyingListeners = false;\n            }, 0);\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype.notifyEventProcessors = function (event, hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1, _a, processedEvent, _b, _c, processor, e_2, e_1_1;\n            return tslib_1.__generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        processedEvent = event;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 8, 9, 10]);\n                        _b = tslib_1.__values(tslib_1.__spread(getGlobalEventProcessors(), this.eventProcessors)), _c = _b.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_c.done) return [3 /*break*/, 7];\n                        processor = _c.value;\n                        _d.label = 3;\n                    case 3:\n                        _d.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, processor(tslib_1.__assign({}, processedEvent), hint)];\n                    case 4:\n                        processedEvent = _d.sent();\n                        if (processedEvent === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [3 /*break*/, 6];\n                    case 5:\n                        e_2 = _d.sent();\n                        return [3 /*break*/, 6];\n                    case 6:\n                        _c = _b.next();\n                        return [3 /*break*/, 2];\n                    case 7: return [3 /*break*/, 10];\n                    case 8:\n                        e_1_1 = _d.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 10];\n                    case 9:\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/, processedEvent];\n                }\n            });\n        });\n    };\n    /**\n     * Updates user context information for future events.\n     * @param user User context object to merge into current context.\n     */\n    Scope.prototype.setUser = function (user) {\n        this.user = object_1.safeNormalize(user);\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Updates tags context information for future events.\n     * @param tags Tags context object to merge into current context.\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this.tags = tslib_1.__assign({}, this.tags, (_a = {}, _a[key] = object_1.safeNormalize(value), _a));\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Updates extra context information for future events.\n     * @param extra context object to merge into current context.\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this.extra = tslib_1.__assign({}, this.extra, (_a = {}, _a[key] = object_1.safeNormalize(extra), _a));\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Sets the fingerprint on the scope to send with the events.\n     * @param fingerprint string[] to group events in Sentry.\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this.fingerprint = object_1.safeNormalize(fingerprint);\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Sets the level on the scope for future events.\n     * @param level string {@link Severity}\n     */\n    Scope.prototype.setLevel = function (level) {\n        this.level = object_1.safeNormalize(level);\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        object_1.assign(newScope, scope, {\n            scopeListeners: [],\n        });\n        if (scope) {\n            newScope.extra = object_1.assign(scope.extra);\n            newScope.tags = object_1.assign(scope.tags);\n            newScope.breadcrumbs = tslib_1.__spread(scope.breadcrumbs);\n            newScope.eventProcessors = tslib_1.__spread(scope.eventProcessors);\n        }\n        return newScope;\n    };\n    /** Clears the current scope and resets its properties. */\n    Scope.prototype.clear = function () {\n        this.breadcrumbs = [];\n        this.tags = {};\n        this.extra = {};\n        this.user = {};\n        this.level = undefined;\n        this.fingerprint = undefined;\n        this.notifyScopeListeners();\n    };\n    /**\n     * Sets the breadcrumbs in the scope\n     * @param breadcrumbs Breadcrumb\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        this.breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this.breadcrumbs, [object_1.safeNormalize(breadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this.breadcrumbs, [object_1.safeNormalize(breadcrumb)]);\n        this.notifyScopeListeners();\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype.applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this.fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this.fingerprint);\n        }\n        else if (event.message) {\n            // If not, but we have message, use it instead\n            event.fingerprint = event.fingerprint.concat(event.message);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event SentryEvent\n     * @param hint May contain additional informartion about the original exception.\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     */\n    Scope.prototype.applyToEvent = function (event, hint, maxBreadcrumbs) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var hasNoBreadcrumbs;\n            return tslib_1.__generator(this, function (_a) {\n                if (this.extra && Object.keys(this.extra).length) {\n                    event.extra = tslib_1.__assign({}, this.extra, event.extra);\n                }\n                if (this.tags && Object.keys(this.tags).length) {\n                    event.tags = tslib_1.__assign({}, this.tags, event.tags);\n                }\n                if (this.user && Object.keys(this.user).length) {\n                    event.user = tslib_1.__assign({}, this.user, event.user);\n                }\n                if (this.level) {\n                    event.level = this.level;\n                }\n                this.applyFingerprint(event);\n                hasNoBreadcrumbs = !event.breadcrumbs || event.breadcrumbs.length === 0;\n                if (hasNoBreadcrumbs && this.breadcrumbs.length > 0) {\n                    event.breadcrumbs =\n                        maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                            ? this.breadcrumbs.slice(-maxBreadcrumbs)\n                            : this.breadcrumbs;\n                }\n                return [2 /*return*/, this.notifyEventProcessors(event, hint)];\n            });\n        });\n    };\n    return Scope;\n}());\nexports.Scope = Scope;\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = misc_1.getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\nexports.addGlobalEventProcessor = addGlobalEventProcessor;\n//# sourceMappingURL=scope.js.map\n\n/***/ }),\n\n/***/ \"zGPE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = __webpack_require__(\"sVPH\");\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    if (max === 0 || !is_1.isString(str)) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\nexports.truncate = truncate;\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\nexports.snipLine = snipLine;\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\nexports.safeJoin = safeJoin;\n/**\n * Checks if given value is included in the target\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill\n * @param target source string\n * @param search string to be looked for\n * @returns An answer\n */\nfunction includes(target, search) {\n    if (search.length > target.length) {\n        return false;\n    }\n    else {\n        return target.indexOf(search) !== -1;\n    }\n}\nexports.includes = includes;\n//# sourceMappingURL=string.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.d60c8ab86caf9f8a6a39.js","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = require(\"@sentry/utils/logger\");\n/**\n * @deprecated\n * This file can be safely removed in the next major bump\n */\n/** Adds SDK info to an event. */\nvar SDKInformation = /** @class */ (function () {\n    function SDKInformation() {\n        /**\n         * @inheritDoc\n         */\n        this.name = 'SDKInformation';\n    }\n    /**\n     * @inheritDoc\n     */\n    SDKInformation.prototype.setupOnce = function () {\n        logger_1.logger.warn(\"SDKInformation Integration is deprecated and can be safely removed. It's functionality has been merged into the SDK's core.\");\n    };\n    return SDKInformation;\n}());\nexports.SDKInformation = SDKInformation;\n//# sourceMappingURL=sdkinformation.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/sdkinformation.js\n// module id = 2e32\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = hub_1.getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nfunction captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\nexports.captureException = captureException;\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\nexports.captureMessage = captureMessage;\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\nexports.captureEvent = captureEvent;\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\nexports.addBreadcrumb = addBreadcrumb;\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\nexports.configureScope = configureScope;\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n    callOnHub('withScope', callback);\n}\nexports.withScope = withScope;\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nfunction _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['invokeClient', method], args));\n}\nexports._callOnClient = _callOnClient;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/minimal/dist/index.js\n// module id = 33Io\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 3IRH\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar logger_1 = require(\"@sentry/utils/logger\");\nvar misc_1 = require(\"@sentry/utils/misc\");\nvar scope_1 = require(\"./scope\");\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n */\nexports.API_VERSION = 3;\n/**\n * Internal class used to make sure we always have the latest internal functions\n * working in case we have a version conflict.\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, version) {\n        if (scope === void 0) { scope = new scope_1.Scope(); }\n        if (version === void 0) { version = exports.API_VERSION; }\n        this.version = version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this.stack = [];\n        this.stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client/client.\n     * @param args Arguments to pass to the client/frontend.\n     */\n    Hub.prototype.invokeClient = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * Internal helper function to call an async method on the top client if it\n     * exists.\n     *\n     * @param method The method to call on the client/client.\n     * @param args Arguments to pass to the client/frontend.\n     */\n    Hub.prototype.invokeClientAsync = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope])).catch(function (err) {\n                logger_1.logger.error(err);\n            });\n        }\n    };\n    /**\n     * Checks if this hub's version is older than the given version.\n     *\n     * @param version A version number to compare to.\n     * @return True if the given version is newer; otherwise false.\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this.version < version;\n    };\n    /**\n     * This binds the given client to the current scope.\n     * @param client An SDK client (client) instance.\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (top && top.scope && client) {\n            top.scope.addScopeListener(function (s) {\n                if (client.getBackend) {\n                    try {\n                        client.getBackend().storeScope(s);\n                    }\n                    catch (_a) {\n                        // Do nothing\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * Create a new scope to store context information.\n     *\n     * The scope will be layered on top of the current one. It is isolated, i.e. all\n     * breadcrumbs and context information added to this scope will be removed once\n     * the scope ends. Be sure to always remove this scope with {@link this.popScope}\n     * when the operation finishes or throws.\n     *\n     * @returns Scope, the new cloned scope\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = scope_1.Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * Removes a previously pushed scope from the stack.\n     *\n     * This restores the state before the scope was pushed. All breadcrumbs and\n     * context information added since the last call to {@link this.pushScope} are\n     * discarded.\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * Creates a new scope with and executes the given operation within.\n     * The scope is automatically removed once the operation\n     * finishes or throws.\n     *\n     * This is essentially a convenience function for:\n     *\n     *     pushScope();\n     *     callback();\n     *     popScope();\n     *\n     * @param callback that will be enclosed into push/popScope.\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /** Returns the client of the top stack. */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this.stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this.stack[this.stack.length - 1];\n    };\n    /**\n     * Captures an exception event and sends it to Sentry.\n     *\n     * @param exception An exception-like object.\n     * @param hint May contain additional information about the original exception.\n     * @returns The generated eventId.\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = misc_1.uuid4());\n        this.invokeClientAsync('captureException', exception, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * Captures a message event and sends it to Sentry.\n     *\n     * @param message The message to send to Sentry.\n     * @param level Define the level of the message.\n     * @param hint May contain additional information about the original exception.\n     * @returns The generated eventId.\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = misc_1.uuid4());\n        this.invokeClientAsync('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * Captures a manually created event and sends it to Sentry.\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional information about the original exception.\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = misc_1.uuid4());\n        this.invokeClientAsync('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * This is the getter for lastEventId.\n     *\n     * @returns The last event id of a captured event.\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * Records a new breadcrumb which will be attached to future events.\n     *\n     * Breadcrumbs will be added to subsequent events to provide more context on\n     * user's actions prior to an error or crash.\n     *\n     * @param breadcrumb The breadcrumb to record.\n     * @param hint May contain additional information about the original breadcrumb.\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        this.invokeClient('addBreadcrumb', breadcrumb, tslib_1.__assign({}, hint));\n    };\n    /**\n     * Callback to set context information onto the scope.\n     *\n     * @param callback Callback function that receives Scope.\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            // TODO: freeze flag\n            callback(top.scope);\n        }\n    };\n    /**\n     * For the duraction of the callback, this hub will be set as the global current Hub.\n     * This function is useful if you want to run your own client and hook into an already initialized one\n     * e.g.: Reporting issues to your own sentry when running in your component while still using the users configuration.\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /** Returns the integration if installed on the current client. */\n    Hub.prototype.getIntegration = function (integration) {\n        try {\n            return this.getClient().getIntegration(integration);\n        }\n        catch (_oO) {\n            logger_1.logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    return Hub;\n}());\nexports.Hub = Hub;\n/** Returns the global shim registry. */\nfunction getMainCarrier() {\n    var carrier = misc_1.getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\nexports.getMainCarrier = getMainCarrier;\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\nexports.makeMain = makeMain;\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(exports.API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = misc_1.dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(exports.API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, scope_1.Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\nexports.getCurrentHub = getCurrentHub;\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.hasHubOnCarrier = hasHubOnCarrier;\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n */\nfunction getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    else {\n        carrier.__SENTRY__ = {};\n        carrier.__SENTRY__.hub = new Hub();\n        return carrier.__SENTRY__.hub;\n    }\n}\nexports.getHubFromCarrier = getHubFromCarrier;\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nfunction setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\nexports.setHubOnCarrier = setHubOnCarrier;\n//# sourceMappingURL=hub.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/hub/dist/hub.js\n// module id = A6ZE\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar is_1 = require(\"@sentry/utils/is\");\nvar logger_1 = require(\"../../../utils/logger\");\n/** Patch toString calls to return proper name for wrapped functions */\nvar ExtraErrorData = /** @class */ (function () {\n    function ExtraErrorData() {\n        /**\n         * @inheritDoc\n         */\n        this.name = ExtraErrorData.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    ExtraErrorData.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event, hint) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(ExtraErrorData);\n                if (!self) {\n                    return [2 /*return*/, event];\n                }\n                return [2 /*return*/, self.enhanceEventWithErrorData(event, hint)];\n            });\n        }); });\n    };\n    /**\n     * Attaches extracted information from the Error object to extra field in the SentryEvent\n     */\n    ExtraErrorData.prototype.enhanceEventWithErrorData = function (event, hint) {\n        if (!hint || !hint.originalException || !is_1.isError(hint.originalException)) {\n            return event;\n        }\n        var errorData = this.extractErrorData(hint.originalException);\n        if (errorData) {\n            return tslib_1.__assign({}, event, { extra: tslib_1.__assign({}, event.extra, errorData) });\n        }\n        return event;\n    };\n    /**\n     * Extract extra information from the Error object\n     */\n    ExtraErrorData.prototype.extractErrorData = function (error) {\n        var e_1, _a, _b;\n        // We are trying to enhance already existing event, so no harm done if it won't succeed\n        try {\n            var nativeKeys_1 = ['name', 'message', 'stack', 'line', 'column', 'fileName', 'lineNumber', 'columnNumber'];\n            var name_1 = error.name || error.constructor.name;\n            var errorKeys = Object.getOwnPropertyNames(error).filter(function (key) { return nativeKeys_1.indexOf(key) === -1; });\n            if (errorKeys.length) {\n                var extraErrorInfo = {};\n                try {\n                    for (var errorKeys_1 = tslib_1.__values(errorKeys), errorKeys_1_1 = errorKeys_1.next(); !errorKeys_1_1.done; errorKeys_1_1 = errorKeys_1.next()) {\n                        var key = errorKeys_1_1.value;\n                        var value = error[key];\n                        if (is_1.isError(value)) {\n                            value = value.name || value.constructor.name;\n                        }\n                        extraErrorInfo[key] = value;\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (errorKeys_1_1 && !errorKeys_1_1.done && (_a = errorKeys_1.return)) _a.call(errorKeys_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return _b = {},\n                    _b[name_1] = extraErrorInfo,\n                    _b;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger_1.logger.error('Unable to extract extra data from the Error object:', oO);\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtraErrorData.id = 'ExtraErrorData';\n    return ExtraErrorData;\n}());\nexports.ExtraErrorData = ExtraErrorData;\n//# sourceMappingURL=extraerrordata.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/extraerrordata.js\n// module id = BvW5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar error_1 = require(\"./error\");\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(limit) {\n        this.limit = limit;\n        /** Internal set of queued Promises */\n        this.buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this.limit === undefined || this.length() < this.limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                if (!this.isReady()) {\n                    return [2 /*return*/, Promise.reject(new error_1.SentryError('Not adding Promise due to buffer limit reached.'))];\n                }\n                if (this.buffer.indexOf(task) === -1) {\n                    this.buffer.push(task);\n                }\n                task\n                    .then(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\n                    return [2 /*return*/, this.remove(task)];\n                }); }); })\n                    .catch(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    return tslib_1.__generator(this, function (_a) {\n                        return [2 /*return*/, this.remove(task).catch(function () {\n                                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                                // because it's a new Promise chain.\n                            })];\n                    });\n                }); });\n                return [2 /*return*/, task];\n            });\n        });\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var removedTask;\n            return tslib_1.__generator(this, function (_a) {\n                removedTask = this.buffer.splice(this.buffer.indexOf(task), 1)[0];\n                return [2 /*return*/, removedTask];\n            });\n        });\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this.buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) {\n                        var capturedSetTimeout = setTimeout(function () {\n                            if (timeout && timeout > 0) {\n                                resolve(false);\n                            }\n                        }, timeout);\n                        Promise.all(_this.buffer)\n                            .then(function () {\n                            clearTimeout(capturedSetTimeout);\n                            resolve(true);\n                        })\n                            .catch(function () {\n                            resolve(true);\n                        });\n                    })];\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexports.PromiseBuffer = PromiseBuffer;\n//# sourceMappingURL=promisebuffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/promisebuffer.js\n// module id = E+6+\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar logger_1 = require(\"@sentry/utils/logger\");\nexports.installedIntegrations = [];\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n    var e_1, _a, e_2, _b;\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames = [];\n        try {\n            // Leave only unique default integrations, that were not overridden with provided user integrations\n            for (var defaultIntegrations_1 = tslib_1.__values(defaultIntegrations), defaultIntegrations_1_1 = defaultIntegrations_1.next(); !defaultIntegrations_1_1.done; defaultIntegrations_1_1 = defaultIntegrations_1.next()) {\n                var defaultIntegration = defaultIntegrations_1_1.value;\n                if (userIntegrationsNames.indexOf(getIntegrationName(defaultIntegration)) === -1 &&\n                    pickedIntegrationsNames.indexOf(getIntegrationName(defaultIntegration)) === -1) {\n                    integrations.push(defaultIntegration);\n                    pickedIntegrationsNames.push(getIntegrationName(defaultIntegration));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (defaultIntegrations_1_1 && !defaultIntegrations_1_1.done && (_a = defaultIntegrations_1.return)) _a.call(defaultIntegrations_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            // Don't add same user integration twice\n            for (var userIntegrations_1 = tslib_1.__values(userIntegrations), userIntegrations_1_1 = userIntegrations_1.next(); !userIntegrations_1_1.done; userIntegrations_1_1 = userIntegrations_1.next()) {\n                var userIntegration = userIntegrations_1_1.value;\n                if (pickedIntegrationsNames.indexOf(getIntegrationName(userIntegration)) === -1) {\n                    integrations.push(userIntegration);\n                    pickedIntegrationsNames.push(getIntegrationName(userIntegration));\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (userIntegrations_1_1 && !userIntegrations_1_1.done && (_b = userIntegrations_1.return)) _b.call(userIntegrations_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\nexports.getIntegrationsToSetup = getIntegrationsToSetup;\n/** Setup given integration */\nfunction setupIntegration(integration, options) {\n    if (exports.installedIntegrations.indexOf(getIntegrationName(integration)) !== -1) {\n        return;\n    }\n    try {\n        integration.setupOnce();\n    }\n    catch (_Oo) {\n        /** @deprecated */\n        // TODO: Remove in v5\n        // tslint:disable:deprecation\n        if (integration.install) {\n            logger_1.logger.warn(\"Integration \" + getIntegrationName(integration) + \": The install method is deprecated. Use \\\"setupOnce\\\".\");\n            integration.install(options);\n        }\n        // tslint:enable:deprecation\n    }\n    exports.installedIntegrations.push(getIntegrationName(integration));\n    logger_1.logger.log(\"Integration installed: \" + getIntegrationName(integration));\n}\nexports.setupIntegration = setupIntegration;\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[getIntegrationName(integration)] = integration;\n        setupIntegration(integration, options);\n    });\n    return integrations;\n}\nexports.setupIntegrations = setupIntegrations;\n/**\n * Returns the integration static id.\n * @param integration Integration to retrieve id\n */\nfunction getIntegrationName(integration) {\n    /**\n     * @depracted\n     */\n    // tslint:disable-next-line:no-unsafe-any\n    return integration.constructor.id || integration.name;\n}\n//# sourceMappingURL=integration.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integration.js\n// module id = Eu5d\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = require(\"@sentry/types\");\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve({\n                        reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n                        status: types_1.Status.Skipped,\n                    })];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(true)];\n            });\n        });\n    };\n    return NoopTransport;\n}());\nexports.NoopTransport = NoopTransport;\n//# sourceMappingURL=noop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/transports/noop.js\n// module id = LOEF\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar is_1 = require(\"@sentry/utils/is\");\nvar object_1 = require(\"@sentry/utils/object\");\nvar error_1 = require(\"./error\");\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this.fromString(from);\n        }\n        else {\n            this.fromComponents(from);\n        }\n        this.validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype.fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new error_1.SentryError('Invalid Dsn');\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        object_1.assign(this, { host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype.fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype.validate = function () {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(['protocol', 'user', 'host', 'projectId']), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var component = _c.value;\n                if (!this[component]) {\n                    throw new error_1.SentryError(\"Invalid Dsn: Missing \" + component);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new error_1.SentryError(\"Invalid Dsn: Unsupported protocol \\\"\" + this.protocol + \"\\\"\");\n        }\n        if (this.port && is_1.isNaN(parseInt(this.port, 10))) {\n            throw new error_1.SentryError(\"Invalid Dsn: Invalid port number \\\"\" + this.port + \"\\\"\");\n        }\n    };\n    return Dsn;\n}());\nexports.Dsn = Dsn;\n//# sourceMappingURL=dsn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/dsn.js\n// module id = MzuG\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar logger_1 = require(\"@sentry/utils/logger\");\nvar object_1 = require(\"@sentry/utils/object\");\nvar error_1 = require(\"./error\");\nvar noop_1 = require(\"./transports/noop\");\n/**\n * This is the base implemention of a Backend.\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new browser backend instance. */\n    function BaseBackend(options) {\n        this.options = options;\n        if (!this.options.dsn) {\n            logger_1.logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this.transport = this.setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype.setupTransport = function () {\n        return new noop_1.NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                throw new error_1.SentryError('Backend has to implement `eventFromException` method');\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                throw new error_1.SentryError('Backend has to implement `eventFromMessage` method');\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                // TODO: Remove with v5\n                // tslint:disable-next-line\n                if (this.transport.captureEvent) {\n                    // tslint:disable-next-line\n                    return [2 /*return*/, this.transport.captureEvent(event)];\n                }\n                // --------------------\n                return [2 /*return*/, this.transport.sendEvent(object_1.serialize(event))];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.storeBreadcrumb = function (_) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.storeScope = function (_) {\n        // Noop\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this.transport;\n    };\n    return BaseBackend;\n}());\nexports.BaseBackend = BaseBackend;\n//# sourceMappingURL=basebackend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/basebackend.js\n// module id = NJTI\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar minimal_1 = require(\"@sentry/minimal\");\nexports.addBreadcrumb = minimal_1.addBreadcrumb;\nexports.captureException = minimal_1.captureException;\nexports.captureEvent = minimal_1.captureEvent;\nexports.captureMessage = minimal_1.captureMessage;\nexports.configureScope = minimal_1.configureScope;\nexports.withScope = minimal_1.withScope;\nvar hub_1 = require(\"@sentry/hub\");\nexports.addGlobalEventProcessor = hub_1.addGlobalEventProcessor;\nexports.getCurrentHub = hub_1.getCurrentHub;\nexports.Hub = hub_1.Hub;\nexports.getHubFromCarrier = hub_1.getHubFromCarrier;\nexports.Scope = hub_1.Scope;\nvar api_1 = require(\"./api\");\nexports.API = api_1.API;\nvar baseclient_1 = require(\"./baseclient\");\nexports.BaseClient = baseclient_1.BaseClient;\nvar basebackend_1 = require(\"./basebackend\");\nexports.BaseBackend = basebackend_1.BaseBackend;\nvar dsn_1 = require(\"./dsn\");\nexports.Dsn = dsn_1.Dsn;\nvar error_1 = require(\"./error\");\nexports.SentryError = error_1.SentryError;\nvar promisebuffer_1 = require(\"./promisebuffer\");\nexports.PromiseBuffer = promisebuffer_1.PromiseBuffer;\nvar interfaces_1 = require(\"./interfaces\");\nexports.LogLevel = interfaces_1.LogLevel;\nvar sdk_1 = require(\"./sdk\");\nexports.initAndBind = sdk_1.initAndBind;\nvar noop_1 = require(\"./transports/noop\");\nexports.NoopTransport = noop_1.NoopTransport;\nvar Integrations = require(\"./integrations\");\nexports.Integrations = Integrations;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/index.js\n// module id = PEIW\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\n/** JSDoc */\nvar Debug = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Debug(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Debug.id;\n        this.options = tslib_1.__assign({ debugger: false, stringify: false }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    Debug.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event, hint) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(Debug);\n                if (self) {\n                    // tslint:disable:no-console\n                    // tslint:disable:no-debugger\n                    if (self.options.debugger) {\n                        debugger;\n                    }\n                    if (self.options.stringify) {\n                        console.log(JSON.stringify(event, null, 2));\n                        if (hint) {\n                            console.log(JSON.stringify(hint, null, 2));\n                        }\n                    }\n                    else {\n                        console.log(event);\n                        if (hint) {\n                            console.log(hint);\n                        }\n                    }\n                }\n                return [2 /*return*/, event];\n            });\n        }); });\n    };\n    /**\n     * @inheritDoc\n     */\n    Debug.id = 'Debug';\n    return Debug;\n}());\nexports.Debug = Debug;\n//# sourceMappingURL=debug.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/pluggable/debug.js\n// module id = QbGa\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = require(\"./is\");\nvar string_1 = require(\"./string\");\n/**\n * Serializes the given object into a string.\n * Like JSON.stringify, but doesn't throw on circular references.\n *\n * @param object A JSON-serializable object.\n * @returns A string containing the serialized object.\n */\nfunction serialize(object) {\n    return JSON.stringify(object, serializer({ normalize: false }));\n}\nexports.serialize = serialize;\n/**\n * Deserializes an object from a string previously serialized with\n * {@link serialize}.\n *\n * @param str A serialized object.\n * @returns The deserialized object.\n */\nfunction deserialize(str) {\n    return JSON.parse(str);\n}\nexports.deserialize = deserialize;\n/**\n * Creates a deep copy of the given object.\n *\n * The object must be serializable, i.e.:\n *  - It must not contain any cycles\n *  - Only primitive types are allowed (object, array, number, string, boolean)\n *  - Its depth should be considerably low for performance reasons\n *\n * @param object A JSON-serializable object.\n * @returns The object clone.\n */\nfunction clone(object) {\n    return deserialize(serialize(object));\n}\nexports.clone = clone;\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nfunction fill(source, name, replacement) {\n    if (!(name in source) || source[name].__sentry__) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    wrapped.__sentry__ = true;\n    wrapped.__sentry_original__ = original;\n    wrapped.__sentry_wrapped__ = wrapped;\n    source[name] = wrapped;\n}\nexports.fill = fill;\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\nexports.urlEncode = urlEncode;\n// Default Node.js REPL depth\nvar MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 100kB, as 200kB is max payload size, so half sounds reasonable\nvar MAX_SERIALIZE_EXCEPTION_SIZE = 100 * 1024;\nvar MAX_SERIALIZE_KEYS_LENGTH = 40;\n/** JSDoc */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** JSDoc */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    if (typeof value === 'string') {\n        return string_1.truncate(value, 40);\n    }\n    else if (type === '[object Object]') {\n        // Node.js REPL notation\n        return '[Object]';\n    }\n    else if (type === '[object Array]') {\n        // Node.js REPL notation\n        return '[Array]';\n    }\n    else {\n        return normalizeValue(value);\n    }\n}\n/** JSDoc */\nfunction serializeObject(value, depth) {\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    if (is_1.isPlainObject(value)) {\n        var serialized_1 = {};\n        var val_1 = value;\n        Object.keys(val_1).forEach(function (key) {\n            serialized_1[key] = serializeObject(val_1[key], depth - 1);\n        });\n        return serialized_1;\n    }\n    else if (Array.isArray(value)) {\n        var val = value;\n        return val.map(function (v) { return serializeObject(v, depth - 1); });\n    }\n    return serializeValue(value);\n}\nexports.serializeObject = serializeObject;\n/** JSDoc */\nfunction limitObjectDepthToSize(object, depth, maxSize) {\n    if (depth === void 0) { depth = MAX_SERIALIZE_EXCEPTION_DEPTH; }\n    if (maxSize === void 0) { maxSize = MAX_SERIALIZE_EXCEPTION_SIZE; }\n    var serialized = serializeObject(object, depth);\n    if (jsonSize(serialize(serialized)) > maxSize) {\n        return limitObjectDepthToSize(object, depth - 1);\n    }\n    return serialized;\n}\nexports.limitObjectDepthToSize = limitObjectDepthToSize;\n/** JSDoc */\nfunction serializeKeysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = MAX_SERIALIZE_KEYS_LENGTH; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return string_1.truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return string_1.truncate(serialized, maxLength);\n    }\n    return '';\n}\nexports.serializeKeysToEventMessage = serializeKeysToEventMessage;\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\n/** JSDoc */\nfunction assign(target) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var to = Object(target);\n    // tslint:disable-next-line\n    for (var i = 0; i < args.length; i++) {\n        var source = args[i];\n        if (source !== null) {\n            for (var nextKey in source) {\n                if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                    to[nextKey] = source[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\nexports.assign = assign;\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    if (value instanceof Date) {\n        return \"[Date] \" + value;\n    }\n    if (value instanceof Error) {\n        return objectifyError(value);\n    }\n    if (is_1.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (is_1.isUndefined(value)) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * serializer()\n *\n * Remove circular references,\n * translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * and takes care of Error objects serialization\n */\nfunction serializer(options) {\n    if (options === void 0) { options = { normalize: true }; }\n    var stack = [];\n    var keys = [];\n    /** recursive */\n    function cycleserializer(_key, value) {\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n        return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join('.') + \"]\";\n    }\n    return function (key, value) {\n        if (stack.length > 0) {\n            var thisPos = stack.indexOf(this);\n            if (thisPos === -1) {\n                stack.push(this);\n                keys.push(key);\n            }\n            else {\n                stack.splice(thisPos + 1);\n                keys.splice(thisPos, Infinity, key);\n            }\n            if (stack.indexOf(value) !== -1) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                value = cycleserializer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n        return options.normalize ? normalizeValue(value, key) : value;\n    };\n}\n/**\n * safeNormalize()\n *\n * Creates a copy of the input by applying serializer function on it and parsing it back to unify the data\n */\nfunction safeNormalize(input) {\n    try {\n        return JSON.parse(JSON.stringify(input, serializer({ normalize: true })));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\nexports.safeNormalize = safeNormalize;\n//# sourceMappingURL=object.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/object.js\n// module id = T/9k\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tslib/tslib.es6.js\n// module id = TToO\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar misc_1 = require(\"./misc\");\n// TODO: Implement different loggers for different environments\nvar global = misc_1.getGlobalObject();\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this.enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this.enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this.enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.log(\"Sentry Logger [Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.warn(\"Sentry Logger [Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.error(\"Sentry Logger [Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\nvar logger = new Logger();\nexports.logger = logger;\n//# sourceMappingURL=logger.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/logger.js\n// module id = VAgH\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar is_1 = require(\"@sentry/utils/is\");\nvar logger_1 = require(\"@sentry/utils/logger\");\nvar misc_1 = require(\"@sentry/utils/misc\");\nvar string_1 = require(\"@sentry/utils/string\");\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var hub, self, client, clientOptions, options;\n            return tslib_1.__generator(this, function (_a) {\n                hub = hub_1.getCurrentHub();\n                if (!hub) {\n                    return [2 /*return*/, event];\n                }\n                self = hub.getIntegration(InboundFilters);\n                if (self) {\n                    client = hub.getClient();\n                    clientOptions = client ? client.getOptions() : {};\n                    options = self.mergeOptions(clientOptions);\n                    if (self.shouldDropEvent(event, options)) {\n                        return [2 /*return*/, null];\n                    }\n                }\n                return [2 /*return*/, event];\n            });\n        }); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.shouldDropEvent = function (event, options) {\n        if (this.isSentryError(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + misc_1.getEventDescription(event));\n            return true;\n        }\n        if (this.isIgnoredError(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + misc_1.getEventDescription(event));\n            return true;\n        }\n        if (this.isBlacklistedUrl(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + misc_1.getEventDescription(event) + \".\\nUrl: \" + this.getEventFilterUrl(event));\n            return true;\n        }\n        if (!this.isWhitelistedUrl(event, options)) {\n            logger_1.logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + misc_1.getEventDescription(event) + \".\\nUrl: \" + this.getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isIgnoredError = function (event, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this.getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return _this.isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isBlacklistedUrl = function (event, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this.getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return _this.isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isWhitelistedUrl = function (event, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this.getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return _this.isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype.mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this.options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this.options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this.options.ignoreInternal !== 'undefined' ? this.options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this.options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype.isMatchingPattern = function (value, pattern) {\n        if (is_1.isRegExp(pattern)) {\n            return pattern.test(value);\n        }\n        else if (typeof pattern === 'string') {\n            return string_1.includes(value, pattern);\n        }\n        else {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype.getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        else if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger_1.logger.error(\"Cannot extract message for event \" + misc_1.getEventDescription(event));\n                return [];\n            }\n        }\n        else {\n            return [];\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype.getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable-next-line:no-unsafe-any\n                return event.stacktrace.frames[0].filename;\n            }\n            else if (event.exception) {\n                // tslint:disable-next-line:no-unsafe-any\n                return event.exception.values[0].stacktrace.frames[0].filename;\n            }\n            else {\n                return null;\n            }\n        }\n        catch (oO) {\n            logger_1.logger.error(\"Cannot extract url for event \" + misc_1.getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexports.InboundFilters = InboundFilters;\n//# sourceMappingURL=inboundfilters.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/inboundfilters.js\n// module id = W+kn\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dedupe_1 = require(\"./dedupe\");\nexports.Dedupe = dedupe_1.Dedupe;\nvar functiontostring_1 = require(\"./functiontostring\");\nexports.FunctionToString = functiontostring_1.FunctionToString;\nvar sdkinformation_1 = require(\"./sdkinformation\");\nexports.SDKInformation = sdkinformation_1.SDKInformation;\nvar inboundfilters_1 = require(\"./inboundfilters\");\nexports.InboundFilters = inboundfilters_1.InboundFilters;\nvar extraerrordata_1 = require(\"./extraerrordata\");\nexports.ExtraErrorData = extraerrordata_1.ExtraErrorData;\nvar debug_1 = require(\"./pluggable/debug\");\nexports.Debug = debug_1.Debug;\nvar rewriteframes_1 = require(\"./pluggable/rewriteframes\");\nexports.RewriteFrames = rewriteframes_1.RewriteFrames;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/index.js\n// module id = W18E\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hub_1 = require(\"@sentry/hub\");\nvar logger_1 = require(\"@sentry/utils/logger\");\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n * @returns The installed and bound client instance.\n */\nfunction initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger_1.logger.enable();\n    }\n    if (hub_1.getCurrentHub().getClient()) {\n        return;\n    }\n    var client = new clientClass(options);\n    hub_1.getCurrentHub().bindClient(client);\n    client.install();\n}\nexports.initAndBind = initAndBind;\n//# sourceMappingURL=sdk.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/sdk.js\n// module id = b0X5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = require(\"@sentry/types\");\nvar async_1 = require(\"@sentry/utils/async\");\nvar is_1 = require(\"@sentry/utils/is\");\nvar logger_1 = require(\"@sentry/utils/logger\");\nvar misc_1 = require(\"@sentry/utils/misc\");\nvar string_1 = require(\"@sentry/utils/string\");\nvar dsn_1 = require(\"./dsn\");\nvar integration_1 = require(\"./integration\");\nvar promisebuffer_1 = require(\"./promisebuffer\");\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * By default, truncates URL values to 250 chars\n */\nvar MAX_URL_LENGTH = 250;\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** A simple buffer holding all requests. */\n        this.buffer = new promisebuffer_1.PromiseBuffer();\n        this.backend = new backendClass(options);\n        this.options = options;\n        if (options.dsn) {\n            this.dsn = new dsn_1.Dsn(options.dsn);\n        }\n        // We have to setup the integrations in the constructor since we do not want\n        // that anyone needs to call client.install();\n        this.integrations = integration_1.setupIntegrations(this.options);\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.install = function () {\n        if (!this.isEnabled()) {\n            return (this.installed = false);\n        }\n        var backend = this.getBackend();\n        if (!this.installed && backend.install) {\n            backend.install();\n        }\n        return (this.installed = true);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.buffer.add((function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var event;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.getBackend().eventFromException(exception, hint)];\n                                case 1:\n                                    event = _a.sent();\n                                    return [2 /*return*/, this.captureEvent(event, hint, scope)];\n                            }\n                        });\n                    }); })())];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.buffer.add((function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var event, _a;\n                        return tslib_1.__generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    if (!is_1.isPrimitive(message)) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, this.getBackend().eventFromMessage(\"\" + message, level, hint)];\n                                case 1:\n                                    _a = _b.sent();\n                                    return [3 /*break*/, 4];\n                                case 2: return [4 /*yield*/, this.getBackend().eventFromException(message, hint)];\n                                case 3:\n                                    _a = _b.sent();\n                                    _b.label = 4;\n                                case 4:\n                                    event = _a;\n                                    return [2 /*return*/, this.captureEvent(event, hint, scope)];\n                            }\n                        });\n                    }); })())];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                // Adding this here is technically not correct since if you call captureMessage/captureException it's already\n                // buffered. But since we not really need the count and we only need to know if the buffer is full or not,\n                // This is fine...\n                return [2 /*return*/, this.buffer.add((function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var _this = this;\n                        return tslib_1.__generator(this, function (_a) {\n                            return [2 /*return*/, this.processEvent(event, function (finalEvent) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\n                                    return [2 /*return*/, this.getBackend().sendEvent(finalEvent)];\n                                }); }); }, hint, scope)];\n                        });\n                    }); })())];\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.addBreadcrumb = function (breadcrumb, hint, scope) {\n        var _a = this.getOptions(), beforeBreadcrumb = _a.beforeBreadcrumb, _b = _a.maxBreadcrumbs, maxBreadcrumbs = _b === void 0 ? DEFAULT_BREADCRUMBS : _b;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? misc_1.consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        if (this.getBackend().storeBreadcrumb(finalBreadcrumb) && scope) {\n            scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this.dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this.options;\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype.getBackend = function () {\n        return this.backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype.isEnabled = function () {\n        return this.getOptions().enabled !== false && this.dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype.prepareEvent = function (event, scope, hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, environment, _b, maxBreadcrumbs, release, dist, prepared, exception, request;\n            return tslib_1.__generator(this, function (_c) {\n                _a = this.getOptions(), environment = _a.environment, _b = _a.maxBreadcrumbs, maxBreadcrumbs = _b === void 0 ? DEFAULT_BREADCRUMBS : _b, release = _a.release, dist = _a.dist;\n                prepared = tslib_1.__assign({}, event);\n                if (prepared.environment === undefined && environment !== undefined) {\n                    prepared.environment = environment;\n                }\n                if (prepared.release === undefined && release !== undefined) {\n                    prepared.release = release;\n                }\n                if (prepared.dist === undefined && dist !== undefined) {\n                    prepared.dist = dist;\n                }\n                if (prepared.message) {\n                    prepared.message = string_1.truncate(prepared.message, MAX_URL_LENGTH);\n                }\n                exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n                if (exception && exception.value) {\n                    exception.value = string_1.truncate(exception.value, MAX_URL_LENGTH);\n                }\n                request = prepared.request;\n                if (request && request.url) {\n                    request.url = string_1.truncate(request.url, MAX_URL_LENGTH);\n                }\n                if (prepared.event_id === undefined) {\n                    prepared.event_id = misc_1.uuid4();\n                }\n                // This should be the last thing called, since we want that\n                // {@link Hub.addEventProcessor} gets the finished prepared event.\n                if (scope) {\n                    return [2 /*return*/, scope.applyToEvent(prepared, hint, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS))];\n                }\n                return [2 /*return*/, prepared];\n            });\n        });\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     * The returned event status offers clues to whether the event was sent to\n     * Sentry and accepted there. If the {@link Options.shouldSend} hook returns\n     * `false`, the status will be {@link SendStatus.Skipped}. If the rate limit\n     * was exceeded, the status will be {@link SendStatus.RateLimit}.\n     *\n     * @param event The event to send to Sentry.\n     * @param send A function to actually send the event.\n     * @param scope A scope containing event metadata.\n     * @param hint May contain additional informartion about the original exception.\n     * @returns A Promise that resolves with the event status.\n     */\n    BaseClient.prototype.processEvent = function (event, send, hint, scope) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, beforeSend, sampleRate, prepared, finalEvent, isInternalException, exception_1, response, error_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.isEnabled()) {\n                            return [2 /*return*/, {\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n                        // 1.0 === 100% events are sent\n                        // 0.0 === 0% events are sent\n                        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n                            return [2 /*return*/, {\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        return [4 /*yield*/, this.prepareEvent(event, scope, hint)];\n                    case 1:\n                        prepared = _b.sent();\n                        if (prepared === null) {\n                            return [2 /*return*/, {\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        finalEvent = prepared;\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 5, , 6]);\n                        isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                        if (!(!isInternalException && beforeSend)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, beforeSend(prepared, hint)];\n                    case 3:\n                        finalEvent = _b.sent();\n                        if (typeof finalEvent === 'undefined') {\n                            logger_1.logger.error('`beforeSend` method has to return `null` or a valid event');\n                        }\n                        _b.label = 4;\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        exception_1 = _b.sent();\n                        async_1.forget(this.captureException(exception_1, {\n                            data: {\n                                __sentry__: true,\n                            },\n                            originalException: exception_1,\n                        }));\n                        return [2 /*return*/, {\n                                reason: 'Event processing in beforeSend method threw an exception',\n                                status: types_1.Status.Invalid,\n                            }];\n                    case 6:\n                        if (finalEvent === null) {\n                            return [2 /*return*/, {\n                                    reason: 'Event dropped due to being discarded by beforeSend method',\n                                    status: types_1.Status.Skipped,\n                                }];\n                        }\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 9, , 10]);\n                        return [4 /*yield*/, send(finalEvent)];\n                    case 8:\n                        response = _b.sent();\n                        response.event = finalEvent;\n                        if (response.status === types_1.Status.RateLimit) {\n                            // TODO: Handle rate limits and maintain a queue. For now, we require SDK\n                            // implementors to override this method and handle it themselves.\n                        }\n                        return [2 /*return*/, response];\n                    case 9:\n                        error_1 = _b.sent();\n                        // We have a catch here since the transport can reject the request internally.\n                        // If we do not catch this here, we will run into an endless loop.\n                        logger_1.logger.error(\"\" + error_1);\n                        return [2 /*return*/, {\n                                reason: \"\" + error_1,\n                                status: types_1.Status.Failed,\n                            }];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.getBackend()\n                                .getTransport()\n                                .close(timeout),\n                            this.buffer.drain(timeout),\n                        ])];\n                    case 1: return [2 /*return*/, (_a.sent()).reduce(function (prev, current) { return prev && current; })];\n                }\n            });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this.integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this.integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger_1.logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    return BaseClient;\n}());\nexports.BaseClient = BaseClient;\n//# sourceMappingURL=baseclient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/baseclient.js\n// module id = cSX3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = require(\"./is\");\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\nexports.dynamicRequire = dynamicRequire;\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nexports.isNodeEnv = isNodeEnv;\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n// tslint:disable:strict-type-predicates\nfunction getGlobalObject() {\n    return isNodeEnv() ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {};\n}\nexports.getGlobalObject = getGlobalObject;\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            var r = (Math.random() * 16) | 0;\n            // tslint:disable-next-line:no-bitwise\n            var v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\nexports.uuid4 = uuid4;\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\nexports.htmlTreeAsString = htmlTreeAsString;\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && is_1.isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\nexports.htmlElementAsString = htmlElementAsString;\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\nexports.parseUrl = parseUrl;\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    else if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        else {\n            return exception.type || exception.value || event.event_id || '<unknown>';\n        }\n    }\n    else {\n        return event.event_id || '<unknown>';\n    }\n}\nexports.getEventDescription = getEventDescription;\n/** JSDoc */\nfunction consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\nexports.consoleSandbox = consoleSandbox;\n//# sourceMappingURL=misc.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/misc.js\n// module id = dDlv\n// module chunks = 0","\"use strict\";\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n    // if the path tries to go above the root, `up` ends up > 0\n    var up = 0;\n    for (var i = parts.length - 1; i >= 0; i--) {\n        var last = parts[i];\n        if (last === '.') {\n            parts.splice(i, 1);\n        }\n        else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n        }\n        else if (up) {\n            parts.splice(i, 1);\n            up--;\n        }\n    }\n    // if the path is allowed to go above the root, restore leading ..s\n    if (allowAboveRoot) {\n        for (; up--; up) {\n            parts.unshift('..');\n        }\n    }\n    return parts;\n}\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n    var parts = splitPathRe.exec(filename);\n    return parts ? parts.slice(1) : [];\n}\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        var path = i >= 0 ? args[i] : '/';\n        // Skip empty entries\n        if (!path) {\n            continue;\n        }\n        resolvedPath = path + \"/\" + resolvedPath;\n        resolvedAbsolute = path.charAt(0) === '/';\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n    resolvedPath = normalizeArray(resolvedPath.split('/').filter(function (p) { return !!p; }), !resolvedAbsolute).join('/');\n    return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\nexports.resolve = resolve;\n/** JSDoc */\nfunction trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n        if (arr[start] !== '') {\n            break;\n        }\n    }\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n        if (arr[end] !== '') {\n            break;\n        }\n    }\n    if (start > end) {\n        return [];\n    }\n    return arr.slice(start, end - start + 1);\n}\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n    // tslint:disable:no-parameter-reassignment\n    from = resolve(from).substr(1);\n    to = resolve(to).substr(1);\n    var fromParts = trim(from.split('/'));\n    var toParts = trim(to.split('/'));\n    var length = Math.min(fromParts.length, toParts.length);\n    var samePartsLength = length;\n    for (var i = 0; i < length; i++) {\n        if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n        }\n    }\n    var outputParts = [];\n    for (var i = samePartsLength; i < fromParts.length; i++) {\n        outputParts.push('..');\n    }\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\n    return outputParts.join('/');\n}\nexports.relative = relative;\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalize(path) {\n    var isPathAbsolute = isAbsolute(path);\n    var trailingSlash = path.substr(-1) === '/';\n    // Normalize the path\n    var normalizedPath = normalizeArray(path.split('/').filter(function (p) { return !!p; }), !isPathAbsolute).join('/');\n    if (!normalizedPath && !isPathAbsolute) {\n        normalizedPath = '.';\n    }\n    if (normalizedPath && trailingSlash) {\n        normalizedPath += '/';\n    }\n    return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\nexports.normalize = normalize;\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n    return path.charAt(0) === '/';\n}\nexports.isAbsolute = isAbsolute;\n// posix version\n/** JSDoc */\nfunction join() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return normalize(args.join('/'));\n}\nexports.join = join;\n/** JSDoc */\nfunction dirname(path) {\n    var result = splitPath(path);\n    var root = result[0];\n    var dir = result[1];\n    if (!root && !dir) {\n        // No dirname whatsoever\n        return '.';\n    }\n    if (dir) {\n        // It has a dirname, strip trailing slash\n        dir = dir.substr(0, dir.length - 1);\n    }\n    return root + dir;\n}\nexports.dirname = dirname;\n/** JSDoc */\nfunction basename(path, ext) {\n    var f = splitPath(path)[2];\n    if (ext && f.substr(ext.length * -1) === ext) {\n        f = f.substr(0, f.length - ext.length);\n    }\n    return f;\n}\nexports.basename = basename;\n//# sourceMappingURL=path.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/path.js\n// module id = dOdG\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexports.FunctionToString = FunctionToString;\n//# sourceMappingURL=functiontostring.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/functiontostring.js\n// module id = ficd\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar logger_1 = require(\"@sentry/utils/logger\");\nvar misc_1 = require(\"@sentry/utils/misc\");\n/** Deduplication filter */\nvar Dedupe = /** @class */ (function () {\n    function Dedupe() {\n        /**\n         * @inheritDoc\n         */\n        this.name = Dedupe.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    Dedupe.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (currentEvent) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(Dedupe);\n                if (self) {\n                    // Juuust in case something goes wrong\n                    try {\n                        if (self.shouldDropEvent(currentEvent, self.previousEvent)) {\n                            return [2 /*return*/, null];\n                        }\n                    }\n                    catch (_oO) {\n                        return [2 /*return*/, (self.previousEvent = currentEvent)];\n                    }\n                    return [2 /*return*/, (self.previousEvent = currentEvent)];\n                }\n                return [2 /*return*/, currentEvent];\n            });\n        }); });\n    };\n    /** JSDoc */\n    Dedupe.prototype.shouldDropEvent = function (currentEvent, previousEvent) {\n        if (!previousEvent) {\n            return false;\n        }\n        if (this.isSameMessageEvent(currentEvent, previousEvent)) {\n            logger_1.logger.warn(\"Event dropped due to being a duplicate of previous event (same message).\\nEvent: \" + misc_1.getEventDescription(currentEvent));\n            return true;\n        }\n        if (this.isSameExceptionEvent(currentEvent, previousEvent)) {\n            logger_1.logger.warn(\"Event dropped due to being a duplicate of previous event (same exception).\\nEvent: \" + misc_1.getEventDescription(currentEvent));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameMessageEvent = function (currentEvent, previousEvent) {\n        var currentMessage = currentEvent.message;\n        var previousMessage = previousEvent.message;\n        // If no event has a message, they were both exceptions, so bail out\n        if (!currentMessage && !previousMessage) {\n            return false;\n        }\n        // If only one event has a stacktrace, but not the other one, they are not the same\n        if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n            return false;\n        }\n        if (currentMessage !== previousMessage) {\n            return false;\n        }\n        if (!this.isSameFingerprint(currentEvent, previousEvent)) {\n            return false;\n        }\n        if (!this.isSameStacktrace(currentEvent, previousEvent)) {\n            return false;\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype.getFramesFromEvent = function (event) {\n        var exception = event.exception;\n        if (exception) {\n            try {\n                // @ts-ignore\n                return exception.values[0].stacktrace.frames;\n            }\n            catch (_oO) {\n                return undefined;\n            }\n        }\n        else if (event.stacktrace) {\n            return event.stacktrace.frames;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameStacktrace = function (currentEvent, previousEvent) {\n        var currentFrames = this.getFramesFromEvent(currentEvent);\n        var previousFrames = this.getFramesFromEvent(previousEvent);\n        // If no event has a fingerprint, they are assumed to be the same\n        if (!currentFrames && !previousFrames) {\n            return true;\n        }\n        // If only one event has a stacktrace, but not the other one, they are not the same\n        if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n            return false;\n        }\n        currentFrames = currentFrames;\n        previousFrames = previousFrames;\n        // If number of frames differ, they are not the same\n        if (previousFrames.length !== currentFrames.length) {\n            return false;\n        }\n        // Otherwise, compare the two\n        for (var i = 0; i < previousFrames.length; i++) {\n            var frameA = previousFrames[i];\n            var frameB = currentFrames[i];\n            if (frameA.filename !== frameB.filename ||\n                frameA.lineno !== frameB.lineno ||\n                frameA.colno !== frameB.colno ||\n                frameA.function !== frameB.function) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype.getExceptionFromEvent = function (event) {\n        return event.exception && event.exception.values && event.exception.values[0];\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameExceptionEvent = function (currentEvent, previousEvent) {\n        var previousException = this.getExceptionFromEvent(previousEvent);\n        var currentException = this.getExceptionFromEvent(currentEvent);\n        if (!previousException || !currentException) {\n            return false;\n        }\n        if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n            return false;\n        }\n        if (!this.isSameFingerprint(currentEvent, previousEvent)) {\n            return false;\n        }\n        if (!this.isSameStacktrace(currentEvent, previousEvent)) {\n            return false;\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype.isSameFingerprint = function (currentEvent, previousEvent) {\n        var currentFingerprint = currentEvent.fingerprint;\n        var previousFingerprint = previousEvent.fingerprint;\n        // If no event has a fingerprint, they are assumed to be the same\n        if (!currentFingerprint && !previousFingerprint) {\n            return true;\n        }\n        // If only one event has a fingerprint, but not the other one, they are not the same\n        if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n            return false;\n        }\n        currentFingerprint = currentFingerprint;\n        previousFingerprint = previousFingerprint;\n        // Otherwise, compare the two\n        try {\n            return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Dedupe.id = 'Dedupe';\n    return Dedupe;\n}());\nexports.Dedupe = Dedupe;\n//# sourceMappingURL=dedupe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/dedupe.js\n// module id = fvxt\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nvar Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity = exports.Severity || (exports.Severity = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity = exports.Severity || (exports.Severity = {}));\n/** The status of an event. */\nvar Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status = exports.Status || (exports.Status = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status = exports.Status || (exports.Status = {}));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/types/dist/index.js\n// module id = hct9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Console logging verbosity for the SDK. */\nvar LogLevel;\n(function (LogLevel) {\n    /** No logs will be generated. */\n    LogLevel[LogLevel[\"None\"] = 0] = \"None\";\n    /** Only SDK internal errors will be logged. */\n    LogLevel[LogLevel[\"Error\"] = 1] = \"Error\";\n    /** Information useful for debugging the SDK will be logged. */\n    LogLevel[LogLevel[\"Debug\"] = 2] = \"Debug\";\n    /** All SDK actions will be logged. */\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n//# sourceMappingURL=interfaces.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/interfaces.js\n// module id = hoAL\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar path_1 = require(\"@sentry/utils/path\");\n/** Rewrite event frames paths */\nvar RewriteFrames = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function RewriteFrames(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        /**\n         * @inheritDoc\n         */\n        this.name = RewriteFrames.id;\n        /**\n         * @inheritDoc\n         */\n        this.iteratee = function (frame) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var base;\n            return tslib_1.__generator(this, function (_a) {\n                if (frame.filename && frame.filename.startsWith('/')) {\n                    base = this.root ? path_1.relative(this.root, frame.filename) : path_1.basename(frame.filename);\n                    frame.filename = \"app:///\" + base;\n                }\n                return [2 /*return*/, frame];\n            });\n        }); };\n        if (options.root) {\n            this.root = options.root;\n        }\n        if (options.iteratee) {\n            this.iteratee = options.iteratee;\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    RewriteFrames.prototype.setupOnce = function () {\n        var _this = this;\n        hub_1.addGlobalEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var self;\n            return tslib_1.__generator(this, function (_a) {\n                self = hub_1.getCurrentHub().getIntegration(RewriteFrames);\n                if (self) {\n                    return [2 /*return*/, self.process(event)];\n                }\n                return [2 /*return*/, event];\n            });\n        }); });\n    };\n    /** JSDoc */\n    RewriteFrames.prototype.process = function (event) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var frames, _a, _b, _i, i, _c, _d;\n            return tslib_1.__generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        frames = this.getFramesFromEvent(event);\n                        if (!frames) return [3 /*break*/, 4];\n                        _a = [];\n                        for (_b in frames)\n                            _a.push(_b);\n                        _i = 0;\n                        _e.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\n                        i = _a[_i];\n                        // tslint:disable-next-line\n                        _c = frames;\n                        _d = i;\n                        return [4 /*yield*/, this.iteratee(frames[i])];\n                    case 2:\n                        // tslint:disable-next-line\n                        _c[_d] = _e.sent();\n                        _e.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, event];\n                }\n            });\n        });\n    };\n    /** JSDoc */\n    RewriteFrames.prototype.getFramesFromEvent = function (event) {\n        var exception = event.exception;\n        if (exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                return exception.values[0].stacktrace.frames;\n            }\n            catch (_oO) {\n                return undefined;\n            }\n        }\n        else if (event.stacktrace) {\n            return event.stacktrace.frames;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    RewriteFrames.id = 'RewriteFrames';\n    return RewriteFrames;\n}());\nexports.RewriteFrames = RewriteFrames;\n//# sourceMappingURL=rewriteframes.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/integrations/pluggable/rewriteframes.js\n// module id = nnpQ\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scope_1 = require(\"./scope\");\nexports.addGlobalEventProcessor = scope_1.addGlobalEventProcessor;\nexports.Scope = scope_1.Scope;\nvar hub_1 = require(\"./hub\");\nexports.getCurrentHub = hub_1.getCurrentHub;\nexports.getHubFromCarrier = hub_1.getHubFromCarrier;\nexports.getMainCarrier = hub_1.getMainCarrier;\nexports.Hub = hub_1.Hub;\nexports.setHubOnCarrier = hub_1.setHubOnCarrier;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/hub/dist/index.js\n// module id = q5hm\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexports.SentryError = SentryError;\n//# sourceMappingURL=error.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/error.js\n// module id = r5K/\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\nvar core = require('@sentry/core');\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar dist = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nvar Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity = exports.Severity || (exports.Severity = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity = exports.Severity || (exports.Severity = {}));\n/** The status of an event. */\nvar Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status = exports.Status || (exports.Status = {}));\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status = exports.Status || (exports.Status = {}));\n\n});\n\nunwrapExports(dist);\nvar dist_1 = dist.Severity;\nvar dist_2 = dist.Status;\n\nvar is = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\nexports.isError = isError;\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\nexports.isErrorEvent = isErrorEvent;\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\nexports.isDOMError = isDOMError;\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\nexports.isDOMException = isDOMException;\n/**\n * Checks whether given value's type is an undefined\n * {@link isUndefined}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isUndefined(wat) {\n    return wat === void 0;\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks whether given value's type is a function\n * {@link isFunction}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isFunction(wat) {\n    return typeof wat === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\nexports.isPrimitive = isPrimitive;\n/**\n * Checks whether given value's type is an array\n * {@link isArray}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isArray(wat) {\n    return Object.prototype.toString.call(wat) === '[object Array]';\n}\nexports.isArray = isArray;\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n/**\n * Checks whether given value's type is a NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n    return wat !== wat;\n}\nexports.isNaN = isNaN;\n\n});\n\nunwrapExports(is);\nvar is_1 = is.isError;\nvar is_2 = is.isErrorEvent;\nvar is_3 = is.isDOMError;\nvar is_4 = is.isDOMException;\nvar is_5 = is.isUndefined;\nvar is_6 = is.isFunction;\nvar is_7 = is.isString;\nvar is_8 = is.isPrimitive;\nvar is_9 = is.isArray;\nvar is_10 = is.isPlainObject;\nvar is_11 = is.isRegExp;\nvar is_12 = is.isNaN;\n\nvar misc = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\nexports.dynamicRequire = dynamicRequire;\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nexports.isNodeEnv = isNodeEnv;\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n// tslint:disable:strict-type-predicates\nfunction getGlobalObject() {\n    return isNodeEnv() ? commonjsGlobal : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {};\n}\nexports.getGlobalObject = getGlobalObject;\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            var r = (Math.random() * 16) | 0;\n            // tslint:disable-next-line:no-bitwise\n            var v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\nexports.uuid4 = uuid4;\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\nexports.htmlTreeAsString = htmlTreeAsString;\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && is.isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\nexports.htmlElementAsString = htmlElementAsString;\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\nexports.parseUrl = parseUrl;\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    else if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        else {\n            return exception.type || exception.value || event.event_id || '<unknown>';\n        }\n    }\n    else {\n        return event.event_id || '<unknown>';\n    }\n}\nexports.getEventDescription = getEventDescription;\n/** JSDoc */\nfunction consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\nexports.consoleSandbox = consoleSandbox;\n\n});\n\nunwrapExports(misc);\nvar misc_1 = misc.dynamicRequire;\nvar misc_2 = misc.isNodeEnv;\nvar misc_3 = misc.getGlobalObject;\nvar misc_4 = misc.uuid4;\nvar misc_5 = misc.htmlTreeAsString;\nvar misc_6 = misc.htmlElementAsString;\nvar misc_7 = misc.parseUrl;\nvar misc_8 = misc.getEventDescription;\nvar misc_9 = misc.consoleSandbox;\n\nvar supports = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsErrorEvent = supportsErrorEvent;\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsDOMError = supportsDOMError;\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsDOMException = supportsDOMException;\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n    if (!('fetch' in misc.getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsFetch = supportsFetch;\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = misc.getGlobalObject();\n    var fetch = global.fetch;\n    // tslint:disable-next-line:no-unsafe-any\n    return fetch.toString().indexOf('native') !== -1;\n}\nexports.supportsNativeFetch = supportsNativeFetch;\n/**\n * Tells whether current environment supports sendBeacon API\n * {@link supportsBeacon}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsBeacon() {\n    var global = misc.getGlobalObject();\n    return 'navigator' in global && 'sendBeacon' in global.navigator;\n}\nexports.supportsBeacon = supportsBeacon;\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n    return 'ReportingObserver' in misc.getGlobalObject();\n}\nexports.supportsReportingObserver = supportsReportingObserver;\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('pickleRick', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.supportsReferrerPolicy = supportsReferrerPolicy;\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = misc.getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\nexports.supportsHistory = supportsHistory;\n\n});\n\nunwrapExports(supports);\nvar supports_1 = supports.supportsErrorEvent;\nvar supports_2 = supports.supportsDOMError;\nvar supports_3 = supports.supportsDOMException;\nvar supports_4 = supports.supportsFetch;\nvar supports_5 = supports.supportsNativeFetch;\nvar supports_6 = supports.supportsBeacon;\nvar supports_7 = supports.supportsReportingObserver;\nvar supports_8 = supports.supportsReferrerPolicy;\nvar supports_9 = supports.supportsHistory;\n\nvar string = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    if (max === 0 || !is.isString(str)) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\nexports.truncate = truncate;\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\nexports.snipLine = snipLine;\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\nexports.safeJoin = safeJoin;\n/**\n * Checks if given value is included in the target\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill\n * @param target source string\n * @param search string to be looked for\n * @returns An answer\n */\nfunction includes(target, search) {\n    if (search.length > target.length) {\n        return false;\n    }\n    else {\n        return target.indexOf(search) !== -1;\n    }\n}\nexports.includes = includes;\n\n});\n\nunwrapExports(string);\nvar string_1 = string.truncate;\nvar string_2 = string.snipLine;\nvar string_3 = string.safeJoin;\nvar string_4 = string.includes;\n\nvar object = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n/**\n * Serializes the given object into a string.\n * Like JSON.stringify, but doesn't throw on circular references.\n *\n * @param object A JSON-serializable object.\n * @returns A string containing the serialized object.\n */\nfunction serialize(object) {\n    return JSON.stringify(object, serializer({ normalize: false }));\n}\nexports.serialize = serialize;\n/**\n * Deserializes an object from a string previously serialized with\n * {@link serialize}.\n *\n * @param str A serialized object.\n * @returns The deserialized object.\n */\nfunction deserialize(str) {\n    return JSON.parse(str);\n}\nexports.deserialize = deserialize;\n/**\n * Creates a deep copy of the given object.\n *\n * The object must be serializable, i.e.:\n *  - It must not contain any cycles\n *  - Only primitive types are allowed (object, array, number, string, boolean)\n *  - Its depth should be considerably low for performance reasons\n *\n * @param object A JSON-serializable object.\n * @returns The object clone.\n */\nfunction clone(object) {\n    return deserialize(serialize(object));\n}\nexports.clone = clone;\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nfunction fill(source, name, replacement) {\n    if (!(name in source) || source[name].__sentry__) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    wrapped.__sentry__ = true;\n    wrapped.__sentry_original__ = original;\n    wrapped.__sentry_wrapped__ = wrapped;\n    source[name] = wrapped;\n}\nexports.fill = fill;\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\nexports.urlEncode = urlEncode;\n// Default Node.js REPL depth\nvar MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 100kB, as 200kB is max payload size, so half sounds reasonable\nvar MAX_SERIALIZE_EXCEPTION_SIZE = 100 * 1024;\nvar MAX_SERIALIZE_KEYS_LENGTH = 40;\n/** JSDoc */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** JSDoc */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    if (typeof value === 'string') {\n        return string.truncate(value, 40);\n    }\n    else if (type === '[object Object]') {\n        // Node.js REPL notation\n        return '[Object]';\n    }\n    else if (type === '[object Array]') {\n        // Node.js REPL notation\n        return '[Array]';\n    }\n    else {\n        return normalizeValue(value);\n    }\n}\n/** JSDoc */\nfunction serializeObject(value, depth) {\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    if (is.isPlainObject(value)) {\n        var serialized_1 = {};\n        var val_1 = value;\n        Object.keys(val_1).forEach(function (key) {\n            serialized_1[key] = serializeObject(val_1[key], depth - 1);\n        });\n        return serialized_1;\n    }\n    else if (Array.isArray(value)) {\n        var val = value;\n        return val.map(function (v) { return serializeObject(v, depth - 1); });\n    }\n    return serializeValue(value);\n}\nexports.serializeObject = serializeObject;\n/** JSDoc */\nfunction limitObjectDepthToSize(object, depth, maxSize) {\n    if (depth === void 0) { depth = MAX_SERIALIZE_EXCEPTION_DEPTH; }\n    if (maxSize === void 0) { maxSize = MAX_SERIALIZE_EXCEPTION_SIZE; }\n    var serialized = serializeObject(object, depth);\n    if (jsonSize(serialize(serialized)) > maxSize) {\n        return limitObjectDepthToSize(object, depth - 1);\n    }\n    return serialized;\n}\nexports.limitObjectDepthToSize = limitObjectDepthToSize;\n/** JSDoc */\nfunction serializeKeysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = MAX_SERIALIZE_KEYS_LENGTH; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return string.truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return string.truncate(serialized, maxLength);\n    }\n    return '';\n}\nexports.serializeKeysToEventMessage = serializeKeysToEventMessage;\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\n/** JSDoc */\nfunction assign(target) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var to = Object(target);\n    // tslint:disable-next-line\n    for (var i = 0; i < args.length; i++) {\n        var source = args[i];\n        if (source !== null) {\n            for (var nextKey in source) {\n                if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                    to[nextKey] = source[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\nexports.assign = assign;\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof commonjsGlobal !== 'undefined' && value === commonjsGlobal) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    if (value instanceof Date) {\n        return \"[Date] \" + value;\n    }\n    if (value instanceof Error) {\n        return objectifyError(value);\n    }\n    if (is.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (is.isUndefined(value)) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * serializer()\n *\n * Remove circular references,\n * translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * and takes care of Error objects serialization\n */\nfunction serializer(options) {\n    if (options === void 0) { options = { normalize: true }; }\n    var stack = [];\n    var keys = [];\n    /** recursive */\n    function cycleserializer(_key, value) {\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n        return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join('.') + \"]\";\n    }\n    return function (key, value) {\n        if (stack.length > 0) {\n            var thisPos = stack.indexOf(this);\n            if (thisPos === -1) {\n                stack.push(this);\n                keys.push(key);\n            }\n            else {\n                stack.splice(thisPos + 1);\n                keys.splice(thisPos, Infinity, key);\n            }\n            if (stack.indexOf(value) !== -1) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                value = cycleserializer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n        return options.normalize ? normalizeValue(value, key) : value;\n    };\n}\n/**\n * safeNormalize()\n *\n * Creates a copy of the input by applying serializer function on it and parsing it back to unify the data\n */\nfunction safeNormalize(input) {\n    try {\n        return JSON.parse(JSON.stringify(input, serializer({ normalize: true })));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\nexports.safeNormalize = safeNormalize;\n\n});\n\nunwrapExports(object);\nvar object_1 = object.serialize;\nvar object_2 = object.deserialize;\nvar object_3 = object.clone;\nvar object_4 = object.fill;\nvar object_5 = object.urlEncode;\nvar object_6 = object.serializeObject;\nvar object_7 = object.limitObjectDepthToSize;\nvar object_8 = object.serializeKeysToEventMessage;\nvar object_9 = object.assign;\nvar object_10 = object.safeNormalize;\n\n// tslint:disable\r\n/*\r\n * JavaScript MD5\r\n * https://github.com/blueimp/JavaScript-MD5\r\n *\r\n * Copyright 2011, Sebastian Tschan\r\n * https://blueimp.net\r\n *\r\n * Licensed under the MIT license:\r\n * https://opensource.org/licenses/MIT\r\n *\r\n * Based on\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\n/**\r\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n */\r\nfunction safeAdd(x, y) {\r\n    var lsw = (x & 0xffff) + (y & 0xffff);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xffff);\r\n}\r\n/**\r\n * Bitwise rotate a 32-bit number to the left.\r\n */\r\nfunction bitRotateLeft(num, cnt) {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n/**\r\n * These functions implement the four basic operations the algorithm uses.\r\n */\r\nfunction md5cmn(q, a, b, x, s, t) {\r\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\r\n}\r\nfunction md5ff(a, b, c, d, x, s, t) {\r\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t);\r\n}\r\nfunction md5gg(a, b, c, d, x, s, t) {\r\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\r\n}\r\nfunction md5hh(a, b, c, d, x, s, t) {\r\n    return md5cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\nfunction md5ii(a, b, c, d, x, s, t) {\r\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t);\r\n}\r\n/**\r\n * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n */\r\nfunction binlMD5(x, len) {\r\n    /** append padding */\r\n    x[len >> 5] |= 0x80 << len % 32;\r\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n    var i;\r\n    var olda;\r\n    var oldb;\r\n    var oldc;\r\n    var oldd;\r\n    var a = 1732584193;\r\n    var b = -271733879;\r\n    var c = -1732584194;\r\n    var d = 271733878;\r\n    for (i = 0; i < x.length; i += 16) {\r\n        olda = a;\r\n        oldb = b;\r\n        oldc = c;\r\n        oldd = d;\r\n        a = md5ff(a, b, c, d, x[i], 7, -680876936);\r\n        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\r\n        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n        b = md5gg(b, c, d, a, x[i], 20, -373897302);\r\n        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\r\n        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n        d = md5hh(d, a, b, c, x[i], 11, -358537222);\r\n        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n        a = md5ii(a, b, c, d, x[i], 6, -198630844);\r\n        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n        a = safeAdd(a, olda);\r\n        b = safeAdd(b, oldb);\r\n        c = safeAdd(c, oldc);\r\n        d = safeAdd(d, oldd);\r\n    }\r\n    return [a, b, c, d];\r\n}\r\n/**\r\n * Convert an array of little-endian words to a string\r\n */\r\nfunction binl2rstr(input) {\r\n    var i;\r\n    var output = '';\r\n    var length32 = input.length * 32;\r\n    for (i = 0; i < length32; i += 8) {\r\n        output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Convert a raw string to an array of little-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\nfunction rstr2binl(input) {\r\n    var i;\r\n    var output = [];\r\n    output[(input.length >> 2) - 1] = undefined;\r\n    for (i = 0; i < output.length; i += 1) {\r\n        output[i] = 0;\r\n    }\r\n    var length8 = input.length * 8;\r\n    for (i = 0; i < length8; i += 8) {\r\n        output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Calculate the MD5 of a raw string\r\n */\r\nfunction rstrMD5(s) {\r\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\r\n}\r\n/**\r\n * Calculate the HMAC-MD5, of a key and some data (raw strings)\r\n */\r\nfunction rstrHMACMD5(key, data) {\r\n    var i;\r\n    var bkey = rstr2binl(key);\r\n    var ipad = [];\r\n    var opad = [];\r\n    var hash;\r\n    ipad[15] = opad[15] = undefined;\r\n    if (bkey.length > 16) {\r\n        bkey = binlMD5(bkey, key.length * 8);\r\n    }\r\n    for (i = 0; i < 16; i += 1) {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5c5c5c5c;\r\n    }\r\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\r\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\r\n}\r\n/**\r\n * Convert a raw string to a hex string\r\n */\r\nfunction rstr2hex(input) {\r\n    var hexTab = '0123456789abcdef';\r\n    var output = '';\r\n    var x;\r\n    var i;\r\n    for (i = 0; i < input.length; i += 1) {\r\n        x = input.charCodeAt(i);\r\n        output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Encode a string as utf-8\r\n */\r\nfunction str2rstrUTF8(input) {\r\n    return unescape(encodeURIComponent(input));\r\n}\r\n/*\r\n * Take string arguments and return either raw or hex encoded strings\r\n */\r\nfunction rawMD5(s) {\r\n    return rstrMD5(str2rstrUTF8(s));\r\n}\r\nfunction hexMD5(s) {\r\n    return rstr2hex(rawMD5(s));\r\n}\r\nfunction rawHMACMD5(k, d) {\r\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\r\n}\r\nfunction hexHMACMD5(k, d) {\r\n    return rstr2hex(rawHMACMD5(k, d));\r\n}\r\nfunction md5(string, key, raw) {\r\n    if (!key) {\r\n        if (!raw) {\r\n            return hexMD5(string);\r\n        }\r\n        return rawMD5(string);\r\n    }\r\n    if (!raw) {\r\n        return hexHMACMD5(key, string);\r\n    }\r\n    return rawHMACMD5(key, string);\r\n}\n\n// tslint:disable\r\n/**\r\n * TraceKit - Cross brower stack traces\r\n *\r\n * This was originally forked from github.com/occ/TraceKit, but has since been\r\n * largely modified and is now maintained as part of Sentry JS SDK.\r\n *\r\n * NOTE: Last merge with upstream repository\r\n * Jul 11,2018 - #f03357c\r\n *\r\n * https://github.com/csnover/TraceKit\r\n * @license MIT\r\n * @namespace TraceKit\r\n */\r\nvar window$1 = misc_3();\r\nvar TraceKit = {\r\n    wrap: function () { return function () { }; },\r\n    report: false,\r\n    collectWindowErrors: false,\r\n    computeStackTrace: false,\r\n    remoteFetching: false,\r\n    linesOfContext: false,\r\n    extendToAsynchronousCallbacks: false,\r\n};\r\n// var TraceKit: TraceKitInterface = {};\r\n// var TraceKit = {};\r\n// global reference to slice\r\nvar _slice = [].slice;\r\nvar UNKNOWN_FUNCTION = '?';\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\r\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\r\n/**\r\n * A better form of hasOwnProperty<br/>\r\n * Example: `_has(MainHostObject, property) === true/false`\r\n *\r\n * @param {Object} object to check property\r\n * @param {string} key to check\r\n * @return {Boolean} true if the object has the key and it is not inherited\r\n */\r\nfunction _has(object, key) {\r\n    return Object.prototype.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * A safe form of location.href<br/>\r\n *\r\n * @return {string} location.href\r\n */\r\nfunction getLocationHref() {\r\n    if (typeof document === 'undefined' || document.location == null)\r\n        return '';\r\n    return document.location.href;\r\n}\r\n/**\r\n * A safe form of location.origin<br/>\r\n *\r\n * @return {string} location.origin\r\n */\r\nfunction getLocationOrigin() {\r\n    if (typeof document === 'undefined' || document.location == null)\r\n        return '';\r\n    // Oh dear IE10...\r\n    if (!document.location.origin) {\r\n        return (document.location.protocol +\r\n            '//' +\r\n            document.location.hostname +\r\n            (document.location.port ? ':' + document.location.port : ''));\r\n    }\r\n    return document.location.origin;\r\n}\r\n/**\r\n * Wrap any function in a TraceKit reporter<br/>\r\n * Example: `func = TraceKit.wrap(func);`\r\n *\r\n * @param {Function} func Function to be wrapped\r\n * @return {Function} The wrapped func\r\n * @memberof TraceKit\r\n */\r\nTraceKit.wrap = function traceKitWrapper(func) {\r\n    function wrapped() {\r\n        try {\r\n            // @ts-ignore\r\n            return func.apply(this, arguments);\r\n        }\r\n        catch (e) {\r\n            TraceKit.report(e);\r\n            throw e;\r\n        }\r\n    }\r\n    return wrapped;\r\n};\r\n/**\r\n * Cross-browser processing of unhandled exceptions\r\n *\r\n * Syntax:\r\n * ```js\r\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\r\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\r\n *   TraceKit.report(exception)\r\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\r\n * ```\r\n *\r\n * Supports:\r\n *   - Firefox: full stack trace with line numbers, plus column number\r\n *     on top frame; column number is not guaranteed\r\n *   - Opera: full stack trace with line and column numbers\r\n *   - Chrome: full stack trace with line and column numbers\r\n *   - Safari: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *   - IE: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *\r\n * In theory, TraceKit should work on all of the following versions:\r\n *   - IE5.5+ (only 8.0 tested)\r\n *   - Firefox 0.9+ (only 3.5+ tested)\r\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\r\n *     Exceptions Have Stacktrace to be enabled in opera:config)\r\n *   - Safari 3+ (only 4+ tested)\r\n *   - Chrome 1+ (only 5+ tested)\r\n *   - Konqueror 3.5+ (untested)\r\n *\r\n * Requires TraceKit.computeStackTrace.\r\n *\r\n * Tries to catch all unhandled exceptions and report them to the\r\n * subscribed handlers. Please note that TraceKit.report will rethrow the\r\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\r\n * If the exception does not reach the top of the browser, you will only\r\n * get a stack trace from the point where TraceKit.report was called.\r\n *\r\n * Handlers receive a TraceKit.StackTrace object as described in the\r\n * TraceKit.computeStackTrace docs.\r\n *\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.report = (function reportModuleWrapper() {\r\n    var handlers = [], lastException = null, lastExceptionStack = null;\r\n    /**\r\n     * Add a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function subscribe(handler) {\r\n        // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\r\n        // So user can choose which one he wants to attach\r\n        // installGlobalHandler();\r\n        // installGlobalUnhandledRejectionHandler();\r\n        handlers.push(handler);\r\n    }\r\n    /**\r\n     * Remove a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function unsubscribe(handler) {\r\n        for (var i = handlers.length - 1; i >= 0; --i) {\r\n            if (handlers[i] === handler) {\r\n                handlers.splice(i, 1);\r\n            }\r\n        }\r\n        if (handlers.length === 0) {\r\n            uninstallGlobalHandler();\r\n            uninstallGlobalUnhandledRejectionHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Dispatch stack information to all handlers.\r\n     * @param {TraceKit.StackTrace} stack\r\n     * @param {boolean} isWindowError Is this a top-level window error?\r\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an error occurs while calling an handler.\r\n     */\r\n    function notifyHandlers(stack, isWindowError, error) {\r\n        var exception = null;\r\n        if (isWindowError && !TraceKit.collectWindowErrors) {\r\n            return;\r\n        }\r\n        for (var i in handlers) {\r\n            if (_has(handlers, i)) {\r\n                try {\r\n                    handlers[i](stack, isWindowError, error);\r\n                }\r\n                catch (inner) {\r\n                    exception = inner;\r\n                }\r\n            }\r\n        }\r\n        if (exception) {\r\n            throw exception;\r\n        }\r\n    }\r\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\r\n    var _oldOnunhandledrejectionHandler, _onUnhandledRejectionHandlerInstalled;\r\n    /**\r\n     * Ensures all global unhandled exceptions are recorded.\r\n     * Supported by Gecko and IE.\r\n     * @param {string} message Error message.\r\n     * @param {string} url URL of script that generated the exception.\r\n     * @param {(number|string)} lineNo The line number at which the error occurred.\r\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\r\n     * @param {Error=} errorObj The actual Error object.\r\n     * @memberof TraceKit.report\r\n     */\r\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\r\n        var stack = null;\r\n        // If 'errorObj' is ErrorEvent, get real Error from inside\r\n        errorObj = is_2(errorObj) ? errorObj.error : errorObj;\r\n        // If 'message' is ErrorEvent, get real message from inside\r\n        message = is_2(message) ? message.message : message;\r\n        if (lastExceptionStack) {\r\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\r\n            processLastException();\r\n        }\r\n        else if (errorObj && is_1(errorObj)) {\r\n            stack = TraceKit.computeStackTrace(errorObj);\r\n            stack.mechanism = 'onerror';\r\n            notifyHandlers(stack, true, errorObj);\r\n        }\r\n        else {\r\n            var location = {\r\n                url: url,\r\n                line: lineNo,\r\n                column: columnNo,\r\n            };\r\n            var name;\r\n            var msg = message; // must be new var or will modify original `arguments`\r\n            if ({}.toString.call(message) === '[object String]') {\r\n                var groups = message.match(ERROR_TYPES_RE);\r\n                if (groups) {\r\n                    name = groups[1];\r\n                    msg = groups[2];\r\n                }\r\n            }\r\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\r\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\r\n            stack = {\r\n                name: name,\r\n                message: msg,\r\n                mode: 'onerror',\r\n                mechanism: 'onerror',\r\n                stack: [\r\n                    tslib_1.__assign({}, location, { \r\n                        // Firefox sometimes doesn't return url correctly and this is an old behavior\r\n                        // that I prefer to port here as well.\r\n                        // It can be altered only here, as previously it's using `location.url` for other things — Kamil\r\n                        url: location.url || getLocationHref() }),\r\n                ],\r\n            };\r\n            notifyHandlers(stack, true, null);\r\n        }\r\n        if (_oldOnerrorHandler) {\r\n            // @ts-ignore\r\n            return _oldOnerrorHandler.apply(this, arguments);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Ensures all unhandled rejections are recorded.\r\n     * @param {PromiseRejectionEvent} e event.\r\n     * @memberof TraceKit.report\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\r\n     */\r\n    function traceKitWindowOnUnhandledRejection(e) {\r\n        var err = (e && (e.detail ? e.detail.reason : e.reason)) || e;\r\n        var stack = TraceKit.computeStackTrace(err);\r\n        stack.mechanism = 'onunhandledrejection';\r\n        notifyHandlers(stack, true, err);\r\n    }\r\n    /**\r\n     * Install a global onerror handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function installGlobalHandler() {\r\n        if (_onErrorHandlerInstalled === true) {\r\n            return;\r\n        }\r\n        _oldOnerrorHandler = window$1.onerror;\r\n        window$1.onerror = traceKitWindowOnError;\r\n        _onErrorHandlerInstalled = true;\r\n    }\r\n    /**\r\n     * Uninstall the global onerror handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function uninstallGlobalHandler() {\r\n        if (_onErrorHandlerInstalled) {\r\n            window$1.onerror = _oldOnerrorHandler;\r\n            _onErrorHandlerInstalled = false;\r\n        }\r\n    }\r\n    /**\r\n     * Install a global onunhandledrejection handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function installGlobalUnhandledRejectionHandler() {\r\n        if (_onUnhandledRejectionHandlerInstalled === true) {\r\n            return;\r\n        }\r\n        _oldOnunhandledrejectionHandler = window$1.onunhandledrejection;\r\n        window$1.onunhandledrejection = traceKitWindowOnUnhandledRejection;\r\n        _onUnhandledRejectionHandlerInstalled = true;\r\n    }\r\n    /**\r\n     * Uninstall the global onunhandledrejection handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function uninstallGlobalUnhandledRejectionHandler() {\r\n        if (_onUnhandledRejectionHandlerInstalled) {\r\n            window$1.onerror = _oldOnunhandledrejectionHandler;\r\n            _onUnhandledRejectionHandlerInstalled = false;\r\n        }\r\n    }\r\n    /**\r\n     * Process the most recent exception\r\n     * @memberof TraceKit.report\r\n     */\r\n    function processLastException() {\r\n        var _lastExceptionStack = lastExceptionStack, _lastException = lastException;\r\n        lastExceptionStack = null;\r\n        lastException = null;\r\n        notifyHandlers(_lastExceptionStack, false, _lastException);\r\n    }\r\n    /**\r\n     * Reports an unhandled Error to TraceKit.\r\n     * @param {Error} ex\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\r\n     */\r\n    function report(ex) {\r\n        if (lastExceptionStack) {\r\n            if (lastException === ex) {\r\n                return; // already caught by an inner catch block, ignore\r\n            }\r\n            else {\r\n                processLastException();\r\n            }\r\n        }\r\n        var stack = TraceKit.computeStackTrace(ex);\r\n        lastExceptionStack = stack;\r\n        lastException = ex;\r\n        // If the stack trace is incomplete, wait for 2 seconds for\r\n        // slow slow IE to see if onerror occurs or not before reporting\r\n        // this exception; otherwise, we will end up with an incomplete\r\n        // stack trace\r\n        setTimeout(function () {\r\n            if (lastException === ex) {\r\n                processLastException();\r\n            }\r\n        }, stack.incomplete ? 2000 : 0);\r\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\r\n    }\r\n    report.subscribe = subscribe;\r\n    report.unsubscribe = unsubscribe;\r\n    report.installGlobalHandler = installGlobalHandler;\r\n    report.installGlobalUnhandledRejectionHandler = installGlobalUnhandledRejectionHandler;\r\n    return report;\r\n})();\r\n/**\r\n * An object representing a single stack frame.\r\n * @typedef {Object} StackFrame\r\n * @property {string} url The JavaScript or HTML file URL.\r\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\r\n * @property {string[]?} args The arguments passed to the function, if known.\r\n * @property {number=} line The line number, if known.\r\n * @property {number=} column The column number, if known.\r\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\r\n * @memberof TraceKit\r\n */\r\n/**\r\n * An object representing a JavaScript stack trace.\r\n * @typedef {Object} StackTrace\r\n * @property {string} name The name of the thrown exception.\r\n * @property {string} message The exception error message.\r\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\r\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\r\n * @memberof TraceKit\r\n */\r\n/**\r\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\r\n *\r\n * Syntax:\r\n *   ```js\r\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\r\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\r\n *   ```\r\n *\r\n * Supports:\r\n *   - Firefox:  full stack trace with line numbers and unreliable column\r\n *               number on top frame\r\n *   - Opera 10: full stack trace with line and column numbers\r\n *   - Opera 9-: full stack trace with line numbers\r\n *   - Chrome:   full stack trace with line and column numbers\r\n *   - Safari:   line and column number for the topmost stacktrace element\r\n *               only\r\n *   - IE:       no line numbers whatsoever\r\n *\r\n * Tries to guess names of anonymous functions by looking for assignments\r\n * in the source code. In IE and Safari, we have to guess source file names\r\n * by searching for function bodies inside all page scripts. This will not\r\n * work for scripts that are loaded cross-domain.\r\n * Here be dragons: some function names may be guessed incorrectly, and\r\n * duplicate functions may be mismatched.\r\n *\r\n * TraceKit.computeStackTrace should only be used for tracing purposes.\r\n * Logging of unhandled exceptions should be done with TraceKit.report,\r\n * which builds on top of TraceKit.computeStackTrace and provides better\r\n * IE support by utilizing the window.onerror event to retrieve information\r\n * about the top of the stack.\r\n *\r\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\r\n * so computeStackTrace instead walks its *own* chain of callers.\r\n * This means that:\r\n *  * in Safari, some methods may be missing from the stack trace;\r\n *  * in IE, the topmost function in the stack trace will always be the\r\n *    caller of computeStackTrace.\r\n *\r\n * This is okay for tracing (because you are likely to be calling\r\n * computeStackTrace from the function you want to be the topmost element\r\n * of the stack trace anyway), but not okay for logging unhandled\r\n * exceptions (because your catch block will likely be far away from the\r\n * inner function that actually caused the exception).\r\n *\r\n * Tracing example:\r\n *  ```js\r\n *     function trace(message) {\r\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\r\n *         var data = message + \"\\n\";\r\n *         for(var i in stackInfo.stack) {\r\n *             var item = stackInfo.stack[i];\r\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\r\n *         }\r\n *         if (window.console)\r\n *             console.info(data);\r\n *         else\r\n *             alert(data);\r\n *     }\r\n * ```\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\r\n    var debug = false, sourceCache = {};\r\n    /**\r\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\r\n     * to look up anonymous function names.\r\n     * @param {string} url URL of source code.\r\n     * @return {string} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function loadSource(url) {\r\n        if (!TraceKit.remoteFetching) {\r\n            //Only attempt request if remoteFetching is on.\r\n            return '';\r\n        }\r\n        try {\r\n            var getXHR = function () {\r\n                try {\r\n                    return new window$1.XMLHttpRequest();\r\n                }\r\n                catch (e) {\r\n                    // explicitly bubble up the exception if not found\r\n                    return new window$1.ActiveXObject('Microsoft.XMLHTTP');\r\n                }\r\n            };\r\n            var request = getXHR();\r\n            request.open('GET', url, false);\r\n            request.send('');\r\n            return request.responseText;\r\n        }\r\n        catch (e) {\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves source code from the source code cache.\r\n     * @param {string} url URL of source code.\r\n     * @return {Array.<string>} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function getSource(url) {\r\n        if (typeof url !== 'string') {\r\n            return [];\r\n        }\r\n        if (!_has(sourceCache, url)) {\r\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\r\n            // cross-domain errors will be triggered.\r\n            /*\r\n                        Regex matches:\r\n                        0 - Full Url\r\n                        1 - Protocol\r\n                        2 - Domain\r\n                        3 - Port (Useful for internal applications)\r\n                        4 - Path\r\n                    */\r\n            var source = '';\r\n            var domain = '';\r\n            try {\r\n                domain = window$1.document.domain;\r\n            }\r\n            catch (e) { }\r\n            var match = /(.*)\\:\\/\\/([^:\\/]+)([:\\d]*)\\/{0,1}([\\s\\S]*)/.exec(url);\r\n            if (match && match[2] === domain) {\r\n                source = loadSource(url);\r\n            }\r\n            sourceCache[url] = source ? source.split('\\n') : [];\r\n        }\r\n        return sourceCache[url];\r\n    }\r\n    /**\r\n     * Tries to use an externally loaded copy of source code to determine\r\n     * the name of a function by looking at the name of the variable it was\r\n     * assigned to, if any.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} lineNo Line number in source code.\r\n     * @return {string} The function name, if discoverable.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function guessFunctionName(url, lineNo) {\r\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/, reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/, line = '', maxLines = 10, source = getSource(url), m;\r\n        if (!source.length) {\r\n            return UNKNOWN_FUNCTION;\r\n        }\r\n        // Walk backwards from the first line in the function until we find the line which\r\n        // matches the pattern above, which is the function definition\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            line = source[lineNo - i] + line;\r\n            if (!is_5(line)) {\r\n                if ((m = reGuessFunction.exec(line))) {\r\n                    return m[1];\r\n                }\r\n                else if ((m = reFunctionArgNames.exec(line))) {\r\n                    return m[1];\r\n                }\r\n            }\r\n        }\r\n        return UNKNOWN_FUNCTION;\r\n    }\r\n    /**\r\n     * Retrieves the surrounding lines from where an exception occurred.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} line Line number in source code to center around for context.\r\n     * @return {?Array.<string>} Lines of source code.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function gatherContext(url, line) {\r\n        var source = getSource(url);\r\n        if (!source.length) {\r\n            return null;\r\n        }\r\n        var context = [], \r\n        // linesBefore & linesAfter are inclusive with the offending line.\r\n        // if linesOfContext is even, there will be one extra line\r\n        //   *before* the offending line.\r\n        linesBefore = Math.floor(TraceKit.linesOfContext / 2), \r\n        // Add one extra line if linesOfContext is odd\r\n        linesAfter = linesBefore + (TraceKit.linesOfContext % 2), start = Math.max(0, line - linesBefore - 1), end = Math.min(source.length, line + linesAfter - 1);\r\n        line -= 1; // convert to 0-based index\r\n        for (var i = start; i < end; ++i) {\r\n            if (!is_5(source[i])) {\r\n                context.push(source[i]);\r\n            }\r\n        }\r\n        return context.length > 0 ? context : null;\r\n    }\r\n    /**\r\n     * Escapes special characters, except for whitespace, in a string to be\r\n     * used inside a regular expression as a string literal.\r\n     * @param {string} text The string.\r\n     * @return {string} The escaped string literal.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeRegExp(text) {\r\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\r\n    }\r\n    /**\r\n     * Escapes special characters in a string to be used inside a regular\r\n     * expression as a string literal. Also ensures that HTML entities will\r\n     * be matched the same as their literal friends.\r\n     * @param {string} body The string.\r\n     * @return {string} The escaped string.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\r\n        return escapeRegExp(body)\r\n            .replace('<', '(?:<|&lt;)')\r\n            .replace('>', '(?:>|&gt;)')\r\n            .replace('&', '(?:&|&amp;)')\r\n            .replace('\"', '(?:\"|&quot;)')\r\n            .replace(/\\s+/g, '\\\\s+');\r\n    }\r\n    /**\r\n     * Determines where a code fragment occurs in the source code.\r\n     * @param {RegExp} re The function definition.\r\n     * @param {Array.<string>} urls A list of URLs to search.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInUrls(re, urls) {\r\n        var source, m;\r\n        for (var i = 0, j = urls.length; i < j; ++i) {\r\n            if ((source = getSource(urls[i])).length) {\r\n                source = source.join('\\n');\r\n                if ((m = re.exec(source))) {\r\n                    return {\r\n                        url: urls[i],\r\n                        line: source.substring(0, m.index).split('\\n').length,\r\n                        column: m.index - source.lastIndexOf('\\n', m.index) - 1,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Determines at which column a code fragment occurs on a line of the\r\n     * source code.\r\n     * @param {string} fragment The code fragment.\r\n     * @param {string} url The URL to search.\r\n     * @param {(string|number)} line The line number to examine.\r\n     * @return {?number} The column number.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInLine(fragment, url, line) {\r\n        var source = getSource(url), re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'), m;\r\n        line -= 1;\r\n        if (source && source.length > line && (m = re.exec(source[line]))) {\r\n            return m.index;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Determines where a function was defined within the source code.\r\n     * @param {(Function|string)} func A function reference or serialized\r\n     * function definition.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceByFunctionBody(func) {\r\n        if (is_5(window$1 && window$1.document)) {\r\n            return;\r\n        }\r\n        var urls = [getLocationHref()], scripts = window$1.document.getElementsByTagName('script'), body, code = '' + func, codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/, eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/, re, parts, result;\r\n        for (var i = 0; i < scripts.length; ++i) {\r\n            var script = scripts[i];\r\n            if (script.src) {\r\n                urls.push(script.src);\r\n            }\r\n        }\r\n        if (!(parts = codeRE.exec(code))) {\r\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\r\n        }\r\n        // not sure if this is really necessary, but I don’t have a test\r\n        // corpus large enough to confirm that and it was in the original.\r\n        else {\r\n            var name = parts[1] ? '\\\\s+' + parts[1] : '', args = parts[2].split(',').join('\\\\s*,\\\\s*');\r\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\r\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\r\n        }\r\n        // look for a normal function definition\r\n        if ((result = findSourceInUrls(re, urls))) {\r\n            return result;\r\n        }\r\n        // look for an old-school event handler function\r\n        if ((parts = eventRE.exec(code))) {\r\n            var event = parts[1];\r\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\r\n            // look for a function defined in HTML as an onXXX handler\r\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\r\n            if ((result = findSourceInUrls(re, urls[0]))) {\r\n                return result;\r\n            }\r\n            // look for ???\r\n            re = new RegExp(body);\r\n            if ((result = findSourceInUrls(re, urls))) {\r\n                return result;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    // Contents of Exception in various browsers.\r\n    //\r\n    // SAFARI:\r\n    // ex.message = Can't find variable: qq\r\n    // ex.line = 59\r\n    // ex.sourceId = 580238192\r\n    // ex.sourceURL = http://...\r\n    // ex.expressionBeginOffset = 96\r\n    // ex.expressionCaretOffset = 98\r\n    // ex.expressionEndOffset = 98\r\n    // ex.name = ReferenceError\r\n    //\r\n    // FIREFOX:\r\n    // ex.message = qq is not defined\r\n    // ex.fileName = http://...\r\n    // ex.lineNumber = 59\r\n    // ex.columnNumber = 69\r\n    // ex.stack = ...stack trace... (see the example below)\r\n    // ex.name = ReferenceError\r\n    //\r\n    // CHROME:\r\n    // ex.message = qq is not defined\r\n    // ex.name = ReferenceError\r\n    // ex.type = not_defined\r\n    // ex.arguments = ['aa']\r\n    // ex.stack = ...stack trace...\r\n    //\r\n    // INTERNET EXPLORER:\r\n    // ex.message = ...\r\n    // ex.name = ReferenceError\r\n    //\r\n    // OPERA:\r\n    // ex.message = ...message... (see the example below)\r\n    // ex.name = ReferenceError\r\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\r\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\r\n    /**\r\n     * Computes stack trace information from the stack property.\r\n     * Chrome and Gecko use this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStackProp(ex) {\r\n        if (!ex.stack) {\r\n            return null;\r\n        }\r\n        var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i, gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i, winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i, \r\n        // Used to additionally parse URL/line/column from eval frames\r\n        isEval, geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i, chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/, lines = ex.stack.split('\\n'), stack = [], submatch, parts, element, reference = /^(.*) is undefined$/.exec(ex.message);\r\n        for (var i = 0, j = lines.length; i < j; ++i) {\r\n            if ((parts = chrome.exec(lines[i]))) {\r\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\r\n                isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\r\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\r\n                    // throw out eval line/column and use top-most line/column number\r\n                    parts[2] = submatch[1]; // url\r\n                    // NOTE: It's messing out our integration tests in Karma, let's see if we can live with it – Kamil\r\n                    // parts[3] = submatch[2]; // line\r\n                    // parts[4] = submatch[3]; // column\r\n                }\r\n                element = {\r\n                    url: !isNative ? parts[2] : null,\r\n                    func: parts[1] || UNKNOWN_FUNCTION,\r\n                    args: isNative ? [parts[2]] : [],\r\n                    line: parts[3] ? +parts[3] : null,\r\n                    column: parts[4] ? +parts[4] : null,\r\n                };\r\n            }\r\n            else if ((parts = winjs.exec(lines[i]))) {\r\n                element = {\r\n                    url: parts[2],\r\n                    func: parts[1] || UNKNOWN_FUNCTION,\r\n                    args: [],\r\n                    line: +parts[3],\r\n                    column: parts[4] ? +parts[4] : null,\r\n                };\r\n            }\r\n            else if ((parts = gecko.exec(lines[i]))) {\r\n                isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\r\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\r\n                    // throw out eval line/column and use top-most line number\r\n                    parts[3] = submatch[1];\r\n                    // NOTE: It's messing out our integration tests in Karma, let's see if we can live with it – Kamil\r\n                    // parts[4] = submatch[2];\r\n                    // parts[5] = null; // no column when eval\r\n                }\r\n                else if (i === 0 && !parts[5] && !is_5(ex.columnNumber)) {\r\n                    // FireFox uses this awesome columnNumber property for its top frame\r\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\r\n                    // so adding 1\r\n                    // NOTE: this hack doesn't work if top-most frame is eval\r\n                    stack[0].column = ex.columnNumber + 1;\r\n                }\r\n                element = {\r\n                    url: parts[3],\r\n                    func: parts[1] || UNKNOWN_FUNCTION,\r\n                    args: parts[2] ? parts[2].split(',') : [],\r\n                    line: parts[4] ? +parts[4] : null,\r\n                    column: parts[5] ? +parts[5] : null,\r\n                };\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n            if (!element.func && element.line) {\r\n                element.func = guessFunctionName(element.url, element.line);\r\n            }\r\n            if (TraceKit.remoteFetching && element.url && element.url.substr(0, 5) === 'blob:') {\r\n                // Special case for handling JavaScript loaded into a blob.\r\n                // We use a synchronous AJAX request here as a blob is already in\r\n                // memory - it's not making a network request.  This will generate a warning\r\n                // in the browser console, but there has already been an error so that's not\r\n                // that much of an issue.\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open('GET', element.url, false);\r\n                xhr.send('');\r\n                // If we failed to download the source, skip this patch\r\n                if (xhr.status === 200) {\r\n                    var source = xhr.responseText || '';\r\n                    // We trim the source down to the last 300 characters as sourceMappingURL is always at the end of the file.\r\n                    // Why 300? To be in line with: https://github.com/getsentry/sentry/blob/4af29e8f2350e20c28a6933354e4f42437b4ba42/src/sentry/lang/javascript/processor.py#L164-L175\r\n                    source = source.slice(-300);\r\n                    // Now we dig out the source map URL\r\n                    var sourceMaps = source.match(/\\/\\/# sourceMappingURL=(.*)$/);\r\n                    // If we don't find a source map comment or we find more than one, continue on to the next element.\r\n                    if (sourceMaps) {\r\n                        var sourceMapAddress = sourceMaps[1];\r\n                        // Now we check to see if it's a relative URL.\r\n                        // If it is, convert it to an absolute one.\r\n                        if (sourceMapAddress.charAt(0) === '~') {\r\n                            sourceMapAddress = getLocationOrigin() + sourceMapAddress.slice(1);\r\n                        }\r\n                        // Now we strip the '.map' off of the end of the URL and update the\r\n                        // element so that Sentry can match the map to the blob.\r\n                        element.url = sourceMapAddress.slice(0, -4);\r\n                    }\r\n                }\r\n            }\r\n            element.context = element.line ? gatherContext(element.url, element.line) : null;\r\n            stack.push(element);\r\n        }\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\r\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\r\n        }\r\n        return {\r\n            mode: 'stack',\r\n            name: ex.name,\r\n            message: ex.message,\r\n            stack: stack,\r\n        };\r\n    }\r\n    /**\r\n     * Computes stack trace information from the stacktrace property.\r\n     * Opera 10+ uses this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStacktraceProp(ex) {\r\n        // Access and store the stacktrace property before doing ANYTHING\r\n        // else to it because Opera is not very good at providing it\r\n        // reliably in other circumstances.\r\n        var stacktrace = ex.stacktrace;\r\n        if (!stacktrace) {\r\n            return;\r\n        }\r\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i, opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i, lines = stacktrace.split('\\n'), stack = [], parts;\r\n        for (var line = 0; line < lines.length; line += 2) {\r\n            var element = null;\r\n            if ((parts = opera10Regex.exec(lines[line]))) {\r\n                element = {\r\n                    url: parts[2],\r\n                    line: +parts[1],\r\n                    column: null,\r\n                    func: parts[3],\r\n                    args: [],\r\n                };\r\n            }\r\n            else if ((parts = opera11Regex.exec(lines[line]))) {\r\n                element = {\r\n                    url: parts[6],\r\n                    line: +parts[1],\r\n                    column: +parts[2],\r\n                    func: parts[3] || parts[4],\r\n                    args: parts[5] ? parts[5].split(',') : [],\r\n                };\r\n            }\r\n            if (element) {\r\n                if (!element.func && element.line) {\r\n                    element.func = guessFunctionName(element.url, element.line);\r\n                }\r\n                if (element.line) {\r\n                    try {\r\n                        element.context = gatherContext(element.url, element.line);\r\n                    }\r\n                    catch (exc) { }\r\n                }\r\n                if (!element.context) {\r\n                    element.context = [lines[line + 1]];\r\n                }\r\n                stack.push(element);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n        return {\r\n            mode: 'stacktrace',\r\n            name: ex.name,\r\n            message: ex.message,\r\n            stack: stack,\r\n        };\r\n    }\r\n    /**\r\n     * NOT TESTED.\r\n     * Computes stack trace information from an error message that includes\r\n     * the stack trace.\r\n     * Opera 9 and earlier use this method if the option to show stack\r\n     * traces is turned on in opera:config.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\r\n        // TODO: Clean this function up\r\n        // Opera includes a stack trace into the exception message. An example is:\r\n        //\r\n        // Statement on line 3: Undefined variable: undefinedFunc\r\n        // Backtrace:\r\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\r\n        //         undefinedFunc(a);\r\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\r\n        //           zzz(x, y, z);\r\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\r\n        //           yyy(a, a, a);\r\n        //   Line 1 of function script\r\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\r\n        //   ...\r\n        var lines = ex.message.split('\\n');\r\n        if (lines.length < 4) {\r\n            return null;\r\n        }\r\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i, stack = [], scripts = window$1 && window$1.document && window$1.document.getElementsByTagName('script'), inlineScriptBlocks = [], parts;\r\n        for (var s in scripts) {\r\n            if (_has(scripts, s) && !scripts[s].src) {\r\n                inlineScriptBlocks.push(scripts[s]);\r\n            }\r\n        }\r\n        for (var line = 2; line < lines.length; line += 2) {\r\n            var item = null;\r\n            if ((parts = lineRE1.exec(lines[line]))) {\r\n                item = {\r\n                    url: parts[2],\r\n                    func: parts[3],\r\n                    args: [],\r\n                    line: +parts[1],\r\n                    column: null,\r\n                };\r\n            }\r\n            else if ((parts = lineRE2.exec(lines[line]))) {\r\n                item = {\r\n                    url: parts[3],\r\n                    func: parts[4],\r\n                    args: [],\r\n                    line: +parts[1],\r\n                    column: null,\r\n                };\r\n                var relativeLine = +parts[1]; // relative to the start of the <SCRIPT> block\r\n                var script = inlineScriptBlocks[parts[2] - 1];\r\n                if (script) {\r\n                    var source = getSource(item.url);\r\n                    if (source) {\r\n                        source = source.join('\\n');\r\n                        var pos = source.indexOf(script.innerText);\r\n                        if (pos >= 0) {\r\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if ((parts = lineRE3.exec(lines[line]))) {\r\n                var url = getLocationHref().replace(/#.*$/, '');\r\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\r\n                var src = findSourceInUrls(re, [url]);\r\n                item = {\r\n                    url: url,\r\n                    func: '',\r\n                    args: [],\r\n                    line: src ? src.line : parts[1],\r\n                    column: null,\r\n                };\r\n            }\r\n            if (item) {\r\n                if (!item.func) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var context = gatherContext(item.url, item.line);\r\n                var midline = context ? context[Math.floor(context.length / 2)] : null;\r\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\r\n                    item.context = context;\r\n                }\r\n                else {\r\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\r\n                    item.context = [lines[line + 1]];\r\n                }\r\n                stack.push(item);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null; // could not parse multiline exception message as Opera stack trace\r\n        }\r\n        return {\r\n            mode: 'multiline',\r\n            name: ex.name,\r\n            message: lines[0],\r\n            stack: stack,\r\n        };\r\n    }\r\n    /**\r\n     * Adds information about the first frame to incomplete stack traces.\r\n     * Safari and IE require this to get complete data on the first frame.\r\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\r\n     * one of the compute* methods.\r\n     * @param {string} url The URL of the script that caused an error.\r\n     * @param {(number|string)} lineNo The line number of the script that\r\n     * caused an error.\r\n     * @param {string=} message The error generated by the browser, which\r\n     * hopefully contains the name of the object that caused the error.\r\n     * @return {boolean} Whether or not the stack information was\r\n     * augmented.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\r\n        var initial = {\r\n            url: url,\r\n            line: lineNo,\r\n        };\r\n        if (initial.url && initial.line) {\r\n            stackInfo.incomplete = false;\r\n            if (!initial.func) {\r\n                initial.func = guessFunctionName(initial.url, initial.line);\r\n            }\r\n            if (!initial.context) {\r\n                initial.context = gatherContext(initial.url, initial.line);\r\n            }\r\n            var reference = / '([^']+)' /.exec(message);\r\n            if (reference) {\r\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\r\n            }\r\n            if (stackInfo.stack.length > 0) {\r\n                if (stackInfo.stack[0].url === initial.url) {\r\n                    if (stackInfo.stack[0].line === initial.line) {\r\n                        return false; // already in stack trace\r\n                    }\r\n                    else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\r\n                        stackInfo.stack[0].line = initial.line;\r\n                        stackInfo.stack[0].context = initial.context;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            stackInfo.stack.unshift(initial);\r\n            stackInfo.partial = true;\r\n            return true;\r\n        }\r\n        else {\r\n            stackInfo.incomplete = true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Computes stack trace information by walking the arguments.caller\r\n     * chain at the time the exception occurred. This will cause earlier\r\n     * frames to be missed but is the only way to get any stack trace in\r\n     * Safari and IE. The top frame is restored by\r\n     * {@link augmentStackTraceWithInitialElement}.\r\n     * @param {Error} ex\r\n     * @return {TraceKit.StackTrace=} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\r\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i, stack = [], funcs = {}, recursion = false, parts, item, source;\r\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\r\n            if (curr === computeStackTrace || curr === TraceKit.report) {\r\n                continue;\r\n            }\r\n            item = {\r\n                url: null,\r\n                func: UNKNOWN_FUNCTION,\r\n                args: [],\r\n                line: null,\r\n                column: null,\r\n            };\r\n            if (curr.name) {\r\n                item.func = curr.name;\r\n            }\r\n            else if ((parts = functionName.exec(curr.toString()))) {\r\n                item.func = parts[1];\r\n            }\r\n            if (typeof item.func === 'undefined') {\r\n                try {\r\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\r\n                }\r\n                catch (e) { }\r\n            }\r\n            if ((source = findSourceByFunctionBody(curr))) {\r\n                item.url = source.url;\r\n                item.line = source.line;\r\n                if (item.func === UNKNOWN_FUNCTION) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\r\n                if (reference) {\r\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\r\n                }\r\n            }\r\n            if (funcs['' + curr]) {\r\n                recursion = true;\r\n            }\r\n            else {\r\n                funcs['' + curr] = true;\r\n            }\r\n            stack.push(item);\r\n        }\r\n        if (depth) {\r\n            stack.splice(0, depth);\r\n        }\r\n        var result = {\r\n            mode: 'callers',\r\n            name: ex.name,\r\n            message: ex.message,\r\n            stack: stack,\r\n        };\r\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\r\n        return result;\r\n    }\r\n    /**\r\n     * Computes a stack trace for an exception.\r\n     * @param {Error} ex\r\n     * @param {(string|number)=} depth\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTrace(ex, depth) {\r\n        var stack = null;\r\n        depth = depth == null ? 0 : +depth;\r\n        try {\r\n            // This must be tried first because Opera 10 *destroys*\r\n            // its stacktrace property if you try to access the stack\r\n            // property first!!\r\n            stack = computeStackTraceFromStacktraceProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        try {\r\n            stack = computeStackTraceFromStackProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        try {\r\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        try {\r\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        return {\r\n            name: ex.name,\r\n            message: ex.message,\r\n            mode: 'failed',\r\n        };\r\n    }\r\n    /**\r\n     * Logs a stacktrace starting from the previous call and working down.\r\n     * @param {(number|string)=} depth How many frames deep to trace.\r\n     * @return {TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceOfCaller(depth) {\r\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\r\n        try {\r\n            throw new Error();\r\n        }\r\n        catch (ex) {\r\n            return computeStackTrace(ex, depth + 1);\r\n        }\r\n    }\r\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\r\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\r\n    computeStackTrace.guessFunctionName = guessFunctionName;\r\n    computeStackTrace.gatherContext = gatherContext;\r\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\r\n    computeStackTrace.getSource = getSource;\r\n    return computeStackTrace;\r\n})();\r\n/**\r\n * Extends support for global error handling for asynchronous browser\r\n * functions. Adopted from Closure Library's errorhandler.js\r\n * @memberof TraceKit\r\n */\r\nTraceKit.extendToAsynchronousCallbacks = function () {\r\n    var _helper = function _helper(fnName) {\r\n        var originalFn = window$1[fnName];\r\n        window$1[fnName] = function traceKitAsyncExtension() {\r\n            // Make a copy of the arguments\r\n            var args = _slice.call(arguments);\r\n            var originalCallback = args[0];\r\n            if (typeof originalCallback === 'function') {\r\n                args[0] = TraceKit.wrap(originalCallback);\r\n            }\r\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\r\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\r\n            // can just call the original function directly.\r\n            if (originalFn.apply) {\r\n                return originalFn.apply(this, args);\r\n            }\r\n            else {\r\n                return originalFn(args[0], args[1]);\r\n            }\r\n        };\r\n    };\r\n    _helper('setTimeout');\r\n    _helper('setInterval');\r\n};\r\nTraceKit.remoteFetching = false;\r\nTraceKit.collectWindowErrors = true;\r\nTraceKit.linesOfContext = 11;\r\nvar subscribe = TraceKit.report.subscribe;\r\nvar installGlobalHandler = TraceKit.report.installGlobalHandler;\r\nvar installGlobalUnhandledRejectionHandler = TraceKit.report.installGlobalUnhandledRejectionHandler;\r\nvar computeStackTrace = TraceKit.computeStackTrace;\n\nvar STACKTRACE_LIMIT = 50;\r\n/** JSDoc */\r\nfunction exceptionFromStacktrace(stacktrace) {\r\n    var frames = prepareFramesForEvent(stacktrace.stack);\r\n    var exception = {\r\n        stacktrace: { frames: frames },\r\n        type: stacktrace.name,\r\n        value: stacktrace.message,\r\n    };\r\n    // tslint:disable-next-line:strict-type-predicates\r\n    if (exception.type === undefined && exception.value === '') {\r\n        exception.value = 'Unrecoverable error caught';\r\n    }\r\n    return exception;\r\n}\r\n/** JSDoc */\r\nfunction eventFromPlainObject(exception, syntheticException) {\r\n    var exceptionKeys = Object.keys(exception).sort();\r\n    var event = {\r\n        extra: {\r\n            __serialized__: object_7(exception),\r\n        },\r\n        fingerprint: [md5(exceptionKeys.join(''))],\r\n        message: \"Non-Error exception captured with keys: \" + object_8(exceptionKeys),\r\n    };\r\n    if (syntheticException) {\r\n        var stacktrace = computeStackTrace(syntheticException);\r\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\r\n        event.stacktrace = {\r\n            frames: frames_1,\r\n        };\r\n    }\r\n    return event;\r\n}\r\n/** JSDoc */\r\nfunction eventFromStacktrace(stacktrace) {\r\n    var exception = exceptionFromStacktrace(stacktrace);\r\n    return {\r\n        exception: {\r\n            values: [exception],\r\n        },\r\n    };\r\n}\r\n/** JSDoc */\r\nfunction prepareFramesForEvent(stack) {\r\n    if (!stack || !stack.length) {\r\n        return [];\r\n    }\r\n    var localStack = stack;\r\n    var firstFrameFunction = localStack[0].func || '';\r\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\r\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\r\n    if (string_4(firstFrameFunction, 'captureMessage') || string_4(firstFrameFunction, 'captureException')) {\r\n        localStack = localStack.slice(1);\r\n    }\r\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\r\n    if (string_4(lastFrameFunction, 'sentryWrapped')) {\r\n        localStack = localStack.slice(0, -1);\r\n    }\r\n    // The frame where the crash happened, should be the last entry in the array\r\n    return localStack\r\n        .map(function (frame) { return ({\r\n        colno: frame.column,\r\n        filename: frame.url || localStack[0].url,\r\n        function: frame.func || '?',\r\n        in_app: true,\r\n        lineno: frame.line,\r\n    }); })\r\n        .slice(0, STACKTRACE_LIMIT)\r\n        .reverse();\r\n}\r\n/**\r\n * Adds exception values, type and value to an synthetic Exception.\r\n * @param event The event to modify.\r\n * @param message Message to be added.\r\n */\r\nfunction addExceptionTypeValue(event, message) {\r\n    event.exception = event.exception || {};\r\n    event.exception.values = event.exception.values || [];\r\n    event.exception.values[0] = event.exception.values[0] || {};\r\n    event.exception.values[0].value = event.exception.values[0].value || message;\r\n    event.exception.values[0].type = event.exception.values[0].type || 'Error';\r\n}\n\n/** Base Transport class implementation */\r\nvar BaseTransport = /** @class */ (function () {\r\n    function BaseTransport(options) {\r\n        this.options = options;\r\n        /** A simple buffer holding all requests. */\r\n        this.buffer = new core.PromiseBuffer(30);\r\n        this.url = new core.API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BaseTransport.prototype.sendEvent = function (_) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                throw new core.SentryError('Transport Class has to implement `sendEvent` method');\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BaseTransport.prototype.close = function (timeout) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.buffer.drain(timeout)];\r\n            });\r\n        });\r\n    };\r\n    return BaseTransport;\r\n}());\n\nvar global$1 = misc_3();\r\n/** `fetch` based transport */\r\nvar FetchTransport = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FetchTransport, _super);\r\n    function FetchTransport() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    FetchTransport.prototype.sendEvent = function (body) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var defaultOptions;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                defaultOptions = {\r\n                    body: body,\r\n                    method: 'POST',\r\n                    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\r\n                    // https://caniuse.com/#feat=referrer-policy\r\n                    // It doesn't. And it throw exception instead of ignoring this parameter...\r\n                    // REF: https://github.com/getsentry/raven-js/issues/1233\r\n                    referrerPolicy: (supports_8() ? 'origin' : ''),\r\n                };\r\n                return [2 /*return*/, this.buffer.add(global$1.fetch(this.url, defaultOptions).then(function (response) { return ({\r\n                        status: dist_2.fromHttpCode(response.status),\r\n                    }); }))];\r\n            });\r\n        });\r\n    };\r\n    return FetchTransport;\r\n}(BaseTransport));\n\n/** `XHR` based transport */\r\nvar XHRTransport = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XHRTransport, _super);\r\n    function XHRTransport() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    XHRTransport.prototype.sendEvent = function (body) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.buffer.add(new Promise(function (resolve, reject) {\r\n                        var request = new XMLHttpRequest();\r\n                        request.onreadystatechange = function () {\r\n                            if (request.readyState !== 4) {\r\n                                return;\r\n                            }\r\n                            if (request.status === 200) {\r\n                                resolve({\r\n                                    status: dist_2.fromHttpCode(request.status),\r\n                                });\r\n                            }\r\n                            reject(request);\r\n                        };\r\n                        request.open('POST', _this.url);\r\n                        request.send(body);\r\n                    }))];\r\n            });\r\n        });\r\n    };\r\n    return XHRTransport;\r\n}(BaseTransport));\n\nvar global$2 = misc_3();\r\n/** `sendBeacon` based transport */\r\nvar BeaconTransport = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BeaconTransport, _super);\r\n    function BeaconTransport() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BeaconTransport.prototype.sendEvent = function (body) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                result = global$2.navigator.sendBeacon(this.url, body);\r\n                return [2 /*return*/, this.buffer.add(Promise.resolve({\r\n                        status: result ? dist_2.Success : dist_2.Failed,\r\n                    }))];\r\n            });\r\n        });\r\n    };\r\n    return BeaconTransport;\r\n}(BaseTransport));\n\n\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n\tBaseTransport: BaseTransport,\n\tFetchTransport: FetchTransport,\n\tXHRTransport: XHRTransport,\n\tBeaconTransport: BeaconTransport\n});\n\n/** The Sentry Browser SDK Backend. */\r\nvar BrowserBackend = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BrowserBackend, _super);\r\n    function BrowserBackend() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserBackend.prototype.install = function () {\r\n        // We are only called by the client if the SDK is enabled and a valid Dsn\r\n        // has been configured. If no Dsn is present, this indicates a programming\r\n        // error.\r\n        var dsn = this.options.dsn;\r\n        if (!dsn) {\r\n            throw new core.SentryError('Invariant exception: install() must not be called when disabled');\r\n        }\r\n        Error.stackTraceLimit = 50;\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    BrowserBackend.prototype.setupTransport = function () {\r\n        if (!this.options.dsn) {\r\n            // We return the noop transport here in case there is no Dsn.\r\n            return _super.prototype.setupTransport.call(this);\r\n        }\r\n        var transportOptions = this.options.transportOptions ? this.options.transportOptions : { dsn: this.options.dsn };\r\n        if (this.options.transport) {\r\n            return new this.options.transport(transportOptions);\r\n        }\r\n        else if (supports_6()) {\r\n            return new BeaconTransport(transportOptions);\r\n        }\r\n        else if (supports_4()) {\r\n            return new FetchTransport(transportOptions);\r\n        }\r\n        return new XHRTransport(transportOptions);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var event, ex, ex, name_1, message, ex, ex;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(is_2(exception) && exception.error)) return [3 /*break*/, 1];\r\n                        ex = exception;\r\n                        exception = ex.error; // tslint:disable-line:no-parameter-reassignment\r\n                        event = eventFromStacktrace(computeStackTrace(exception));\r\n                        return [3 /*break*/, 7];\r\n                    case 1:\r\n                        if (!(is_3(exception) || is_4(exception))) return [3 /*break*/, 3];\r\n                        ex = exception;\r\n                        name_1 = ex.name || (is_3(ex) ? 'DOMError' : 'DOMException');\r\n                        message = ex.message ? name_1 + \": \" + ex.message : name_1;\r\n                        return [4 /*yield*/, this.eventFromMessage(message, undefined, hint)];\r\n                    case 2:\r\n                        event = _a.sent();\r\n                        addExceptionTypeValue(event, message);\r\n                        return [3 /*break*/, 7];\r\n                    case 3:\r\n                        if (!is_1(exception)) return [3 /*break*/, 4];\r\n                        // we have a real Error object, do nothing\r\n                        event = eventFromStacktrace(computeStackTrace(exception));\r\n                        return [3 /*break*/, 7];\r\n                    case 4:\r\n                        if (!(is_10(exception) && hint && hint.syntheticException)) return [3 /*break*/, 5];\r\n                        ex = exception;\r\n                        event = eventFromPlainObject(ex, hint.syntheticException);\r\n                        addExceptionTypeValue(event, 'Custom Object');\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        ex = exception;\r\n                        return [4 /*yield*/, this.eventFromMessage(ex, undefined, hint)];\r\n                    case 6:\r\n                        event = _a.sent();\r\n                        addExceptionTypeValue(event, \"\" + ex);\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        event = tslib_1.__assign({}, event, { event_id: hint && hint.event_id, exception: tslib_1.__assign({}, event.exception, { mechanism: {\r\n                                    handled: true,\r\n                                    type: 'generic',\r\n                                } }) });\r\n                        return [2 /*return*/, event];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\r\n        if (level === void 0) { level = dist_1.Info; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var event, stacktrace, frames_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                event = {\r\n                    event_id: hint && hint.event_id,\r\n                    level: level,\r\n                    message: message,\r\n                };\r\n                if (this.options.attachStacktrace && hint && hint.syntheticException) {\r\n                    stacktrace = computeStackTrace(hint.syntheticException);\r\n                    frames_1 = prepareFramesForEvent(stacktrace.stack);\r\n                    event.stacktrace = {\r\n                        frames: frames_1,\r\n                    };\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        });\r\n    };\r\n    return BrowserBackend;\r\n}(core.BaseBackend));\n\nvar SDK_NAME = 'sentry.javascript.browser';\r\nvar SDK_VERSION = '4.5.0';\n\n/**\r\n * The Sentry Browser SDK Client.\r\n *\r\n * @see BrowserOptions for documentation on configuration options.\r\n * @see SentryClient for usage documentation.\r\n */\r\nvar BrowserClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BrowserClient, _super);\r\n    /**\r\n     * Creates a new Browser SDK instance.\r\n     *\r\n     * @param options Configuration options for this SDK.\r\n     */\r\n    function BrowserClient(options) {\r\n        return _super.call(this, BrowserBackend, options) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    BrowserClient.prototype.prepareEvent = function (event, scope, hint) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                event.platform = event.platform || 'javascript';\r\n                event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\r\n                        {\r\n                            name: 'npm:@sentry/browser',\r\n                            version: SDK_VERSION,\r\n                        },\r\n                    ]), version: SDK_VERSION });\r\n                return [2 /*return*/, _super.prototype.prepareEvent.call(this, event, scope, hint)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Show a report dialog to the user to send feedback to a specific event.\r\n     *\r\n     * @param options Set individual options for the dialog\r\n     */\r\n    BrowserClient.prototype.showReportDialog = function (options) {\r\n        if (options === void 0) { options = {}; }\r\n        // doesn't work without a document (React Native)\r\n        var document = misc_3().document;\r\n        if (!document) {\r\n            return;\r\n        }\r\n        var dsn = options.dsn || this.getDsn();\r\n        if (!options.eventId) {\r\n            throw new core.SentryError('Missing `eventId` option in showReportDialog call');\r\n        }\r\n        if (!dsn) {\r\n            throw new core.SentryError('Missing `Dsn` option in showReportDialog call');\r\n        }\r\n        var script = document.createElement('script');\r\n        script.async = true;\r\n        script.src = new core.API(dsn).getReportDialogEndpoint(options);\r\n        (document.head || document.body).appendChild(script);\r\n    };\r\n    return BrowserClient;\r\n}(core.BaseClient));\n\nvar logger_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n// TODO: Implement different loggers for different environments\nvar global = misc.getGlobalObject();\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this.enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this.enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this.enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc.consoleSandbox(function () {\n            global.console.log(\"Sentry Logger [Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc.consoleSandbox(function () {\n            global.console.warn(\"Sentry Logger [Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this.enabled) {\n            return;\n        }\n        misc.consoleSandbox(function () {\n            global.console.error(\"Sentry Logger [Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\nvar logger = new Logger();\nexports.logger = logger;\n\n});\n\nunwrapExports(logger_1);\nvar logger_2 = logger_1.logger;\n\nvar debounceDuration = 1000;\r\nvar keypressTimeout;\r\nvar lastCapturedEvent;\r\nvar ignoreOnError = 0;\r\n/** JSDoc */\r\nfunction shouldIgnoreOnError() {\r\n    return ignoreOnError > 0;\r\n}\r\n/** JSDoc */\r\nfunction ignoreNextOnError() {\r\n    // onerror should trigger before setTimeout\r\n    ignoreOnError += 1;\r\n    setTimeout(function () {\r\n        ignoreOnError -= 1;\r\n    });\r\n}\r\n/**\r\n * Instruments the given function and sends an event to Sentry every time the\r\n * function throws an exception.\r\n *\r\n * @param fn A function to wrap.\r\n * @returns The wrapped function.\r\n */\r\nfunction wrap(fn, options, before) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!is_6(fn)) {\r\n        return fn;\r\n    }\r\n    try {\r\n        // We don't wanna wrap it twice\r\n        if (fn.__sentry__) {\r\n            return fn;\r\n        }\r\n        // If this has already been wrapped in the past, return that wrapped function\r\n        if (fn.__sentry_wrapped__) {\r\n            return fn.__sentry_wrapped__;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just accessing custom props in some Selenium environments\r\n        // can cause a \"Permission denied\" exception (see raven-js#495).\r\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\r\n        return fn;\r\n    }\r\n    var sentryWrapped = function () {\r\n        var _this = this;\r\n        if (before && is_6(before)) {\r\n            before.apply(this, arguments);\r\n        }\r\n        var args = Array.prototype.slice.call(arguments);\r\n        try {\r\n            // Attempt to invoke user-land function\r\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\r\n            //       means Raven caught an error invoking your application code. This is\r\n            //       expected behavior and NOT indicative of a bug with Raven.js.\r\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\r\n            if (fn.handleEvent) {\r\n                return fn.handleEvent.apply(this, wrappedArguments);\r\n            }\r\n            else {\r\n                return fn.apply(this, wrappedArguments);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            ignoreNextOnError();\r\n            core.withScope(function (scope) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    scope.addEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                        var processedEvent;\r\n                        return tslib_1.__generator(this, function (_a) {\r\n                            processedEvent = tslib_1.__assign({}, event);\r\n                            if (options.mechanism) {\r\n                                processedEvent.exception = processedEvent.exception || {};\r\n                                processedEvent.exception.mechanism = options.mechanism;\r\n                            }\r\n                            processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: object_6(args, 2) });\r\n                            return [2 /*return*/, processedEvent];\r\n                        });\r\n                    }); });\r\n                    core.captureException(ex);\r\n                    return [2 /*return*/];\r\n                });\r\n            }); });\r\n            throw ex;\r\n        }\r\n    };\r\n    // Accessing some objects may throw\r\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\r\n    try {\r\n        for (var property in fn) {\r\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\r\n                sentryWrapped[property] = fn[property];\r\n            }\r\n        }\r\n    }\r\n    catch (_oO) { } // tslint:disable-line:no-empty\r\n    sentryWrapped.prototype = fn.prototype;\r\n    fn.__sentry_wrapped__ = sentryWrapped;\r\n    // Signal that this function has been wrapped/filled already\r\n    // for both debugging and to prevent it to being wrapped/filled twice\r\n    sentryWrapped.__sentry__ = true;\r\n    sentryWrapped.__sentry_original__ = fn;\r\n    return sentryWrapped;\r\n}\r\n/**\r\n * Wraps addEventListener to capture UI breadcrumbs\r\n * @param eventName the event name (e.g. \"click\")\r\n * @returns wrapped breadcrumb events handler\r\n */\r\nfunction breadcrumbEventHandler(eventName) {\r\n    return function (event) {\r\n        // reset keypress timeout; e.g. triggering a 'click' after\r\n        // a 'keypress' will reset the keypress debounce so that a new\r\n        // set of keypresses can be recorded\r\n        keypressTimeout = undefined;\r\n        // It's possible this handler might trigger multiple times for the same\r\n        // event (e.g. event propagation through node ancestors). Ignore if we've\r\n        // already captured the event.\r\n        if (lastCapturedEvent === event) {\r\n            return;\r\n        }\r\n        lastCapturedEvent = event;\r\n        // try/catch both:\r\n        // - accessing event.target (see getsentry/raven-js#838, #768)\r\n        // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\r\n        //   can throw an exception in some circumstances.\r\n        var target;\r\n        try {\r\n            target = misc_5(event.target);\r\n        }\r\n        catch (e) {\r\n            target = '<unknown>';\r\n        }\r\n        core.getCurrentHub().addBreadcrumb({\r\n            category: \"ui.\" + eventName,\r\n            message: target,\r\n        }, {\r\n            event: event,\r\n            name: eventName,\r\n        });\r\n    };\r\n}\r\n/**\r\n * Wraps addEventListener to capture keypress UI events\r\n * @returns wrapped keypress events handler\r\n */\r\nfunction keypressEventHandler() {\r\n    // TODO: if somehow user switches keypress target before\r\n    //       debounce timeout is triggered, we will only capture\r\n    //       a single breadcrumb from the FIRST target (acceptable?)\r\n    return function (event) {\r\n        var target;\r\n        try {\r\n            target = event.target;\r\n        }\r\n        catch (e) {\r\n            // just accessing event properties can throw an exception in some rare circumstances\r\n            // see: https://github.com/getsentry/raven-js/issues/838\r\n            return;\r\n        }\r\n        var tagName = target && target.tagName;\r\n        // only consider keypress events on actual input elements\r\n        // this will disregard keypresses targeting body (e.g. tabbing\r\n        // through elements, hotkeys, etc)\r\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\r\n            return;\r\n        }\r\n        // record first keypress in a series, but ignore subsequent\r\n        // keypresses until debounce clears\r\n        if (!keypressTimeout) {\r\n            breadcrumbEventHandler('input')(event);\r\n        }\r\n        clearTimeout(keypressTimeout);\r\n        keypressTimeout = setTimeout(function () {\r\n            keypressTimeout = undefined;\r\n        }, debounceDuration);\r\n    };\r\n}\n\n/** Global handlers */\r\nvar GlobalHandlers = /** @class */ (function () {\r\n    /** JSDoc */\r\n    function GlobalHandlers(options) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = GlobalHandlers.id;\r\n        this.options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GlobalHandlers.prototype.setupOnce = function () {\r\n        subscribe(function (stack, _, error) {\r\n            // TODO: use stack.context to get a valuable information from TraceKit, eg.\r\n            // [\r\n            //   0: \"  })\"\r\n            //   1: \"\"\r\n            //   2: \"  function foo () {\"\r\n            //   3: \"    Sentry.captureException('some error')\"\r\n            //   4: \"    Sentry.captureMessage('some message')\"\r\n            //   5: \"    throw 'foo'\"\r\n            //   6: \"  }\"\r\n            //   7: \"\"\r\n            //   8: \"  function bar () {\"\r\n            //   9: \"    foo();\"\r\n            //   10: \"  }\"\r\n            // ]\r\n            if (shouldIgnoreOnError()) {\r\n                return;\r\n            }\r\n            var self = core.getCurrentHub().getIntegration(GlobalHandlers);\r\n            if (self) {\r\n                core.getCurrentHub().captureEvent(self.eventFromGlobalHandler(stack), { originalException: error, data: { stack: stack } });\r\n            }\r\n        });\r\n        if (this.options.onerror) {\r\n            logger_2.log('Global Handler attached: onerror');\r\n            installGlobalHandler();\r\n        }\r\n        if (this.options.onunhandledrejection) {\r\n            logger_2.log('Global Handler attached: onunhandledrejection');\r\n            installGlobalUnhandledRejectionHandler();\r\n        }\r\n    };\r\n    /** JSDoc */\r\n    GlobalHandlers.prototype.eventFromGlobalHandler = function (stacktrace) {\r\n        var event = eventFromStacktrace(stacktrace);\r\n        return tslib_1.__assign({}, event, { exception: tslib_1.__assign({}, event.exception, { mechanism: {\r\n                    data: {\r\n                        mode: stacktrace.mode,\r\n                    },\r\n                    handled: false,\r\n                    type: stacktrace.mechanism,\r\n                } }) });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GlobalHandlers.id = 'GlobalHandlers';\r\n    return GlobalHandlers;\r\n}());\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\r\nvar TryCatch = /** @class */ (function () {\r\n    function TryCatch() {\r\n        /** JSDoc */\r\n        this.ignoreOnError = 0;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = TryCatch.id;\r\n    }\r\n    /** JSDoc */\r\n    TryCatch.prototype.wrapTimeFunction = function (original) {\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var originalCallback = args[0];\r\n            args[0] = wrap(originalCallback, {\r\n                mechanism: {\r\n                    data: { function: getFunctionName(original) },\r\n                    handled: true,\r\n                    type: 'instrument',\r\n                },\r\n            });\r\n            return original.apply(this, args);\r\n        };\r\n    };\r\n    /** JSDoc */\r\n    TryCatch.prototype.wrapRAF = function (original) {\r\n        return function (callback) {\r\n            return original(wrap(callback, {\r\n                mechanism: {\r\n                    data: {\r\n                        function: 'requestAnimationFrame',\r\n                        handler: getFunctionName(original),\r\n                    },\r\n                    handled: true,\r\n                    type: 'instrument',\r\n                },\r\n            }));\r\n        };\r\n    };\r\n    /** JSDoc */\r\n    TryCatch.prototype.wrapEventTarget = function (target) {\r\n        var global = misc_3();\r\n        var proto = global[target] && global[target].prototype;\r\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\r\n            return;\r\n        }\r\n        object_4(proto, 'addEventListener', function (original) {\r\n            return function (eventName, fn, options) {\r\n                try {\r\n                    fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\r\n                        mechanism: {\r\n                            data: {\r\n                                function: 'handleEvent',\r\n                                handler: getFunctionName(fn),\r\n                                target: target,\r\n                            },\r\n                            handled: true,\r\n                            type: 'instrument',\r\n                        },\r\n                    });\r\n                }\r\n                catch (err) {\r\n                    // can sometimes get 'Permission denied to access property \"handle Event'\r\n                }\r\n                // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\r\n                // so that we don't have more than one wrapper function\r\n                var before;\r\n                var clickHandler;\r\n                var keypressHandler;\r\n                if (target === 'EventTarget' || target === 'Node') {\r\n                    // NOTE: generating multiple handlers per addEventListener invocation, should\r\n                    //       revisit and verify we can just use one (almost certainly)\r\n                    clickHandler = breadcrumbEventHandler('click');\r\n                    keypressHandler = keypressEventHandler();\r\n                    before = function (event) {\r\n                        // need to intercept every DOM event in `before` argument, in case that\r\n                        // same wrapped method is re-used for different events (e.g. mousemove THEN click)\r\n                        // see #724\r\n                        if (!event) {\r\n                            return;\r\n                        }\r\n                        var eventType;\r\n                        try {\r\n                            eventType = event.type;\r\n                        }\r\n                        catch (e) {\r\n                            // just accessing event properties can throw an exception in some rare circumstances\r\n                            // see: https://github.com/getsentry/raven-js/issues/838\r\n                            return;\r\n                        }\r\n                        if (eventType === 'click') {\r\n                            return clickHandler(event);\r\n                        }\r\n                        else if (eventType === 'keypress') {\r\n                            return keypressHandler(event);\r\n                        }\r\n                    };\r\n                }\r\n                return original.call(this, eventName, wrap(fn, {\r\n                    mechanism: {\r\n                        data: {\r\n                            function: 'addEventListener',\r\n                            handler: getFunctionName(fn),\r\n                            target: target,\r\n                        },\r\n                        handled: true,\r\n                        type: 'instrument',\r\n                    },\r\n                }, before), options);\r\n            };\r\n        });\r\n        object_4(proto, 'removeEventListener', function (original) {\r\n            return function (eventName, fn, options) {\r\n                var callback = fn;\r\n                try {\r\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\r\n                }\r\n                catch (e) {\r\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\r\n                }\r\n                return original.call(this, eventName, callback, options);\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Wrap timer functions and event targets to catch errors\r\n     * and provide better metadata.\r\n     */\r\n    TryCatch.prototype.setupOnce = function () {\r\n        this.ignoreOnError = this.ignoreOnError;\r\n        var global = misc_3();\r\n        object_4(global, 'setTimeout', this.wrapTimeFunction.bind(this));\r\n        object_4(global, 'setInterval', this.wrapTimeFunction.bind(this));\r\n        object_4(global, 'requestAnimationFrame', this.wrapRAF.bind(this));\r\n        [\r\n            'EventTarget',\r\n            'Window',\r\n            'Node',\r\n            'ApplicationCache',\r\n            'AudioTrackList',\r\n            'ChannelMergerNode',\r\n            'CryptoOperation',\r\n            'EventSource',\r\n            'FileReader',\r\n            'HTMLUnknownElement',\r\n            'IDBDatabase',\r\n            'IDBRequest',\r\n            'IDBTransaction',\r\n            'KeyOperation',\r\n            'MediaController',\r\n            'MessagePort',\r\n            'ModalWindow',\r\n            'Notification',\r\n            'SVGElementInstance',\r\n            'Screen',\r\n            'TextTrack',\r\n            'TextTrackCue',\r\n            'TextTrackList',\r\n            'WebSocket',\r\n            'WebSocketWorker',\r\n            'Worker',\r\n            'XMLHttpRequest',\r\n            'XMLHttpRequestEventTarget',\r\n            'XMLHttpRequestUpload',\r\n        ].forEach(this.wrapEventTarget.bind(this));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TryCatch.id = 'TryCatch';\r\n    return TryCatch;\r\n}());\r\n/**\r\n * Safely extract function name from itself\r\n */\r\nfunction getFunctionName(fn) {\r\n    try {\r\n        return (fn && fn.name) || '<anonymous>';\r\n    }\r\n    catch (e) {\r\n        // Just accessing custom props in some Selenium environments\r\n        // can cause a \"Permission denied\" exception (see raven-js#495).\r\n        return '<anonymous>';\r\n    }\r\n}\n\nvar global$3 = misc_3();\r\nvar lastHref;\r\n/** Default Breadcrumbs instrumentations */\r\nvar Breadcrumbs = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function Breadcrumbs(options) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = Breadcrumbs.id;\r\n        this.options = tslib_1.__assign({ beacon: true, console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\r\n    }\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentBeacon = function () {\r\n        if (!supports_6()) {\r\n            return;\r\n        }\r\n        /** JSDoc */\r\n        function beaconReplacementFunction(originalBeaconFunction) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var url = args[0];\r\n                var data = args[1];\r\n                // If the browser successfully queues the request for delivery, the method returns \"true\" and returns \"false\" otherwise.\r\n                // https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API/Using_the_Beacon_API\r\n                var result = originalBeaconFunction.apply(this, args);\r\n                var client = core.getCurrentHub().getClient();\r\n                var dsn = client && client.getDsn();\r\n                if (dsn) {\r\n                    var filterUrl = new core.API(dsn).getStoreEndpoint();\r\n                    // if Sentry key appears in URL, don't capture it as a request\r\n                    // but rather as our own 'sentry' type breadcrumb\r\n                    if (filterUrl && string_4(url, filterUrl)) {\r\n                        addSentryBreadcrumb(data);\r\n                        return result;\r\n                    }\r\n                }\r\n                // What is wrong with you TypeScript...\r\n                var breadcrumbData = {\r\n                    category: 'beacon',\r\n                    data: data,\r\n                    type: 'http',\r\n                };\r\n                if (!result) {\r\n                    breadcrumbData.level = dist_1.Error;\r\n                }\r\n                Breadcrumbs.addBreadcrumb(breadcrumbData, {\r\n                    input: args,\r\n                    result: result,\r\n                });\r\n                return result;\r\n            };\r\n        }\r\n        object_4(global$3.navigator, 'sendBeacon', beaconReplacementFunction);\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentConsole = function () {\r\n        if (!('console' in global$3)) {\r\n            return;\r\n        }\r\n        ['debug', 'info', 'warn', 'error', 'log'].forEach(function (level) {\r\n            if (!(level in global$3.console)) {\r\n                return;\r\n            }\r\n            object_4(global$3.console, level, function (originalConsoleLevel) {\r\n                return function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    var breadcrumbData = {\r\n                        category: 'console',\r\n                        data: {\r\n                            extra: {\r\n                                arguments: object_6(args, 2),\r\n                            },\r\n                            logger: 'console',\r\n                        },\r\n                        level: dist_1.fromString(level),\r\n                        message: string_3(args, ' '),\r\n                    };\r\n                    if (level === 'assert') {\r\n                        if (args[0] === false) {\r\n                            breadcrumbData.message = \"Assertion failed: \" + (string_3(args.slice(1), ' ') || 'console.assert');\r\n                            breadcrumbData.data.extra.arguments = object_6(args.slice(1), 2);\r\n                        }\r\n                    }\r\n                    Breadcrumbs.addBreadcrumb(breadcrumbData, {\r\n                        input: args,\r\n                        level: level,\r\n                    });\r\n                    // this fails for some browsers. :(\r\n                    if (originalConsoleLevel) {\r\n                        Function.prototype.apply.call(originalConsoleLevel, global$3.console, args);\r\n                    }\r\n                };\r\n            });\r\n        });\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentDOM = function () {\r\n        if (!('document' in global$3)) {\r\n            return;\r\n        }\r\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\r\n        // to the document. Do this before we instrument addEventListener.\r\n        global$3.document.addEventListener('click', breadcrumbEventHandler('click'), false);\r\n        global$3.document.addEventListener('keypress', keypressEventHandler(), false);\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentFetch = function () {\r\n        if (!supports_5()) {\r\n            return;\r\n        }\r\n        object_4(global$3, 'fetch', function (originalFetch) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var fetchInput = args[0];\r\n                var method = 'GET';\r\n                var url;\r\n                if (typeof fetchInput === 'string') {\r\n                    url = fetchInput;\r\n                }\r\n                else if ('Request' in global$3 && fetchInput instanceof Request) {\r\n                    url = fetchInput.url;\r\n                    if (fetchInput.method) {\r\n                        method = fetchInput.method;\r\n                    }\r\n                }\r\n                else {\r\n                    url = String(fetchInput);\r\n                }\r\n                if (args[1] && args[1].method) {\r\n                    method = args[1].method;\r\n                }\r\n                var client = core.getCurrentHub().getClient();\r\n                var dsn = client && client.getDsn();\r\n                if (dsn) {\r\n                    var filterUrl = new core.API(dsn).getStoreEndpoint();\r\n                    // if Sentry key appears in URL, don't capture it as a request\r\n                    // but rather as our own 'sentry' type breadcrumb\r\n                    if (filterUrl && string_4(url, filterUrl)) {\r\n                        if (method === 'POST' && args[1] && args[1].body) {\r\n                            addSentryBreadcrumb(args[1].body);\r\n                        }\r\n                        return originalFetch.apply(global$3, args);\r\n                    }\r\n                }\r\n                var fetchData = {\r\n                    method: method,\r\n                    url: url,\r\n                };\r\n                return originalFetch\r\n                    .apply(global$3, args)\r\n                    .then(function (response) {\r\n                    fetchData.status_code = response.status;\r\n                    Breadcrumbs.addBreadcrumb({\r\n                        category: 'fetch',\r\n                        data: fetchData,\r\n                        type: 'http',\r\n                    }, {\r\n                        input: args,\r\n                        response: response,\r\n                    });\r\n                    return response;\r\n                })\r\n                    .catch(function (error) {\r\n                    Breadcrumbs.addBreadcrumb({\r\n                        category: 'fetch',\r\n                        data: fetchData,\r\n                        level: dist_1.Error,\r\n                        type: 'http',\r\n                    }, {\r\n                        error: error,\r\n                        input: args,\r\n                    });\r\n                    throw error;\r\n                });\r\n            };\r\n        });\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentHistory = function () {\r\n        var _this = this;\r\n        if (!supports_9()) {\r\n            return;\r\n        }\r\n        var captureUrlChange = function (from, to) {\r\n            var parsedLoc = misc_7(global$3.location.href);\r\n            var parsedTo = misc_7(to);\r\n            var parsedFrom = misc_7(from);\r\n            // Initial pushState doesn't provide `from` information\r\n            if (!parsedFrom.path) {\r\n                parsedFrom = parsedLoc;\r\n            }\r\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\r\n            // not the previous (from) value, we need to track the value of the current URL\r\n            // state ourselves\r\n            lastHref = to;\r\n            // Use only the path component of the URL if the URL matches the current\r\n            // document (almost all the time when using pushState)\r\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\r\n                // tslint:disable-next-line:no-parameter-reassignment\r\n                to = parsedTo.relative;\r\n            }\r\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\r\n                // tslint:disable-next-line:no-parameter-reassignment\r\n                from = parsedFrom.relative;\r\n            }\r\n            Breadcrumbs.addBreadcrumb({\r\n                category: 'navigation',\r\n                data: {\r\n                    from: from,\r\n                    to: to,\r\n                },\r\n            });\r\n        };\r\n        // record navigation (URL) changes\r\n        var oldOnPopState = global$3.onpopstate;\r\n        global$3.onpopstate = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var currentHref = global$3.location.href;\r\n            captureUrlChange(lastHref, currentHref);\r\n            if (oldOnPopState) {\r\n                return oldOnPopState.apply(_this, args);\r\n            }\r\n        };\r\n        /** JSDoc */\r\n        function historyReplacementFunction(originalHistoryFunction) {\r\n            // note history.pushState.length is 0; intentionally not declaring\r\n            // params to preserve 0 arity\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var url = args.length > 2 ? args[2] : undefined;\r\n                // url argument is optional\r\n                if (url) {\r\n                    // coerce to string (this is what pushState does)\r\n                    captureUrlChange(lastHref, String(url));\r\n                }\r\n                return originalHistoryFunction.apply(this, args);\r\n            };\r\n        }\r\n        object_4(global$3.history, 'pushState', historyReplacementFunction);\r\n        object_4(global$3.history, 'replaceState', historyReplacementFunction);\r\n    };\r\n    /** JSDoc */\r\n    Breadcrumbs.prototype.instrumentXHR = function () {\r\n        if (!('XMLHttpRequest' in global$3)) {\r\n            return;\r\n        }\r\n        /** JSDoc */\r\n        function wrapProp(prop, xhr) {\r\n            // TODO: Fix XHR types\r\n            if (prop in xhr && is_6(xhr[prop])) {\r\n                object_4(xhr, prop, function (original) {\r\n                    return wrap(original, {\r\n                        mechanism: {\r\n                            data: {\r\n                                function: prop,\r\n                                handler: (original && original.name) || '<anonymous>',\r\n                            },\r\n                            handled: true,\r\n                            type: 'instrument',\r\n                        },\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        var xhrproto = XMLHttpRequest.prototype;\r\n        object_4(xhrproto, 'open', function (originalOpen) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var url = args[1];\r\n                this.__sentry_xhr__ = {\r\n                    method: args[0],\r\n                    url: args[1],\r\n                };\r\n                var client = core.getCurrentHub().getClient();\r\n                var dsn = client && client.getDsn();\r\n                if (dsn) {\r\n                    var filterUrl = new core.API(dsn).getStoreEndpoint();\r\n                    // if Sentry key appears in URL, don't capture it as a request\r\n                    // but rather as our own 'sentry' type breadcrumb\r\n                    if (is_7(url) && (filterUrl && string_4(url, filterUrl))) {\r\n                        this.__sentry_own_request__ = true;\r\n                    }\r\n                }\r\n                return originalOpen.apply(this, args);\r\n            };\r\n        });\r\n        object_4(xhrproto, 'send', function (originalSend) {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var xhr = this; // tslint:disable-line:no-this-assignment\r\n                if (xhr.__sentry_own_request__) {\r\n                    addSentryBreadcrumb(args[0]);\r\n                }\r\n                /** JSDoc */\r\n                function onreadystatechangeHandler() {\r\n                    if (xhr.readyState === 4) {\r\n                        if (xhr.__sentry_own_request__) {\r\n                            return;\r\n                        }\r\n                        try {\r\n                            // touching statusCode in some platforms throws\r\n                            // an exception\r\n                            if (xhr.__sentry_xhr__) {\r\n                                xhr.__sentry_xhr__.status_code = xhr.status;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            /* do nothing */\r\n                        }\r\n                        Breadcrumbs.addBreadcrumb({\r\n                            category: 'xhr',\r\n                            data: xhr.__sentry_xhr__,\r\n                            type: 'http',\r\n                        }, {\r\n                            xhr: xhr,\r\n                        });\r\n                    }\r\n                }\r\n                ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\r\n                    wrapProp(prop, xhr);\r\n                });\r\n                if ('onreadystatechange' in xhr && is_6(xhr.onreadystatechange)) {\r\n                    object_4(xhr, 'onreadystatechange', function (original) {\r\n                        return wrap(original, {\r\n                            mechanism: {\r\n                                data: {\r\n                                    function: 'onreadystatechange',\r\n                                    handler: (original && original.name) || '<anonymous>',\r\n                                },\r\n                                handled: true,\r\n                                type: 'instrument',\r\n                            },\r\n                        }, onreadystatechangeHandler);\r\n                    });\r\n                }\r\n                else {\r\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\r\n                    // are free to set our own and capture the breadcrumb\r\n                    xhr.onreadystatechange = onreadystatechangeHandler;\r\n                }\r\n                return originalSend.apply(this, args);\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Helper that checks if integration is enabled on the client.\r\n     * @param breadcrumb Breadcrumb\r\n     * @param hint SentryBreadcrumbHint\r\n     */\r\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\r\n        if (core.getCurrentHub().getIntegration(Breadcrumbs)) {\r\n            core.getCurrentHub().addBreadcrumb(breadcrumb, hint);\r\n        }\r\n    };\r\n    /**\r\n     * Instrument browser built-ins w/ breadcrumb capturing\r\n     *  - Console API\r\n     *  - DOM API (click/typing)\r\n     *  - XMLHttpRequest API\r\n     *  - Fetch API\r\n     *  - History API\r\n     */\r\n    Breadcrumbs.prototype.setupOnce = function () {\r\n        if (this.options.console) {\r\n            this.instrumentConsole();\r\n        }\r\n        if (this.options.dom) {\r\n            this.instrumentDOM();\r\n        }\r\n        if (this.options.xhr) {\r\n            this.instrumentXHR();\r\n        }\r\n        if (this.options.fetch) {\r\n            this.instrumentFetch();\r\n        }\r\n        if (this.options.beacon) {\r\n            this.instrumentBeacon();\r\n        }\r\n        if (this.options.history) {\r\n            this.instrumentHistory();\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Breadcrumbs.id = 'Breadcrumbs';\r\n    return Breadcrumbs;\r\n}());\r\n/** JSDoc */\r\nfunction addSentryBreadcrumb(serializedData) {\r\n    // There's always something that can go wrong with deserialization...\r\n    try {\r\n        var event_1 = object_2(serializedData);\r\n        Breadcrumbs.addBreadcrumb({\r\n            category: 'sentry',\r\n            event_id: event_1.event_id,\r\n            level: event_1.level || dist_1.fromString('error'),\r\n            message: misc_8(event_1),\r\n        }, {\r\n            event: event_1,\r\n        });\r\n    }\r\n    catch (_oO) {\r\n        logger_2.error('Error while adding sentry type breadcrumb');\r\n    }\r\n}\n\nvar DEFAULT_KEY = 'cause';\r\nvar DEFAULT_LIMIT = 5;\r\n/** Adds SDK info to an event. */\r\nvar LinkedErrors = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function LinkedErrors(options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = LinkedErrors.id;\r\n        this.key = options.key || DEFAULT_KEY;\r\n        this.limit = options.limit || DEFAULT_LIMIT;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        core.addGlobalEventProcessor(function (event, hint) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var self;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                self = core.getCurrentHub().getIntegration(LinkedErrors);\r\n                if (self) {\r\n                    return [2 /*return*/, self.handler(event, hint)];\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.prototype.handler = function (event, hint) {\r\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\r\n            return event;\r\n        }\r\n        var linkedErrors = this.walkErrorTree(hint.originalException, this.key);\r\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\r\n        return event;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.prototype.walkErrorTree = function (error, key, stack) {\r\n        if (stack === void 0) { stack = []; }\r\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this.limit) {\r\n            return stack;\r\n        }\r\n        var stacktrace = computeStackTrace(error[key]);\r\n        var exception = exceptionFromStacktrace(stacktrace);\r\n        return this.walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinkedErrors.id = 'LinkedErrors';\r\n    return LinkedErrors;\r\n}());\n\nvar global$4 = misc_3();\r\n/** UserAgent */\r\nvar UserAgent = /** @class */ (function () {\r\n    function UserAgent() {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = UserAgent.id;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UserAgent.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        core.addGlobalEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var request;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (core.getCurrentHub().getIntegration(UserAgent)) {\r\n                    if (!global$4.navigator || !global$4.location) {\r\n                        return [2 /*return*/, event];\r\n                    }\r\n                    request = event.request || {};\r\n                    request.url = request.url || global$4.location.href;\r\n                    request.headers = request.headers || {};\r\n                    request.headers['User-Agent'] = global$4.navigator.userAgent;\r\n                    return [2 /*return*/, tslib_1.__assign({}, event, { request: request })];\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UserAgent.id = 'UserAgent';\r\n    return UserAgent;\r\n}());\n\n/** JSDoc */\r\nvar Ember = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function Ember(options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = Ember.id;\r\n        this.Ember =\r\n            options.Ember ||\r\n                misc_3().Ember;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Ember.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        if (!this.Ember) {\r\n            return;\r\n        }\r\n        var oldOnError = this.Ember.onerror;\r\n        this.Ember.onerror = function (error) {\r\n            if (core.getCurrentHub().getIntegration(Ember)) {\r\n                core.withScope(function (scope) {\r\n                    _this.addIntegrationToSdkInfo(scope);\r\n                    core.captureException(error);\r\n                });\r\n            }\r\n            if (typeof oldOnError === 'function') {\r\n                oldOnError.call(_this.Ember, error);\r\n            }\r\n            else if (_this.Ember.testing) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.Ember.RSVP.on('error', function (reason) {\r\n            if (core.getCurrentHub().getIntegration(Ember)) {\r\n                core.withScope(function (scope) {\r\n                    if (reason instanceof Error) {\r\n                        scope.setExtra('context', 'Unhandled Promise error detected');\r\n                        _this.addIntegrationToSdkInfo(scope);\r\n                        core.captureException(reason);\r\n                    }\r\n                    else {\r\n                        scope.setExtra('reason', reason);\r\n                        _this.addIntegrationToSdkInfo(scope);\r\n                        core.captureMessage('Unhandled Promise error detected');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Appends SDK integrations\r\n     * @param scope The scope currently used.\r\n     */\r\n    Ember.prototype.addIntegrationToSdkInfo = function (scope) {\r\n        var _this = this;\r\n        scope.addEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var integrations;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (event.sdk) {\r\n                    integrations = event.sdk.integrations || [];\r\n                    event.sdk = tslib_1.__assign({}, event.sdk, { integrations: tslib_1.__spread(integrations, ['ember']) });\r\n                }\r\n                return [2 /*return*/, event];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Ember.id = 'Ember';\r\n    return Ember;\r\n}());\n\n/** JSDoc */\r\nvar Vue = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function Vue(options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = Vue.id;\r\n        this.Vue =\r\n            options.Vue ||\r\n                misc_3().Vue;\r\n    }\r\n    /** JSDoc */\r\n    Vue.prototype.formatComponentName = function (vm) {\r\n        if (vm.$root === vm) {\r\n            return 'root instance';\r\n        }\r\n        var name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\r\n        return ((name ? \"component <\" + name + \">\" : 'anonymous component') +\r\n            (vm._isVue && vm.$options.__file ? \" at \" + vm.$options.__file : ''));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Vue.prototype.setupOnce = function () {\r\n        var _this = this;\r\n        if (!this.Vue || !this.Vue.config) {\r\n            return;\r\n        }\r\n        var oldOnError = this.Vue.config.errorHandler;\r\n        this.Vue.config.errorHandler = function (error, vm, info) {\r\n            var metadata = {};\r\n            if (is_10(vm)) {\r\n                metadata.componentName = _this.formatComponentName(vm);\r\n                metadata.propsData = vm.$options.propsData;\r\n            }\r\n            if (!is_5(info)) {\r\n                metadata.lifecycleHook = info;\r\n            }\r\n            if (core.getCurrentHub().getIntegration(Vue)) {\r\n                core.withScope(function (scope) {\r\n                    Object.keys(metadata).forEach(function (key) {\r\n                        scope.setExtra(key, metadata[key]);\r\n                    });\r\n                    scope.addEventProcessor(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                        var integrations;\r\n                        return tslib_1.__generator(this, function (_a) {\r\n                            if (event.sdk) {\r\n                                integrations = event.sdk.integrations || [];\r\n                                event.sdk = tslib_1.__assign({}, event.sdk, { integrations: tslib_1.__spread(integrations, ['vue']) });\r\n                            }\r\n                            return [2 /*return*/, event];\r\n                        });\r\n                    }); });\r\n                    core.captureException(error);\r\n                });\r\n            }\r\n            if (typeof oldOnError === 'function') {\r\n                oldOnError.call(_this.Vue, error, vm, info);\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Vue.id = 'Vue';\r\n    return Vue;\r\n}());\n\n/** JSDoc */\r\nvar ReportTypes;\r\n(function (ReportTypes) {\r\n    /** JSDoc */\r\n    ReportTypes[\"Crash\"] = \"crash\";\r\n    /** JSDoc */\r\n    ReportTypes[\"Deprecation\"] = \"deprecation\";\r\n    /** JSDoc */\r\n    ReportTypes[\"Intervention\"] = \"intervention\";\r\n})(ReportTypes || (ReportTypes = {}));\r\n/** Reporting API integration - https://w3c.github.io/reporting/ */\r\nvar ReportingObserver = /** @class */ (function () {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function ReportingObserver(options) {\r\n        if (options === void 0) { options = {\r\n            types: [ReportTypes.Crash, ReportTypes.Deprecation, ReportTypes.Intervention],\r\n        }; }\r\n        this.options = options;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.name = ReportingObserver.id;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReportingObserver.prototype.setupOnce = function () {\r\n        if (!supports_7()) {\r\n            return;\r\n        }\r\n        var observer = new (misc_3().ReportingObserver)(this.handler.bind(this), {\r\n            buffered: true,\r\n            types: this.options.types,\r\n        });\r\n        observer.observe();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReportingObserver.prototype.handler = function (reports) {\r\n        var e_1, _a;\r\n        if (!core.getCurrentHub().getIntegration(ReportingObserver)) {\r\n            return;\r\n        }\r\n        var _loop_1 = function (report) {\r\n            core.withScope(function (scope) {\r\n                scope.setExtra('url', report.url);\r\n                var label = \"ReportingObserver [\" + report.type + \"]\";\r\n                var details = 'No details available';\r\n                if (report.body) {\r\n                    // Object.keys doesn't work on ReportBody, as all properties are inheirted\r\n                    var plainBody = {};\r\n                    // tslint:disable-next-line:forin\r\n                    for (var prop in report.body) {\r\n                        plainBody[prop] = report.body[prop];\r\n                    }\r\n                    scope.setExtra('body', plainBody);\r\n                    if (report.type === ReportTypes.Crash) {\r\n                        var body = report.body;\r\n                        // A fancy way to create a message out of crashId OR reason OR both OR fallback\r\n                        details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\r\n                    }\r\n                    else {\r\n                        var body = report.body;\r\n                        details = body.message || details;\r\n                    }\r\n                }\r\n                core.captureMessage(label + \": \" + details);\r\n            });\r\n        };\r\n        try {\r\n            for (var reports_1 = tslib_1.__values(reports), reports_1_1 = reports_1.next(); !reports_1_1.done; reports_1_1 = reports_1.next()) {\r\n                var report = reports_1_1.value;\r\n                _loop_1(report);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (reports_1_1 && !reports_1_1.done && (_a = reports_1.return)) _a.call(reports_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReportingObserver.id = 'ReportingObserver';\r\n    return ReportingObserver;\r\n}());\n\n\n\nvar BrowserIntegrations = /*#__PURE__*/Object.freeze({\n\tGlobalHandlers: GlobalHandlers,\n\tTryCatch: TryCatch,\n\tBreadcrumbs: Breadcrumbs,\n\tLinkedErrors: LinkedErrors,\n\tUserAgent: UserAgent,\n\tEmber: Ember,\n\tVue: Vue,\n\tReportingObserver: ReportingObserver\n});\n\nvar defaultIntegrations = [\r\n    // Common\r\n    new core.Integrations.Dedupe(),\r\n    new core.Integrations.InboundFilters(),\r\n    new core.Integrations.FunctionToString(),\r\n    new core.Integrations.ExtraErrorData(),\r\n    // Native Wrappers\r\n    new TryCatch(),\r\n    new Breadcrumbs(),\r\n    // Global Handlers\r\n    new GlobalHandlers(),\r\n    // Misc\r\n    new LinkedErrors(),\r\n    new UserAgent(),\r\n];\r\n/**\r\n * The Sentry Browser SDK Client.\r\n *\r\n * To use this SDK, call the {@link init} function as early as possible when\r\n * loading the web page. To set context information or send manual events, use\r\n * the provided methods.\r\n *\r\n * @example\r\n * import { init } from '@sentry/browser';\r\n *\r\n * init({\r\n *   dsn: '__DSN__',\r\n *   // ...\r\n * });\r\n *\r\n * @example\r\n * import { configureScope } from '@sentry/browser';\r\n * configureScope((scope: Scope) => {\r\n *   scope.setExtra({ battery: 0.7 });\r\n *   scope.setTag({ user_mode: 'admin' });\r\n *   scope.setUser({ id: '4711' });\r\n * });\r\n *\r\n * @example\r\n * import { addBreadcrumb } from '@sentry/browser';\r\n * addBreadcrumb({\r\n *   message: 'My Breadcrumb',\r\n *   // ...\r\n * });\r\n *\r\n * @example\r\n * import * as Sentry from '@sentry/browser';\r\n * Sentry.captureMessage('Hello, world!');\r\n * Sentry.captureException(new Error('Good bye'));\r\n * Sentry.captureEvent({\r\n *   message: 'Manual',\r\n *   stacktrace: [\r\n *     // ...\r\n *   ],\r\n * });\r\n *\r\n * @see BrowserOptions for documentation on configuration options.\r\n */\r\nfunction init(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (options.defaultIntegrations === undefined) {\r\n        options.defaultIntegrations = defaultIntegrations;\r\n    }\r\n    core.initAndBind(BrowserClient, options);\r\n}\r\n/**\r\n * Present the user with a report dialog.\r\n *\r\n * @param options Everything is optional, we try to fetch all info need from the global scope.\r\n */\r\nfunction showReportDialog(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!options.eventId) {\r\n        options.eventId = core.getCurrentHub().lastEventId();\r\n    }\r\n    core.getCurrentHub().getClient().showReportDialog(options);\r\n}\r\n/**\r\n * This is the getter for lastEventId.\r\n *\r\n * @returns The last event id of a captured event.\r\n */\r\nfunction lastEventId() {\r\n    return core.getCurrentHub().lastEventId();\r\n}\r\n/**\r\n * This function is here to be API compatible with the loader\r\n */\r\nfunction forceLoad() {\r\n    // Noop\r\n}\r\n/**\r\n * This function is here to be API compatible with the loader\r\n */\r\nfunction onLoad(callback) {\r\n    callback();\r\n}\n\nvar INTEGRATIONS = tslib_1.__assign({}, core.Integrations, BrowserIntegrations);\n\nexports.addGlobalEventProcessor = core.addGlobalEventProcessor;\nexports.addBreadcrumb = core.addBreadcrumb;\nexports.captureException = core.captureException;\nexports.captureEvent = core.captureEvent;\nexports.captureMessage = core.captureMessage;\nexports.configureScope = core.configureScope;\nexports.withScope = core.withScope;\nexports.getHubFromCarrier = core.getHubFromCarrier;\nexports.getCurrentHub = core.getCurrentHub;\nexports.Hub = core.Hub;\nexports.Scope = core.Scope;\nexports.Integrations = INTEGRATIONS;\nexports.Transports = index$1;\nexports.Severity = dist_1;\nexports.Status = dist_2;\nexports.BrowserBackend = BrowserBackend;\nexports.BrowserClient = BrowserClient;\nexports.defaultIntegrations = defaultIntegrations;\nexports.forceLoad = forceLoad;\nexports.init = init;\nexports.lastEventId = lastEventId;\nexports.onLoad = onLoad;\nexports.showReportDialog = showReportDialog;\nexports.SDK_NAME = SDK_NAME;\nexports.SDK_VERSION = SDK_VERSION;\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/browser/dist/index.js\n// module id = rnrV\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\nexports.isError = isError;\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\nexports.isErrorEvent = isErrorEvent;\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\nexports.isDOMError = isDOMError;\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\nexports.isDOMException = isDOMException;\n/**\n * Checks whether given value's type is an undefined\n * {@link isUndefined}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isUndefined(wat) {\n    return wat === void 0;\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks whether given value's type is a function\n * {@link isFunction}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isFunction(wat) {\n    return typeof wat === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\nexports.isPrimitive = isPrimitive;\n/**\n * Checks whether given value's type is an array\n * {@link isArray}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isArray(wat) {\n    return Object.prototype.toString.call(wat) === '[object Array]';\n}\nexports.isArray = isArray;\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n/**\n * Checks whether given value's type is a NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n    return wat !== wat;\n}\nexports.isNaN = isNaN;\n//# sourceMappingURL=is.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/is.js\n// module id = sVPH\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\nfunction forget(promise) {\n    promise.catch(function (e) {\n        // TODO: Use a better logging mechanism\n        console.error(e);\n    });\n}\nexports.forget = forget;\n/**\n * Helper to filter an array with asynchronous callbacks.\n *\n * @param array An array containing items to filter.\n * @param predicate An async predicate evaluated on every item.\n * @param thisArg Optional value passed as \"this\" into the callback.\n * @returns An array containing only values where the callback returned true.\n */\nfunction filterAsync(array, predicate, thisArg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var verdicts;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, Promise.all(array.map(predicate, thisArg))];\n                case 1:\n                    verdicts = _a.sent();\n                    return [2 /*return*/, array.filter(function (_, index) { return verdicts[index]; })];\n            }\n        });\n    });\n}\nexports.filterAsync = filterAsync;\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/async.js\n// module id = ucAQ\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar object_1 = require(\"@sentry/utils/object\");\nvar dsn_1 = require(\"./dsn\");\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this.dsnObject = new dsn_1.Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this.dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this.getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this.dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + object_1.urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype.getBaseUrl = function () {\n        var dsn = this.dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this.dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this.dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this.dsnObject;\n        var endpoint = \"\" + this.getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexports.API = API;\n//# sourceMappingURL=api.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/core/dist/api.js\n// module id = yCKG\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar misc_1 = require(\"@sentry/utils/misc\");\nvar object_1 = require(\"@sentry/utils/object\");\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this.notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this.scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this.eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this.breadcrumbs = [];\n        /** User */\n        this.user = {};\n        /** Tags */\n        this.tags = {};\n        /** Extra */\n        this.extra = {};\n    }\n    /** Add internal on change listener. */\n    Scope.prototype.addScopeListener = function (callback) {\n        this.scopeListeners.push(callback);\n    };\n    /** Add new event processor that will be called after {@link applyToEvent}. */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this.eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype.notifyScopeListeners = function () {\n        var _this = this;\n        if (!this.notifyingListeners) {\n            this.notifyingListeners = true;\n            setTimeout(function () {\n                _this.scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this.notifyingListeners = false;\n            }, 0);\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype.notifyEventProcessors = function (event, hint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1, _a, processedEvent, _b, _c, processor, e_2, e_1_1;\n            return tslib_1.__generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        processedEvent = event;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 8, 9, 10]);\n                        _b = tslib_1.__values(tslib_1.__spread(getGlobalEventProcessors(), this.eventProcessors)), _c = _b.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_c.done) return [3 /*break*/, 7];\n                        processor = _c.value;\n                        _d.label = 3;\n                    case 3:\n                        _d.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, processor(tslib_1.__assign({}, processedEvent), hint)];\n                    case 4:\n                        processedEvent = _d.sent();\n                        if (processedEvent === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [3 /*break*/, 6];\n                    case 5:\n                        e_2 = _d.sent();\n                        return [3 /*break*/, 6];\n                    case 6:\n                        _c = _b.next();\n                        return [3 /*break*/, 2];\n                    case 7: return [3 /*break*/, 10];\n                    case 8:\n                        e_1_1 = _d.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 10];\n                    case 9:\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/, processedEvent];\n                }\n            });\n        });\n    };\n    /**\n     * Updates user context information for future events.\n     * @param user User context object to merge into current context.\n     */\n    Scope.prototype.setUser = function (user) {\n        this.user = object_1.safeNormalize(user);\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Updates tags context information for future events.\n     * @param tags Tags context object to merge into current context.\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this.tags = tslib_1.__assign({}, this.tags, (_a = {}, _a[key] = object_1.safeNormalize(value), _a));\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Updates extra context information for future events.\n     * @param extra context object to merge into current context.\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this.extra = tslib_1.__assign({}, this.extra, (_a = {}, _a[key] = object_1.safeNormalize(extra), _a));\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Sets the fingerprint on the scope to send with the events.\n     * @param fingerprint string[] to group events in Sentry.\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this.fingerprint = object_1.safeNormalize(fingerprint);\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Sets the level on the scope for future events.\n     * @param level string {@link Severity}\n     */\n    Scope.prototype.setLevel = function (level) {\n        this.level = object_1.safeNormalize(level);\n        this.notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        object_1.assign(newScope, scope, {\n            scopeListeners: [],\n        });\n        if (scope) {\n            newScope.extra = object_1.assign(scope.extra);\n            newScope.tags = object_1.assign(scope.tags);\n            newScope.breadcrumbs = tslib_1.__spread(scope.breadcrumbs);\n            newScope.eventProcessors = tslib_1.__spread(scope.eventProcessors);\n        }\n        return newScope;\n    };\n    /** Clears the current scope and resets its properties. */\n    Scope.prototype.clear = function () {\n        this.breadcrumbs = [];\n        this.tags = {};\n        this.extra = {};\n        this.user = {};\n        this.level = undefined;\n        this.fingerprint = undefined;\n        this.notifyScopeListeners();\n    };\n    /**\n     * Sets the breadcrumbs in the scope\n     * @param breadcrumbs Breadcrumb\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        this.breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this.breadcrumbs, [object_1.safeNormalize(breadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this.breadcrumbs, [object_1.safeNormalize(breadcrumb)]);\n        this.notifyScopeListeners();\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype.applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this.fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this.fingerprint);\n        }\n        else if (event.message) {\n            // If not, but we have message, use it instead\n            event.fingerprint = event.fingerprint.concat(event.message);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event SentryEvent\n     * @param hint May contain additional informartion about the original exception.\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     */\n    Scope.prototype.applyToEvent = function (event, hint, maxBreadcrumbs) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var hasNoBreadcrumbs;\n            return tslib_1.__generator(this, function (_a) {\n                if (this.extra && Object.keys(this.extra).length) {\n                    event.extra = tslib_1.__assign({}, this.extra, event.extra);\n                }\n                if (this.tags && Object.keys(this.tags).length) {\n                    event.tags = tslib_1.__assign({}, this.tags, event.tags);\n                }\n                if (this.user && Object.keys(this.user).length) {\n                    event.user = tslib_1.__assign({}, this.user, event.user);\n                }\n                if (this.level) {\n                    event.level = this.level;\n                }\n                this.applyFingerprint(event);\n                hasNoBreadcrumbs = !event.breadcrumbs || event.breadcrumbs.length === 0;\n                if (hasNoBreadcrumbs && this.breadcrumbs.length > 0) {\n                    event.breadcrumbs =\n                        maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                            ? this.breadcrumbs.slice(-maxBreadcrumbs)\n                            : this.breadcrumbs;\n                }\n                return [2 /*return*/, this.notifyEventProcessors(event, hint)];\n            });\n        });\n    };\n    return Scope;\n}());\nexports.Scope = Scope;\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = misc_1.getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\nexports.addGlobalEventProcessor = addGlobalEventProcessor;\n//# sourceMappingURL=scope.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/hub/dist/scope.js\n// module id = yZla\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = require(\"./is\");\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    if (max === 0 || !is_1.isString(str)) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\nexports.truncate = truncate;\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\nexports.snipLine = snipLine;\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\nexports.safeJoin = safeJoin;\n/**\n * Checks if given value is included in the target\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill\n * @param target source string\n * @param search string to be looked for\n * @returns An answer\n */\nfunction includes(target, search) {\n    if (search.length > target.length) {\n        return false;\n    }\n    else {\n        return target.indexOf(search) !== -1;\n    }\n}\nexports.includes = includes;\n//# sourceMappingURL=string.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@sentry/utils/string.js\n// module id = zGPE\n// module chunks = 0"],"sourceRoot":""}